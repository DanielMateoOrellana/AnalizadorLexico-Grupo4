Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNAR
    BREAK
    CASE
    COMILLA_DOBLE
    COMILLA_DOBLE_CADENA
    COMILLA_SIMPLE
    COMILLA_SIMPLE_CADENA
    CONTINUE
    DICT
    DIV_ASIGNAR
    DO
    DOSPUNTOS
    ENDWHILE
    FOREACH
    GLOBAL
    LBRACKET
    MAYOR_MENOR
    MENOR_MAYOR
    MODULO
    MULT_ASIGNAR
    POT_ASIGNAR
    PUNTO
    RBRACKET
    RESTA_ASIGNAR
    SET
    SUMA_ASIGNAR
    SWITCH
    TUPLE
    VARIABLE_OBJETO

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> asignacion
Rule 2     sentencia -> echo
Rule 3     sentencia -> estructuracontrol
Rule 4     sentencia -> comentario
Rule 5     sentencia -> declaracion_numeros
Rule 6     sentencia -> array
Rule 7     sentencia -> funcion
Rule 8     sentencia -> readline
Rule 9     sentencia -> ingreso_datos
Rule 10    sentencia -> objeto
Rule 11    asignacion -> VAR ASIGNACION valor EOL
Rule 12    echo -> ECHO valores EOL
Rule 13    valores -> valor
Rule 14    valores -> valor COMA valores
Rule 15    valor -> ENTERO
Rule 16    valor -> FLOTANTE
Rule 17    valor -> BOOLEANO
Rule 18    valor -> CADENA
Rule 19    valor -> VAR
Rule 20    valor -> VARIABLE_ARRAY
Rule 21    valor -> operacion
Rule 22    valor -> argumentologico
Rule 23    operacion -> ENTERO
Rule 24    operacion -> FLOTANTE
Rule 25    operacion -> ENTERO operador operacion
Rule 26    operacion -> FLOTANTE operador operacion
Rule 27    estructuracontrol -> while
Rule 28    estructuracontrol -> if
Rule 29    estructuracontrol -> for
Rule 30    while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
Rule 31    if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE
Rule 32    if -> if else
Rule 33    if -> if elseif else
Rule 34    if -> if elseif
Rule 35    elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE
Rule 36    elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif
Rule 37    else -> ELSE LBRACE lineas RBRACE
Rule 38    condicion -> argumentologico
Rule 39    condicion -> argumentologico conector_logico condicion
Rule 40    vacio -> EOL
Rule 41    conector_logico -> AND
Rule 42    conector_logico -> OR
Rule 43    valor_logico -> numero
Rule 44    valor_logico -> VAR
Rule 45    argumentologico -> VAR operador_logico VAR
Rule 46    argumentologico -> numero operador_logico numero
Rule 47    argumentologico -> VAR operador_logico numero
Rule 48    argumentologico -> VAR IGUAL BOOLEANO
Rule 49    argumentologico -> VAR IGUAL CADENA
Rule 50    argumentologico -> VAR DIFERENTE BOOLEANO
Rule 51    argumentologico -> VAR DIFERENTE CADENA
Rule 52    argumentologico -> numero operador_logico VAR
Rule 53    argumentologico -> BOOLEANO IGUAL VAR
Rule 54    argumentologico -> CADENA IGUAL VAR
Rule 55    argumentologico -> CADENA IGUAL CADENA
Rule 56    argumentologico -> CADENA DIFERENTE VAR
Rule 57    argumentologico -> CADENA DIFERENTE CADENA
Rule 58    argumentologico -> BOOLEANO
Rule 59    numero -> ENTERO
Rule 60    numero -> FLOTANTE
Rule 61    operador_logico -> IGUAL
Rule 62    operador_logico -> DIFERENTE
Rule 63    operador_logico -> MENOR
Rule 64    operador_logico -> MAYOR
Rule 65    operador_logico -> MENOR_IGUAL
Rule 66    operador_logico -> MAYOR_IGUAL
Rule 67    comentario -> COMNT
Rule 68    operador -> SUMA
Rule 69    operador -> RESTA
Rule 70    operador -> MULT
Rule 71    operador -> DIV
Rule 72    operador -> POT
Rule 73    declaracion_numeros -> VAR ASIGNACION numero EOL
Rule 74    array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
Rule 75    elementos -> lista
Rule 76    elementos -> diccionario
Rule 77    diccionario -> CADENA ASIGNACION MAYOR valor_dic
Rule 78    diccionario -> CADENA ASIGNACION MAYOR valor COMA diccionario
Rule 79    valor_dic -> numero
Rule 80    valor_dic -> CADENA
Rule 81    lista -> palabras
Rule 82    lista -> numeros
Rule 83    lista -> variables
Rule 84    palabras -> CADENA COMA palabras
Rule 85    palabras -> CADENA
Rule 86    numeros -> numero COMA numeros
Rule 87    numeros -> numero
Rule 88    variables -> VAR COMA variables
Rule 89    variables -> VAR
Rule 90    funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE
Rule 91    tipo_funcion -> FUNCION
Rule 92    tipo_funcion -> VARIABLE_FUNCION
Rule 93    final_funcion -> RETURN VAR EOL
Rule 94    final_funcion -> lineas final_funcion
Rule 95    cuerpo_funcion -> declaracion_numeros final_funcion
Rule 96    cuerpo_funcion -> array final_funcion
Rule 97    cuerpo_funcion -> estructuracontrol final_funcion
Rule 98    readline -> READLINE LPAREN CADENA RPAREN EOL
Rule 99    ingreso_datos -> VAR ASIGNACION readline
Rule 100   objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
Rule 101   cuerpo_objeto -> PUBLIC VAR EOL
Rule 102   cuerpo_objeto -> PUBLIC asignacion
Rule 103   mas_objetos -> cuerpo_objeto
Rule 104   mas_objetos -> cuerpo_objeto mas_objetos
Rule 105   atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL
Rule 106   mas_atributos -> atributo
Rule 107   mas_atributos -> atributo mas_atributos
Rule 108   for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
Rule 109   for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
Rule 110   linea -> ECHO CADENA EOL
Rule 111   linea -> ECHO VAR EOL
Rule 112   linea -> VAR ASIGNACION CADENA EOL
Rule 113   linea -> estructuracontrol
Rule 114   linea -> comentario
Rule 115   linea -> declaracion_numeros
Rule 116   linea -> array
Rule 117   lineas -> linea
Rule 118   lineas -> linea lineas

Terminals, with rules where they appear

AND                  : 41
ARRAY                : 74
ASIGNACION           : 11 73 74 77 78 99 100 105 112
ASIGNAR              : 
BOOLEANO             : 17 48 50 53 58
BREAK                : 
CADENA               : 18 49 51 54 55 55 56 57 57 77 78 80 84 85 98 105 110 112
CASE                 : 
CLASE                : 100
COMA                 : 14 78 84 86 88
COMILLA_DOBLE        : 
COMILLA_DOBLE_CADENA : 
COMILLA_SIMPLE       : 
COMILLA_SIMPLE_CADENA : 
COMNT                : 67
CONTINUE             : 
DICT                 : 
DIFERENTE            : 50 51 56 57 62
DIV                  : 71
DIV_ASIGNAR          : 
DO                   : 
DOSPUNTOS            : 
ECHO                 : 12 110 111
ELSE                 : 37
ELSEIF               : 35 36
ENDWHILE             : 
ENTERO               : 15 23 25 59
EOL                  : 11 12 40 73 74 93 98 100 101 105 108 109 110 111 112
FLOTANTE             : 16 24 26 60
FOR                  : 108 109
FOREACH              : 
FUNCION              : 91
FUNCTION             : 90
GLOBAL               : 
ID                   : 105
IF                   : 31
IGUAL                : 48 49 53 54 55 61
LBRACE               : 30 31 35 36 37 90 100 108 109
LBRACKET             : 
LPAREN               : 30 31 35 36 74 98 100 108 109
MAYOR                : 64 77 78 105
MAYOR_IGUAL          : 66
MAYOR_MENOR          : 
MENOR                : 63
MENOR_IGUAL          : 65
MENOR_MAYOR          : 
MODULO               : 
MULT                 : 70
MULT_ASIGNAR         : 
NEW                  : 100
OBJETO               : 100 100
OR                   : 42
POT                  : 72
POT_ASIGNAR          : 
PUBLIC               : 101 102
PUNTO                : 
RBRACE               : 30 31 35 36 37 90 100 108 109
RBRACKET             : 
READLINE             : 98
RESTA                : 69 105 109 109
RESTA_ASIGNAR        : 
RETURN               : 93
RPAREN               : 30 31 35 36 74 98 100 108 109
SET                  : 
SUMA                 : 68 108 108
SUMA_ASIGNAR         : 
SWITCH               : 
TUPLE                : 
VAR                  : 11 19 44 45 45 47 48 49 50 51 52 53 54 56 73 74 88 89 93 99 100 101 105 108 109 111 112
VARIABLE_ARRAY       : 20
VARIABLE_FUNCION     : 92
VARIABLE_OBJETO      : 
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

argumentologico      : 22 38 39 108 109
array                : 6 96 116
asignacion           : 1 102 108 109
atributo             : 106 107
comentario           : 4 114
condicion            : 30 31 35 36 39
conector_logico      : 39
cuerpo_funcion       : 
cuerpo_objeto        : 103 104
declaracion_numeros  : 5 95 115
diccionario          : 76 78
echo                 : 2
elementos            : 74
else                 : 32 33
elseif               : 33 34 36
estructuracontrol    : 3 97 113
final_funcion        : 90 94 95 96 97
for                  : 29
funcion              : 7
if                   : 28 32 33 34
ingreso_datos        : 9
linea                : 117 118
lineas               : 30 31 35 36 37 94 108 109 118
lista                : 75
mas_atributos        : 100 107
mas_objetos          : 100 104
numero               : 43 46 46 47 52 73 79 86 87
numeros              : 82 86
objeto               : 10
operacion            : 21 25 26
operador             : 25 26
operador_logico      : 45 46 47 52
palabras             : 81 84
readline             : 8 99
sentencia            : 0
tipo_funcion         : 90
vacio                : 
valor                : 11 13 14 78
valor_dic            : 77
valor_logico         : 
valores              : 12 14
variables            : 83 88
while                : 27

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . asignacion
    (2) sentencia -> . echo
    (3) sentencia -> . estructuracontrol
    (4) sentencia -> . comentario
    (5) sentencia -> . declaracion_numeros
    (6) sentencia -> . array
    (7) sentencia -> . funcion
    (8) sentencia -> . readline
    (9) sentencia -> . ingreso_datos
    (10) sentencia -> . objeto
    (11) asignacion -> . VAR ASIGNACION valor EOL
    (12) echo -> . ECHO valores EOL
    (27) estructuracontrol -> . while
    (28) estructuracontrol -> . if
    (29) estructuracontrol -> . for
    (67) comentario -> . COMNT
    (73) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (74) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (90) funcion -> . FUNCTION tipo_funcion LBRACE final_funcion RBRACE
    (98) readline -> . READLINE LPAREN CADENA RPAREN EOL
    (99) ingreso_datos -> . VAR ASIGNACION readline
    (100) objeto -> . CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
    (30) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (31) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (32) if -> . if else
    (33) if -> . if elseif else
    (34) if -> . if elseif
    (108) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    VAR             shift and go to state 12
    ECHO            shift and go to state 13
    COMNT           shift and go to state 17
    FUNCTION        shift and go to state 18
    READLINE        shift and go to state 19
    CLASE           shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 23

    sentencia                      shift and go to state 1
    asignacion                     shift and go to state 2
    echo                           shift and go to state 3
    estructuracontrol              shift and go to state 4
    comentario                     shift and go to state 5
    declaracion_numeros            shift and go to state 6
    array                          shift and go to state 7
    funcion                        shift and go to state 8
    readline                       shift and go to state 9
    ingreso_datos                  shift and go to state 10
    objeto                         shift and go to state 11
    while                          shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> asignacion .

    $end            reduce using rule 1 (sentencia -> asignacion .)


state 3

    (2) sentencia -> echo .

    $end            reduce using rule 2 (sentencia -> echo .)


state 4

    (3) sentencia -> estructuracontrol .

    $end            reduce using rule 3 (sentencia -> estructuracontrol .)


state 5

    (4) sentencia -> comentario .

    $end            reduce using rule 4 (sentencia -> comentario .)


state 6

    (5) sentencia -> declaracion_numeros .

    $end            reduce using rule 5 (sentencia -> declaracion_numeros .)


state 7

    (6) sentencia -> array .

    $end            reduce using rule 6 (sentencia -> array .)


state 8

    (7) sentencia -> funcion .

    $end            reduce using rule 7 (sentencia -> funcion .)


state 9

    (8) sentencia -> readline .

    $end            reduce using rule 8 (sentencia -> readline .)


state 10

    (9) sentencia -> ingreso_datos .

    $end            reduce using rule 9 (sentencia -> ingreso_datos .)


state 11

    (10) sentencia -> objeto .

    $end            reduce using rule 10 (sentencia -> objeto .)


state 12

    (11) asignacion -> VAR . ASIGNACION valor EOL
    (73) declaracion_numeros -> VAR . ASIGNACION numero EOL
    (74) array -> VAR . ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (99) ingreso_datos -> VAR . ASIGNACION readline

    ASIGNACION      shift and go to state 24


state 13

    (12) echo -> ECHO . valores EOL
    (13) valores -> . valor
    (14) valores -> . valor COMA valores
    (15) valor -> . ENTERO
    (16) valor -> . FLOTANTE
    (17) valor -> . BOOLEANO
    (18) valor -> . CADENA
    (19) valor -> . VAR
    (20) valor -> . VARIABLE_ARRAY
    (21) valor -> . operacion
    (22) valor -> . argumentologico
    (23) operacion -> . ENTERO
    (24) operacion -> . FLOTANTE
    (25) operacion -> . ENTERO operador operacion
    (26) operacion -> . FLOTANTE operador operacion
    (45) argumentologico -> . VAR operador_logico VAR
    (46) argumentologico -> . numero operador_logico numero
    (47) argumentologico -> . VAR operador_logico numero
    (48) argumentologico -> . VAR IGUAL BOOLEANO
    (49) argumentologico -> . VAR IGUAL CADENA
    (50) argumentologico -> . VAR DIFERENTE BOOLEANO
    (51) argumentologico -> . VAR DIFERENTE CADENA
    (52) argumentologico -> . numero operador_logico VAR
    (53) argumentologico -> . BOOLEANO IGUAL VAR
    (54) argumentologico -> . CADENA IGUAL VAR
    (55) argumentologico -> . CADENA IGUAL CADENA
    (56) argumentologico -> . CADENA DIFERENTE VAR
    (57) argumentologico -> . CADENA DIFERENTE CADENA
    (58) argumentologico -> . BOOLEANO
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    BOOLEANO        shift and go to state 29
    CADENA          shift and go to state 30
    VAR             shift and go to state 31
    VARIABLE_ARRAY  shift and go to state 32

    valores                        shift and go to state 25
    valor                          shift and go to state 26
    operacion                      shift and go to state 33
    argumentologico                shift and go to state 34
    numero                         shift and go to state 35

state 14

    (27) estructuracontrol -> while .

    $end            reduce using rule 27 (estructuracontrol -> while .)
    ECHO            reduce using rule 27 (estructuracontrol -> while .)
    VAR             reduce using rule 27 (estructuracontrol -> while .)
    COMNT           reduce using rule 27 (estructuracontrol -> while .)
    WHILE           reduce using rule 27 (estructuracontrol -> while .)
    IF              reduce using rule 27 (estructuracontrol -> while .)
    FOR             reduce using rule 27 (estructuracontrol -> while .)
    RBRACE          reduce using rule 27 (estructuracontrol -> while .)
    RETURN          reduce using rule 27 (estructuracontrol -> while .)


state 15

    (28) estructuracontrol -> if .
    (32) if -> if . else
    (33) if -> if . elseif else
    (34) if -> if . elseif
    (37) else -> . ELSE LBRACE lineas RBRACE
    (35) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (36) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif

    $end            reduce using rule 28 (estructuracontrol -> if .)
    ECHO            reduce using rule 28 (estructuracontrol -> if .)
    VAR             reduce using rule 28 (estructuracontrol -> if .)
    COMNT           reduce using rule 28 (estructuracontrol -> if .)
    WHILE           reduce using rule 28 (estructuracontrol -> if .)
    IF              reduce using rule 28 (estructuracontrol -> if .)
    FOR             reduce using rule 28 (estructuracontrol -> if .)
    RBRACE          reduce using rule 28 (estructuracontrol -> if .)
    RETURN          reduce using rule 28 (estructuracontrol -> if .)
    ELSE            shift and go to state 38
    ELSEIF          shift and go to state 39

    else                           shift and go to state 36
    elseif                         shift and go to state 37

state 16

    (29) estructuracontrol -> for .

    $end            reduce using rule 29 (estructuracontrol -> for .)
    ECHO            reduce using rule 29 (estructuracontrol -> for .)
    VAR             reduce using rule 29 (estructuracontrol -> for .)
    COMNT           reduce using rule 29 (estructuracontrol -> for .)
    WHILE           reduce using rule 29 (estructuracontrol -> for .)
    IF              reduce using rule 29 (estructuracontrol -> for .)
    FOR             reduce using rule 29 (estructuracontrol -> for .)
    RBRACE          reduce using rule 29 (estructuracontrol -> for .)
    RETURN          reduce using rule 29 (estructuracontrol -> for .)


state 17

    (67) comentario -> COMNT .

    $end            reduce using rule 67 (comentario -> COMNT .)
    ECHO            reduce using rule 67 (comentario -> COMNT .)
    VAR             reduce using rule 67 (comentario -> COMNT .)
    COMNT           reduce using rule 67 (comentario -> COMNT .)
    WHILE           reduce using rule 67 (comentario -> COMNT .)
    IF              reduce using rule 67 (comentario -> COMNT .)
    FOR             reduce using rule 67 (comentario -> COMNT .)
    RBRACE          reduce using rule 67 (comentario -> COMNT .)
    RETURN          reduce using rule 67 (comentario -> COMNT .)


state 18

    (90) funcion -> FUNCTION . tipo_funcion LBRACE final_funcion RBRACE
    (91) tipo_funcion -> . FUNCION
    (92) tipo_funcion -> . VARIABLE_FUNCION

    FUNCION         shift and go to state 41
    VARIABLE_FUNCION shift and go to state 42

    tipo_funcion                   shift and go to state 40

state 19

    (98) readline -> READLINE . LPAREN CADENA RPAREN EOL

    LPAREN          shift and go to state 43


state 20

    (100) objeto -> CLASE . OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    OBJETO          shift and go to state 44


state 21

    (30) while -> WHILE . LPAREN condicion RPAREN LBRACE lineas RBRACE

    LPAREN          shift and go to state 45


state 22

    (31) if -> IF . LPAREN condicion RPAREN LBRACE lineas RBRACE

    LPAREN          shift and go to state 46


state 23

    (108) for -> FOR . LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> FOR . LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    LPAREN          shift and go to state 47


state 24

    (11) asignacion -> VAR ASIGNACION . valor EOL
    (73) declaracion_numeros -> VAR ASIGNACION . numero EOL
    (74) array -> VAR ASIGNACION . ARRAY LPAREN elementos RPAREN EOL
    (99) ingreso_datos -> VAR ASIGNACION . readline
    (15) valor -> . ENTERO
    (16) valor -> . FLOTANTE
    (17) valor -> . BOOLEANO
    (18) valor -> . CADENA
    (19) valor -> . VAR
    (20) valor -> . VARIABLE_ARRAY
    (21) valor -> . operacion
    (22) valor -> . argumentologico
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE
    (98) readline -> . READLINE LPAREN CADENA RPAREN EOL
    (23) operacion -> . ENTERO
    (24) operacion -> . FLOTANTE
    (25) operacion -> . ENTERO operador operacion
    (26) operacion -> . FLOTANTE operador operacion
    (45) argumentologico -> . VAR operador_logico VAR
    (46) argumentologico -> . numero operador_logico numero
    (47) argumentologico -> . VAR operador_logico numero
    (48) argumentologico -> . VAR IGUAL BOOLEANO
    (49) argumentologico -> . VAR IGUAL CADENA
    (50) argumentologico -> . VAR DIFERENTE BOOLEANO
    (51) argumentologico -> . VAR DIFERENTE CADENA
    (52) argumentologico -> . numero operador_logico VAR
    (53) argumentologico -> . BOOLEANO IGUAL VAR
    (54) argumentologico -> . CADENA IGUAL VAR
    (55) argumentologico -> . CADENA IGUAL CADENA
    (56) argumentologico -> . CADENA DIFERENTE VAR
    (57) argumentologico -> . CADENA DIFERENTE CADENA
    (58) argumentologico -> . BOOLEANO

    ARRAY           shift and go to state 50
    ENTERO          shift and go to state 52
    FLOTANTE        shift and go to state 53
    BOOLEANO        shift and go to state 29
    CADENA          shift and go to state 30
    VAR             shift and go to state 31
    VARIABLE_ARRAY  shift and go to state 32
    READLINE        shift and go to state 19

    valor                          shift and go to state 48
    numero                         shift and go to state 49
    readline                       shift and go to state 51
    operacion                      shift and go to state 33
    argumentologico                shift and go to state 34

state 25

    (12) echo -> ECHO valores . EOL

    EOL             shift and go to state 54


state 26

    (13) valores -> valor .
    (14) valores -> valor . COMA valores

    EOL             reduce using rule 13 (valores -> valor .)
    COMA            shift and go to state 55


state 27

    (15) valor -> ENTERO .
    (23) operacion -> ENTERO .
    (25) operacion -> ENTERO . operador operacion
    (59) numero -> ENTERO .
    (68) operador -> . SUMA
    (69) operador -> . RESTA
    (70) operador -> . MULT
    (71) operador -> . DIV
    (72) operador -> . POT

  ! reduce/reduce conflict for COMA resolved using rule 15 (valor -> ENTERO .)
  ! reduce/reduce conflict for EOL resolved using rule 15 (valor -> ENTERO .)
    COMA            reduce using rule 15 (valor -> ENTERO .)
    EOL             reduce using rule 15 (valor -> ENTERO .)
    IGUAL           reduce using rule 59 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 59 (numero -> ENTERO .)
    MENOR           reduce using rule 59 (numero -> ENTERO .)
    MAYOR           reduce using rule 59 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 59 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 59 (numero -> ENTERO .)
    SUMA            shift and go to state 57
    RESTA           shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    POT             shift and go to state 61

  ! COMA            [ reduce using rule 23 (operacion -> ENTERO .) ]
  ! EOL             [ reduce using rule 23 (operacion -> ENTERO .) ]

    operador                       shift and go to state 56

state 28

    (16) valor -> FLOTANTE .
    (24) operacion -> FLOTANTE .
    (26) operacion -> FLOTANTE . operador operacion
    (60) numero -> FLOTANTE .
    (68) operador -> . SUMA
    (69) operador -> . RESTA
    (70) operador -> . MULT
    (71) operador -> . DIV
    (72) operador -> . POT

  ! reduce/reduce conflict for COMA resolved using rule 16 (valor -> FLOTANTE .)
  ! reduce/reduce conflict for EOL resolved using rule 16 (valor -> FLOTANTE .)
    COMA            reduce using rule 16 (valor -> FLOTANTE .)
    EOL             reduce using rule 16 (valor -> FLOTANTE .)
    IGUAL           reduce using rule 60 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 60 (numero -> FLOTANTE .)
    MENOR           reduce using rule 60 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 60 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 60 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 60 (numero -> FLOTANTE .)
    SUMA            shift and go to state 57
    RESTA           shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    POT             shift and go to state 61

  ! COMA            [ reduce using rule 24 (operacion -> FLOTANTE .) ]
  ! EOL             [ reduce using rule 24 (operacion -> FLOTANTE .) ]

    operador                       shift and go to state 62

state 29

    (17) valor -> BOOLEANO .
    (53) argumentologico -> BOOLEANO . IGUAL VAR
    (58) argumentologico -> BOOLEANO .

  ! reduce/reduce conflict for COMA resolved using rule 17 (valor -> BOOLEANO .)
  ! reduce/reduce conflict for EOL resolved using rule 17 (valor -> BOOLEANO .)
    COMA            reduce using rule 17 (valor -> BOOLEANO .)
    EOL             reduce using rule 17 (valor -> BOOLEANO .)
    IGUAL           shift and go to state 63

  ! COMA            [ reduce using rule 58 (argumentologico -> BOOLEANO .) ]
  ! EOL             [ reduce using rule 58 (argumentologico -> BOOLEANO .) ]


state 30

    (18) valor -> CADENA .
    (54) argumentologico -> CADENA . IGUAL VAR
    (55) argumentologico -> CADENA . IGUAL CADENA
    (56) argumentologico -> CADENA . DIFERENTE VAR
    (57) argumentologico -> CADENA . DIFERENTE CADENA

    COMA            reduce using rule 18 (valor -> CADENA .)
    EOL             reduce using rule 18 (valor -> CADENA .)
    IGUAL           shift and go to state 64
    DIFERENTE       shift and go to state 65


state 31

    (19) valor -> VAR .
    (45) argumentologico -> VAR . operador_logico VAR
    (47) argumentologico -> VAR . operador_logico numero
    (48) argumentologico -> VAR . IGUAL BOOLEANO
    (49) argumentologico -> VAR . IGUAL CADENA
    (50) argumentologico -> VAR . DIFERENTE BOOLEANO
    (51) argumentologico -> VAR . DIFERENTE CADENA
    (61) operador_logico -> . IGUAL
    (62) operador_logico -> . DIFERENTE
    (63) operador_logico -> . MENOR
    (64) operador_logico -> . MAYOR
    (65) operador_logico -> . MENOR_IGUAL
    (66) operador_logico -> . MAYOR_IGUAL

    COMA            reduce using rule 19 (valor -> VAR .)
    EOL             reduce using rule 19 (valor -> VAR .)
    IGUAL           shift and go to state 67
    DIFERENTE       shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENOR_IGUAL     shift and go to state 71
    MAYOR_IGUAL     shift and go to state 72

    operador_logico                shift and go to state 66

state 32

    (20) valor -> VARIABLE_ARRAY .

    COMA            reduce using rule 20 (valor -> VARIABLE_ARRAY .)
    EOL             reduce using rule 20 (valor -> VARIABLE_ARRAY .)


state 33

    (21) valor -> operacion .

    COMA            reduce using rule 21 (valor -> operacion .)
    EOL             reduce using rule 21 (valor -> operacion .)


state 34

    (22) valor -> argumentologico .

    COMA            reduce using rule 22 (valor -> argumentologico .)
    EOL             reduce using rule 22 (valor -> argumentologico .)


state 35

    (46) argumentologico -> numero . operador_logico numero
    (52) argumentologico -> numero . operador_logico VAR
    (61) operador_logico -> . IGUAL
    (62) operador_logico -> . DIFERENTE
    (63) operador_logico -> . MENOR
    (64) operador_logico -> . MAYOR
    (65) operador_logico -> . MENOR_IGUAL
    (66) operador_logico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 74
    DIFERENTE       shift and go to state 75
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENOR_IGUAL     shift and go to state 71
    MAYOR_IGUAL     shift and go to state 72

    operador_logico                shift and go to state 73

state 36

    (32) if -> if else .

    ELSE            reduce using rule 32 (if -> if else .)
    ELSEIF          reduce using rule 32 (if -> if else .)
    $end            reduce using rule 32 (if -> if else .)
    ECHO            reduce using rule 32 (if -> if else .)
    VAR             reduce using rule 32 (if -> if else .)
    COMNT           reduce using rule 32 (if -> if else .)
    WHILE           reduce using rule 32 (if -> if else .)
    IF              reduce using rule 32 (if -> if else .)
    FOR             reduce using rule 32 (if -> if else .)
    RBRACE          reduce using rule 32 (if -> if else .)
    RETURN          reduce using rule 32 (if -> if else .)


state 37

    (33) if -> if elseif . else
    (34) if -> if elseif .
    (37) else -> . ELSE LBRACE lineas RBRACE

  ! shift/reduce conflict for ELSE resolved as shift
    ELSEIF          reduce using rule 34 (if -> if elseif .)
    $end            reduce using rule 34 (if -> if elseif .)
    ECHO            reduce using rule 34 (if -> if elseif .)
    VAR             reduce using rule 34 (if -> if elseif .)
    COMNT           reduce using rule 34 (if -> if elseif .)
    WHILE           reduce using rule 34 (if -> if elseif .)
    IF              reduce using rule 34 (if -> if elseif .)
    FOR             reduce using rule 34 (if -> if elseif .)
    RBRACE          reduce using rule 34 (if -> if elseif .)
    RETURN          reduce using rule 34 (if -> if elseif .)
    ELSE            shift and go to state 38

  ! ELSE            [ reduce using rule 34 (if -> if elseif .) ]

    else                           shift and go to state 76

state 38

    (37) else -> ELSE . LBRACE lineas RBRACE

    LBRACE          shift and go to state 77


state 39

    (35) elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE lineas RBRACE
    (36) elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE lineas RBRACE elseif

    LPAREN          shift and go to state 78


state 40

    (90) funcion -> FUNCTION tipo_funcion . LBRACE final_funcion RBRACE

    LBRACE          shift and go to state 79


state 41

    (91) tipo_funcion -> FUNCION .

    LBRACE          reduce using rule 91 (tipo_funcion -> FUNCION .)


state 42

    (92) tipo_funcion -> VARIABLE_FUNCION .

    LBRACE          reduce using rule 92 (tipo_funcion -> VARIABLE_FUNCION .)


state 43

    (98) readline -> READLINE LPAREN . CADENA RPAREN EOL

    CADENA          shift and go to state 80


state 44

    (100) objeto -> CLASE OBJETO . LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    LBRACE          shift and go to state 81


state 45

    (30) while -> WHILE LPAREN . condicion RPAREN LBRACE lineas RBRACE
    (38) condicion -> . argumentologico
    (39) condicion -> . argumentologico conector_logico condicion
    (45) argumentologico -> . VAR operador_logico VAR
    (46) argumentologico -> . numero operador_logico numero
    (47) argumentologico -> . VAR operador_logico numero
    (48) argumentologico -> . VAR IGUAL BOOLEANO
    (49) argumentologico -> . VAR IGUAL CADENA
    (50) argumentologico -> . VAR DIFERENTE BOOLEANO
    (51) argumentologico -> . VAR DIFERENTE CADENA
    (52) argumentologico -> . numero operador_logico VAR
    (53) argumentologico -> . BOOLEANO IGUAL VAR
    (54) argumentologico -> . CADENA IGUAL VAR
    (55) argumentologico -> . CADENA IGUAL CADENA
    (56) argumentologico -> . CADENA DIFERENTE VAR
    (57) argumentologico -> . CADENA DIFERENTE CADENA
    (58) argumentologico -> . BOOLEANO
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    VAR             shift and go to state 84
    BOOLEANO        shift and go to state 85
    CADENA          shift and go to state 86
    ENTERO          shift and go to state 87
    FLOTANTE        shift and go to state 88

    condicion                      shift and go to state 82
    argumentologico                shift and go to state 83
    numero                         shift and go to state 35

state 46

    (31) if -> IF LPAREN . condicion RPAREN LBRACE lineas RBRACE
    (38) condicion -> . argumentologico
    (39) condicion -> . argumentologico conector_logico condicion
    (45) argumentologico -> . VAR operador_logico VAR
    (46) argumentologico -> . numero operador_logico numero
    (47) argumentologico -> . VAR operador_logico numero
    (48) argumentologico -> . VAR IGUAL BOOLEANO
    (49) argumentologico -> . VAR IGUAL CADENA
    (50) argumentologico -> . VAR DIFERENTE BOOLEANO
    (51) argumentologico -> . VAR DIFERENTE CADENA
    (52) argumentologico -> . numero operador_logico VAR
    (53) argumentologico -> . BOOLEANO IGUAL VAR
    (54) argumentologico -> . CADENA IGUAL VAR
    (55) argumentologico -> . CADENA IGUAL CADENA
    (56) argumentologico -> . CADENA DIFERENTE VAR
    (57) argumentologico -> . CADENA DIFERENTE CADENA
    (58) argumentologico -> . BOOLEANO
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    VAR             shift and go to state 84
    BOOLEANO        shift and go to state 85
    CADENA          shift and go to state 86
    ENTERO          shift and go to state 87
    FLOTANTE        shift and go to state 88

    condicion                      shift and go to state 89
    argumentologico                shift and go to state 83
    numero                         shift and go to state 35

state 47

    (108) for -> FOR LPAREN . asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> FOR LPAREN . asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (11) asignacion -> . VAR ASIGNACION valor EOL

    VAR             shift and go to state 91

    asignacion                     shift and go to state 90

state 48

    (11) asignacion -> VAR ASIGNACION valor . EOL

    EOL             shift and go to state 92


state 49

    (73) declaracion_numeros -> VAR ASIGNACION numero . EOL
    (46) argumentologico -> numero . operador_logico numero
    (52) argumentologico -> numero . operador_logico VAR
    (61) operador_logico -> . IGUAL
    (62) operador_logico -> . DIFERENTE
    (63) operador_logico -> . MENOR
    (64) operador_logico -> . MAYOR
    (65) operador_logico -> . MENOR_IGUAL
    (66) operador_logico -> . MAYOR_IGUAL

    EOL             shift and go to state 93
    IGUAL           shift and go to state 74
    DIFERENTE       shift and go to state 75
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENOR_IGUAL     shift and go to state 71
    MAYOR_IGUAL     shift and go to state 72

    operador_logico                shift and go to state 73

state 50

    (74) array -> VAR ASIGNACION ARRAY . LPAREN elementos RPAREN EOL

    LPAREN          shift and go to state 94


state 51

    (99) ingreso_datos -> VAR ASIGNACION readline .

    $end            reduce using rule 99 (ingreso_datos -> VAR ASIGNACION readline .)


state 52

    (15) valor -> ENTERO .
    (59) numero -> ENTERO .
    (23) operacion -> ENTERO .
    (25) operacion -> ENTERO . operador operacion
    (68) operador -> . SUMA
    (69) operador -> . RESTA
    (70) operador -> . MULT
    (71) operador -> . DIV
    (72) operador -> . POT

  ! reduce/reduce conflict for EOL resolved using rule 15 (valor -> ENTERO .)
  ! reduce/reduce conflict for EOL resolved using rule 15 (valor -> ENTERO .)
  ! reduce/reduce conflict for COMA resolved using rule 15 (valor -> ENTERO .)
    EOL             reduce using rule 15 (valor -> ENTERO .)
    COMA            reduce using rule 15 (valor -> ENTERO .)
    IGUAL           reduce using rule 59 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 59 (numero -> ENTERO .)
    MENOR           reduce using rule 59 (numero -> ENTERO .)
    MAYOR           reduce using rule 59 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 59 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 59 (numero -> ENTERO .)
    RPAREN          reduce using rule 59 (numero -> ENTERO .)
    SUMA            shift and go to state 57
    RESTA           shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    POT             shift and go to state 61

  ! EOL             [ reduce using rule 59 (numero -> ENTERO .) ]
  ! EOL             [ reduce using rule 23 (operacion -> ENTERO .) ]
  ! COMA            [ reduce using rule 23 (operacion -> ENTERO .) ]

    operador                       shift and go to state 56

state 53

    (16) valor -> FLOTANTE .
    (60) numero -> FLOTANTE .
    (24) operacion -> FLOTANTE .
    (26) operacion -> FLOTANTE . operador operacion
    (68) operador -> . SUMA
    (69) operador -> . RESTA
    (70) operador -> . MULT
    (71) operador -> . DIV
    (72) operador -> . POT

  ! reduce/reduce conflict for EOL resolved using rule 16 (valor -> FLOTANTE .)
  ! reduce/reduce conflict for EOL resolved using rule 16 (valor -> FLOTANTE .)
  ! reduce/reduce conflict for COMA resolved using rule 16 (valor -> FLOTANTE .)
    EOL             reduce using rule 16 (valor -> FLOTANTE .)
    COMA            reduce using rule 16 (valor -> FLOTANTE .)
    IGUAL           reduce using rule 60 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 60 (numero -> FLOTANTE .)
    MENOR           reduce using rule 60 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 60 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 60 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 60 (numero -> FLOTANTE .)
    RPAREN          reduce using rule 60 (numero -> FLOTANTE .)
    SUMA            shift and go to state 57
    RESTA           shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    POT             shift and go to state 61

  ! EOL             [ reduce using rule 60 (numero -> FLOTANTE .) ]
  ! EOL             [ reduce using rule 24 (operacion -> FLOTANTE .) ]
  ! COMA            [ reduce using rule 24 (operacion -> FLOTANTE .) ]

    operador                       shift and go to state 62

state 54

    (12) echo -> ECHO valores EOL .

    $end            reduce using rule 12 (echo -> ECHO valores EOL .)


state 55

    (14) valores -> valor COMA . valores
    (13) valores -> . valor
    (14) valores -> . valor COMA valores
    (15) valor -> . ENTERO
    (16) valor -> . FLOTANTE
    (17) valor -> . BOOLEANO
    (18) valor -> . CADENA
    (19) valor -> . VAR
    (20) valor -> . VARIABLE_ARRAY
    (21) valor -> . operacion
    (22) valor -> . argumentologico
    (23) operacion -> . ENTERO
    (24) operacion -> . FLOTANTE
    (25) operacion -> . ENTERO operador operacion
    (26) operacion -> . FLOTANTE operador operacion
    (45) argumentologico -> . VAR operador_logico VAR
    (46) argumentologico -> . numero operador_logico numero
    (47) argumentologico -> . VAR operador_logico numero
    (48) argumentologico -> . VAR IGUAL BOOLEANO
    (49) argumentologico -> . VAR IGUAL CADENA
    (50) argumentologico -> . VAR DIFERENTE BOOLEANO
    (51) argumentologico -> . VAR DIFERENTE CADENA
    (52) argumentologico -> . numero operador_logico VAR
    (53) argumentologico -> . BOOLEANO IGUAL VAR
    (54) argumentologico -> . CADENA IGUAL VAR
    (55) argumentologico -> . CADENA IGUAL CADENA
    (56) argumentologico -> . CADENA DIFERENTE VAR
    (57) argumentologico -> . CADENA DIFERENTE CADENA
    (58) argumentologico -> . BOOLEANO
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    BOOLEANO        shift and go to state 29
    CADENA          shift and go to state 30
    VAR             shift and go to state 31
    VARIABLE_ARRAY  shift and go to state 32

    valor                          shift and go to state 26
    valores                        shift and go to state 95
    operacion                      shift and go to state 33
    argumentologico                shift and go to state 34
    numero                         shift and go to state 35

state 56

    (25) operacion -> ENTERO operador . operacion
    (23) operacion -> . ENTERO
    (24) operacion -> . FLOTANTE
    (25) operacion -> . ENTERO operador operacion
    (26) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 98

    operacion                      shift and go to state 97

state 57

    (68) operador -> SUMA .

    ENTERO          reduce using rule 68 (operador -> SUMA .)
    FLOTANTE        reduce using rule 68 (operador -> SUMA .)


state 58

    (69) operador -> RESTA .

    ENTERO          reduce using rule 69 (operador -> RESTA .)
    FLOTANTE        reduce using rule 69 (operador -> RESTA .)


state 59

    (70) operador -> MULT .

    ENTERO          reduce using rule 70 (operador -> MULT .)
    FLOTANTE        reduce using rule 70 (operador -> MULT .)


state 60

    (71) operador -> DIV .

    ENTERO          reduce using rule 71 (operador -> DIV .)
    FLOTANTE        reduce using rule 71 (operador -> DIV .)


state 61

    (72) operador -> POT .

    ENTERO          reduce using rule 72 (operador -> POT .)
    FLOTANTE        reduce using rule 72 (operador -> POT .)


state 62

    (26) operacion -> FLOTANTE operador . operacion
    (23) operacion -> . ENTERO
    (24) operacion -> . FLOTANTE
    (25) operacion -> . ENTERO operador operacion
    (26) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 98

    operacion                      shift and go to state 99

state 63

    (53) argumentologico -> BOOLEANO IGUAL . VAR

    VAR             shift and go to state 100


state 64

    (54) argumentologico -> CADENA IGUAL . VAR
    (55) argumentologico -> CADENA IGUAL . CADENA

    VAR             shift and go to state 102
    CADENA          shift and go to state 101


state 65

    (56) argumentologico -> CADENA DIFERENTE . VAR
    (57) argumentologico -> CADENA DIFERENTE . CADENA

    VAR             shift and go to state 104
    CADENA          shift and go to state 103


state 66

    (45) argumentologico -> VAR operador_logico . VAR
    (47) argumentologico -> VAR operador_logico . numero
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    VAR             shift and go to state 105
    ENTERO          shift and go to state 87
    FLOTANTE        shift and go to state 88

    numero                         shift and go to state 106

state 67

    (48) argumentologico -> VAR IGUAL . BOOLEANO
    (49) argumentologico -> VAR IGUAL . CADENA
    (61) operador_logico -> IGUAL .

    BOOLEANO        shift and go to state 107
    CADENA          shift and go to state 108
    VAR             reduce using rule 61 (operador_logico -> IGUAL .)
    ENTERO          reduce using rule 61 (operador_logico -> IGUAL .)
    FLOTANTE        reduce using rule 61 (operador_logico -> IGUAL .)


state 68

    (50) argumentologico -> VAR DIFERENTE . BOOLEANO
    (51) argumentologico -> VAR DIFERENTE . CADENA
    (62) operador_logico -> DIFERENTE .

    BOOLEANO        shift and go to state 109
    CADENA          shift and go to state 110
    VAR             reduce using rule 62 (operador_logico -> DIFERENTE .)
    ENTERO          reduce using rule 62 (operador_logico -> DIFERENTE .)
    FLOTANTE        reduce using rule 62 (operador_logico -> DIFERENTE .)


state 69

    (63) operador_logico -> MENOR .

    VAR             reduce using rule 63 (operador_logico -> MENOR .)
    ENTERO          reduce using rule 63 (operador_logico -> MENOR .)
    FLOTANTE        reduce using rule 63 (operador_logico -> MENOR .)


state 70

    (64) operador_logico -> MAYOR .

    VAR             reduce using rule 64 (operador_logico -> MAYOR .)
    ENTERO          reduce using rule 64 (operador_logico -> MAYOR .)
    FLOTANTE        reduce using rule 64 (operador_logico -> MAYOR .)


state 71

    (65) operador_logico -> MENOR_IGUAL .

    VAR             reduce using rule 65 (operador_logico -> MENOR_IGUAL .)
    ENTERO          reduce using rule 65 (operador_logico -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 65 (operador_logico -> MENOR_IGUAL .)


state 72

    (66) operador_logico -> MAYOR_IGUAL .

    VAR             reduce using rule 66 (operador_logico -> MAYOR_IGUAL .)
    ENTERO          reduce using rule 66 (operador_logico -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 66 (operador_logico -> MAYOR_IGUAL .)


state 73

    (46) argumentologico -> numero operador_logico . numero
    (52) argumentologico -> numero operador_logico . VAR
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    VAR             shift and go to state 112
    ENTERO          shift and go to state 87
    FLOTANTE        shift and go to state 88

    numero                         shift and go to state 111

state 74

    (61) operador_logico -> IGUAL .

    VAR             reduce using rule 61 (operador_logico -> IGUAL .)
    ENTERO          reduce using rule 61 (operador_logico -> IGUAL .)
    FLOTANTE        reduce using rule 61 (operador_logico -> IGUAL .)


state 75

    (62) operador_logico -> DIFERENTE .

    VAR             reduce using rule 62 (operador_logico -> DIFERENTE .)
    ENTERO          reduce using rule 62 (operador_logico -> DIFERENTE .)
    FLOTANTE        reduce using rule 62 (operador_logico -> DIFERENTE .)


state 76

    (33) if -> if elseif else .

    ELSE            reduce using rule 33 (if -> if elseif else .)
    ELSEIF          reduce using rule 33 (if -> if elseif else .)
    $end            reduce using rule 33 (if -> if elseif else .)
    ECHO            reduce using rule 33 (if -> if elseif else .)
    VAR             reduce using rule 33 (if -> if elseif else .)
    COMNT           reduce using rule 33 (if -> if elseif else .)
    WHILE           reduce using rule 33 (if -> if elseif else .)
    IF              reduce using rule 33 (if -> if elseif else .)
    FOR             reduce using rule 33 (if -> if elseif else .)
    RBRACE          reduce using rule 33 (if -> if elseif else .)
    RETURN          reduce using rule 33 (if -> if elseif else .)


state 77

    (37) else -> ELSE LBRACE . lineas RBRACE
    (117) lineas -> . linea
    (118) lineas -> . linea lineas
    (110) linea -> . ECHO CADENA EOL
    (111) linea -> . ECHO VAR EOL
    (112) linea -> . VAR ASIGNACION CADENA EOL
    (113) linea -> . estructuracontrol
    (114) linea -> . comentario
    (115) linea -> . declaracion_numeros
    (116) linea -> . array
    (27) estructuracontrol -> . while
    (28) estructuracontrol -> . if
    (29) estructuracontrol -> . for
    (67) comentario -> . COMNT
    (73) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (74) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (30) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (31) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (32) if -> . if else
    (33) if -> . if elseif else
    (34) if -> . if elseif
    (108) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    ECHO            shift and go to state 115
    VAR             shift and go to state 116
    COMNT           shift and go to state 17
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 23

    lineas                         shift and go to state 113
    linea                          shift and go to state 114
    estructuracontrol              shift and go to state 117
    comentario                     shift and go to state 118
    declaracion_numeros            shift and go to state 119
    array                          shift and go to state 120
    while                          shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16

state 78

    (35) elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE lineas RBRACE
    (36) elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE lineas RBRACE elseif
    (38) condicion -> . argumentologico
    (39) condicion -> . argumentologico conector_logico condicion
    (45) argumentologico -> . VAR operador_logico VAR
    (46) argumentologico -> . numero operador_logico numero
    (47) argumentologico -> . VAR operador_logico numero
    (48) argumentologico -> . VAR IGUAL BOOLEANO
    (49) argumentologico -> . VAR IGUAL CADENA
    (50) argumentologico -> . VAR DIFERENTE BOOLEANO
    (51) argumentologico -> . VAR DIFERENTE CADENA
    (52) argumentologico -> . numero operador_logico VAR
    (53) argumentologico -> . BOOLEANO IGUAL VAR
    (54) argumentologico -> . CADENA IGUAL VAR
    (55) argumentologico -> . CADENA IGUAL CADENA
    (56) argumentologico -> . CADENA DIFERENTE VAR
    (57) argumentologico -> . CADENA DIFERENTE CADENA
    (58) argumentologico -> . BOOLEANO
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    VAR             shift and go to state 84
    BOOLEANO        shift and go to state 85
    CADENA          shift and go to state 86
    ENTERO          shift and go to state 87
    FLOTANTE        shift and go to state 88

    condicion                      shift and go to state 121
    argumentologico                shift and go to state 83
    numero                         shift and go to state 35

state 79

    (90) funcion -> FUNCTION tipo_funcion LBRACE . final_funcion RBRACE
    (93) final_funcion -> . RETURN VAR EOL
    (94) final_funcion -> . lineas final_funcion
    (117) lineas -> . linea
    (118) lineas -> . linea lineas
    (110) linea -> . ECHO CADENA EOL
    (111) linea -> . ECHO VAR EOL
    (112) linea -> . VAR ASIGNACION CADENA EOL
    (113) linea -> . estructuracontrol
    (114) linea -> . comentario
    (115) linea -> . declaracion_numeros
    (116) linea -> . array
    (27) estructuracontrol -> . while
    (28) estructuracontrol -> . if
    (29) estructuracontrol -> . for
    (67) comentario -> . COMNT
    (73) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (74) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (30) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (31) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (32) if -> . if else
    (33) if -> . if elseif else
    (34) if -> . if elseif
    (108) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    RETURN          shift and go to state 123
    ECHO            shift and go to state 115
    VAR             shift and go to state 116
    COMNT           shift and go to state 17
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 23

    final_funcion                  shift and go to state 122
    lineas                         shift and go to state 124
    linea                          shift and go to state 114
    estructuracontrol              shift and go to state 117
    comentario                     shift and go to state 118
    declaracion_numeros            shift and go to state 119
    array                          shift and go to state 120
    while                          shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16

state 80

    (98) readline -> READLINE LPAREN CADENA . RPAREN EOL

    RPAREN          shift and go to state 125


state 81

    (100) objeto -> CLASE OBJETO LBRACE . mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
    (103) mas_objetos -> . cuerpo_objeto
    (104) mas_objetos -> . cuerpo_objeto mas_objetos
    (101) cuerpo_objeto -> . PUBLIC VAR EOL
    (102) cuerpo_objeto -> . PUBLIC asignacion

    PUBLIC          shift and go to state 128

    mas_objetos                    shift and go to state 126
    cuerpo_objeto                  shift and go to state 127

state 82

    (30) while -> WHILE LPAREN condicion . RPAREN LBRACE lineas RBRACE

    RPAREN          shift and go to state 129


state 83

    (38) condicion -> argumentologico .
    (39) condicion -> argumentologico . conector_logico condicion
    (41) conector_logico -> . AND
    (42) conector_logico -> . OR

    RPAREN          reduce using rule 38 (condicion -> argumentologico .)
    AND             shift and go to state 131
    OR              shift and go to state 132

    conector_logico                shift and go to state 130

state 84

    (45) argumentologico -> VAR . operador_logico VAR
    (47) argumentologico -> VAR . operador_logico numero
    (48) argumentologico -> VAR . IGUAL BOOLEANO
    (49) argumentologico -> VAR . IGUAL CADENA
    (50) argumentologico -> VAR . DIFERENTE BOOLEANO
    (51) argumentologico -> VAR . DIFERENTE CADENA
    (61) operador_logico -> . IGUAL
    (62) operador_logico -> . DIFERENTE
    (63) operador_logico -> . MENOR
    (64) operador_logico -> . MAYOR
    (65) operador_logico -> . MENOR_IGUAL
    (66) operador_logico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 67
    DIFERENTE       shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENOR_IGUAL     shift and go to state 71
    MAYOR_IGUAL     shift and go to state 72

    operador_logico                shift and go to state 66

state 85

    (53) argumentologico -> BOOLEANO . IGUAL VAR
    (58) argumentologico -> BOOLEANO .

    IGUAL           shift and go to state 63
    AND             reduce using rule 58 (argumentologico -> BOOLEANO .)
    OR              reduce using rule 58 (argumentologico -> BOOLEANO .)
    RPAREN          reduce using rule 58 (argumentologico -> BOOLEANO .)
    EOL             reduce using rule 58 (argumentologico -> BOOLEANO .)


state 86

    (54) argumentologico -> CADENA . IGUAL VAR
    (55) argumentologico -> CADENA . IGUAL CADENA
    (56) argumentologico -> CADENA . DIFERENTE VAR
    (57) argumentologico -> CADENA . DIFERENTE CADENA

    IGUAL           shift and go to state 64
    DIFERENTE       shift and go to state 65


state 87

    (59) numero -> ENTERO .

    IGUAL           reduce using rule 59 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 59 (numero -> ENTERO .)
    MENOR           reduce using rule 59 (numero -> ENTERO .)
    MAYOR           reduce using rule 59 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 59 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 59 (numero -> ENTERO .)
    COMA            reduce using rule 59 (numero -> ENTERO .)
    EOL             reduce using rule 59 (numero -> ENTERO .)
    AND             reduce using rule 59 (numero -> ENTERO .)
    OR              reduce using rule 59 (numero -> ENTERO .)
    RPAREN          reduce using rule 59 (numero -> ENTERO .)


state 88

    (60) numero -> FLOTANTE .

    IGUAL           reduce using rule 60 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 60 (numero -> FLOTANTE .)
    MENOR           reduce using rule 60 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 60 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 60 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 60 (numero -> FLOTANTE .)
    COMA            reduce using rule 60 (numero -> FLOTANTE .)
    EOL             reduce using rule 60 (numero -> FLOTANTE .)
    AND             reduce using rule 60 (numero -> FLOTANTE .)
    OR              reduce using rule 60 (numero -> FLOTANTE .)
    RPAREN          reduce using rule 60 (numero -> FLOTANTE .)


state 89

    (31) if -> IF LPAREN condicion . RPAREN LBRACE lineas RBRACE

    RPAREN          shift and go to state 133


state 90

    (108) for -> FOR LPAREN asignacion . argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> FOR LPAREN asignacion . argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (45) argumentologico -> . VAR operador_logico VAR
    (46) argumentologico -> . numero operador_logico numero
    (47) argumentologico -> . VAR operador_logico numero
    (48) argumentologico -> . VAR IGUAL BOOLEANO
    (49) argumentologico -> . VAR IGUAL CADENA
    (50) argumentologico -> . VAR DIFERENTE BOOLEANO
    (51) argumentologico -> . VAR DIFERENTE CADENA
    (52) argumentologico -> . numero operador_logico VAR
    (53) argumentologico -> . BOOLEANO IGUAL VAR
    (54) argumentologico -> . CADENA IGUAL VAR
    (55) argumentologico -> . CADENA IGUAL CADENA
    (56) argumentologico -> . CADENA DIFERENTE VAR
    (57) argumentologico -> . CADENA DIFERENTE CADENA
    (58) argumentologico -> . BOOLEANO
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    VAR             shift and go to state 84
    BOOLEANO        shift and go to state 85
    CADENA          shift and go to state 86
    ENTERO          shift and go to state 87
    FLOTANTE        shift and go to state 88

    argumentologico                shift and go to state 134
    numero                         shift and go to state 35

state 91

    (11) asignacion -> VAR . ASIGNACION valor EOL

    ASIGNACION      shift and go to state 135


state 92

    (11) asignacion -> VAR ASIGNACION valor EOL .

    $end            reduce using rule 11 (asignacion -> VAR ASIGNACION valor EOL .)
    VAR             reduce using rule 11 (asignacion -> VAR ASIGNACION valor EOL .)
    BOOLEANO        reduce using rule 11 (asignacion -> VAR ASIGNACION valor EOL .)
    CADENA          reduce using rule 11 (asignacion -> VAR ASIGNACION valor EOL .)
    ENTERO          reduce using rule 11 (asignacion -> VAR ASIGNACION valor EOL .)
    FLOTANTE        reduce using rule 11 (asignacion -> VAR ASIGNACION valor EOL .)
    PUBLIC          reduce using rule 11 (asignacion -> VAR ASIGNACION valor EOL .)
    RBRACE          reduce using rule 11 (asignacion -> VAR ASIGNACION valor EOL .)


state 93

    (73) declaracion_numeros -> VAR ASIGNACION numero EOL .

    $end            reduce using rule 73 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    ECHO            reduce using rule 73 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    VAR             reduce using rule 73 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    COMNT           reduce using rule 73 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    WHILE           reduce using rule 73 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    IF              reduce using rule 73 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    FOR             reduce using rule 73 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    RBRACE          reduce using rule 73 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    RETURN          reduce using rule 73 (declaracion_numeros -> VAR ASIGNACION numero EOL .)


state 94

    (74) array -> VAR ASIGNACION ARRAY LPAREN . elementos RPAREN EOL
    (75) elementos -> . lista
    (76) elementos -> . diccionario
    (81) lista -> . palabras
    (82) lista -> . numeros
    (83) lista -> . variables
    (77) diccionario -> . CADENA ASIGNACION MAYOR valor_dic
    (78) diccionario -> . CADENA ASIGNACION MAYOR valor COMA diccionario
    (84) palabras -> . CADENA COMA palabras
    (85) palabras -> . CADENA
    (86) numeros -> . numero COMA numeros
    (87) numeros -> . numero
    (88) variables -> . VAR COMA variables
    (89) variables -> . VAR
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    CADENA          shift and go to state 143
    VAR             shift and go to state 136
    ENTERO          shift and go to state 87
    FLOTANTE        shift and go to state 88

    elementos                      shift and go to state 137
    lista                          shift and go to state 138
    diccionario                    shift and go to state 139
    palabras                       shift and go to state 140
    numeros                        shift and go to state 141
    variables                      shift and go to state 142
    numero                         shift and go to state 144

state 95

    (14) valores -> valor COMA valores .

    EOL             reduce using rule 14 (valores -> valor COMA valores .)


state 96

    (23) operacion -> ENTERO .
    (25) operacion -> ENTERO . operador operacion
    (68) operador -> . SUMA
    (69) operador -> . RESTA
    (70) operador -> . MULT
    (71) operador -> . DIV
    (72) operador -> . POT

    COMA            reduce using rule 23 (operacion -> ENTERO .)
    EOL             reduce using rule 23 (operacion -> ENTERO .)
    SUMA            shift and go to state 57
    RESTA           shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    POT             shift and go to state 61

    operador                       shift and go to state 56

state 97

    (25) operacion -> ENTERO operador operacion .

    COMA            reduce using rule 25 (operacion -> ENTERO operador operacion .)
    EOL             reduce using rule 25 (operacion -> ENTERO operador operacion .)


state 98

    (24) operacion -> FLOTANTE .
    (26) operacion -> FLOTANTE . operador operacion
    (68) operador -> . SUMA
    (69) operador -> . RESTA
    (70) operador -> . MULT
    (71) operador -> . DIV
    (72) operador -> . POT

    COMA            reduce using rule 24 (operacion -> FLOTANTE .)
    EOL             reduce using rule 24 (operacion -> FLOTANTE .)
    SUMA            shift and go to state 57
    RESTA           shift and go to state 58
    MULT            shift and go to state 59
    DIV             shift and go to state 60
    POT             shift and go to state 61

    operador                       shift and go to state 62

state 99

    (26) operacion -> FLOTANTE operador operacion .

    COMA            reduce using rule 26 (operacion -> FLOTANTE operador operacion .)
    EOL             reduce using rule 26 (operacion -> FLOTANTE operador operacion .)


state 100

    (53) argumentologico -> BOOLEANO IGUAL VAR .

    COMA            reduce using rule 53 (argumentologico -> BOOLEANO IGUAL VAR .)
    EOL             reduce using rule 53 (argumentologico -> BOOLEANO IGUAL VAR .)
    AND             reduce using rule 53 (argumentologico -> BOOLEANO IGUAL VAR .)
    OR              reduce using rule 53 (argumentologico -> BOOLEANO IGUAL VAR .)
    RPAREN          reduce using rule 53 (argumentologico -> BOOLEANO IGUAL VAR .)


state 101

    (55) argumentologico -> CADENA IGUAL CADENA .

    COMA            reduce using rule 55 (argumentologico -> CADENA IGUAL CADENA .)
    EOL             reduce using rule 55 (argumentologico -> CADENA IGUAL CADENA .)
    AND             reduce using rule 55 (argumentologico -> CADENA IGUAL CADENA .)
    OR              reduce using rule 55 (argumentologico -> CADENA IGUAL CADENA .)
    RPAREN          reduce using rule 55 (argumentologico -> CADENA IGUAL CADENA .)


state 102

    (54) argumentologico -> CADENA IGUAL VAR .

    COMA            reduce using rule 54 (argumentologico -> CADENA IGUAL VAR .)
    EOL             reduce using rule 54 (argumentologico -> CADENA IGUAL VAR .)
    AND             reduce using rule 54 (argumentologico -> CADENA IGUAL VAR .)
    OR              reduce using rule 54 (argumentologico -> CADENA IGUAL VAR .)
    RPAREN          reduce using rule 54 (argumentologico -> CADENA IGUAL VAR .)


state 103

    (57) argumentologico -> CADENA DIFERENTE CADENA .

    COMA            reduce using rule 57 (argumentologico -> CADENA DIFERENTE CADENA .)
    EOL             reduce using rule 57 (argumentologico -> CADENA DIFERENTE CADENA .)
    AND             reduce using rule 57 (argumentologico -> CADENA DIFERENTE CADENA .)
    OR              reduce using rule 57 (argumentologico -> CADENA DIFERENTE CADENA .)
    RPAREN          reduce using rule 57 (argumentologico -> CADENA DIFERENTE CADENA .)


state 104

    (56) argumentologico -> CADENA DIFERENTE VAR .

    COMA            reduce using rule 56 (argumentologico -> CADENA DIFERENTE VAR .)
    EOL             reduce using rule 56 (argumentologico -> CADENA DIFERENTE VAR .)
    AND             reduce using rule 56 (argumentologico -> CADENA DIFERENTE VAR .)
    OR              reduce using rule 56 (argumentologico -> CADENA DIFERENTE VAR .)
    RPAREN          reduce using rule 56 (argumentologico -> CADENA DIFERENTE VAR .)


state 105

    (45) argumentologico -> VAR operador_logico VAR .

    COMA            reduce using rule 45 (argumentologico -> VAR operador_logico VAR .)
    EOL             reduce using rule 45 (argumentologico -> VAR operador_logico VAR .)
    AND             reduce using rule 45 (argumentologico -> VAR operador_logico VAR .)
    OR              reduce using rule 45 (argumentologico -> VAR operador_logico VAR .)
    RPAREN          reduce using rule 45 (argumentologico -> VAR operador_logico VAR .)


state 106

    (47) argumentologico -> VAR operador_logico numero .

    COMA            reduce using rule 47 (argumentologico -> VAR operador_logico numero .)
    EOL             reduce using rule 47 (argumentologico -> VAR operador_logico numero .)
    AND             reduce using rule 47 (argumentologico -> VAR operador_logico numero .)
    OR              reduce using rule 47 (argumentologico -> VAR operador_logico numero .)
    RPAREN          reduce using rule 47 (argumentologico -> VAR operador_logico numero .)


state 107

    (48) argumentologico -> VAR IGUAL BOOLEANO .

    COMA            reduce using rule 48 (argumentologico -> VAR IGUAL BOOLEANO .)
    EOL             reduce using rule 48 (argumentologico -> VAR IGUAL BOOLEANO .)
    AND             reduce using rule 48 (argumentologico -> VAR IGUAL BOOLEANO .)
    OR              reduce using rule 48 (argumentologico -> VAR IGUAL BOOLEANO .)
    RPAREN          reduce using rule 48 (argumentologico -> VAR IGUAL BOOLEANO .)


state 108

    (49) argumentologico -> VAR IGUAL CADENA .

    COMA            reduce using rule 49 (argumentologico -> VAR IGUAL CADENA .)
    EOL             reduce using rule 49 (argumentologico -> VAR IGUAL CADENA .)
    AND             reduce using rule 49 (argumentologico -> VAR IGUAL CADENA .)
    OR              reduce using rule 49 (argumentologico -> VAR IGUAL CADENA .)
    RPAREN          reduce using rule 49 (argumentologico -> VAR IGUAL CADENA .)


state 109

    (50) argumentologico -> VAR DIFERENTE BOOLEANO .

    COMA            reduce using rule 50 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    EOL             reduce using rule 50 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    AND             reduce using rule 50 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    OR              reduce using rule 50 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    RPAREN          reduce using rule 50 (argumentologico -> VAR DIFERENTE BOOLEANO .)


state 110

    (51) argumentologico -> VAR DIFERENTE CADENA .

    COMA            reduce using rule 51 (argumentologico -> VAR DIFERENTE CADENA .)
    EOL             reduce using rule 51 (argumentologico -> VAR DIFERENTE CADENA .)
    AND             reduce using rule 51 (argumentologico -> VAR DIFERENTE CADENA .)
    OR              reduce using rule 51 (argumentologico -> VAR DIFERENTE CADENA .)
    RPAREN          reduce using rule 51 (argumentologico -> VAR DIFERENTE CADENA .)


state 111

    (46) argumentologico -> numero operador_logico numero .

    COMA            reduce using rule 46 (argumentologico -> numero operador_logico numero .)
    EOL             reduce using rule 46 (argumentologico -> numero operador_logico numero .)
    AND             reduce using rule 46 (argumentologico -> numero operador_logico numero .)
    OR              reduce using rule 46 (argumentologico -> numero operador_logico numero .)
    RPAREN          reduce using rule 46 (argumentologico -> numero operador_logico numero .)


state 112

    (52) argumentologico -> numero operador_logico VAR .

    COMA            reduce using rule 52 (argumentologico -> numero operador_logico VAR .)
    EOL             reduce using rule 52 (argumentologico -> numero operador_logico VAR .)
    AND             reduce using rule 52 (argumentologico -> numero operador_logico VAR .)
    OR              reduce using rule 52 (argumentologico -> numero operador_logico VAR .)
    RPAREN          reduce using rule 52 (argumentologico -> numero operador_logico VAR .)


state 113

    (37) else -> ELSE LBRACE lineas . RBRACE

    RBRACE          shift and go to state 145


state 114

    (117) lineas -> linea .
    (118) lineas -> linea . lineas
    (117) lineas -> . linea
    (118) lineas -> . linea lineas
    (110) linea -> . ECHO CADENA EOL
    (111) linea -> . ECHO VAR EOL
    (112) linea -> . VAR ASIGNACION CADENA EOL
    (113) linea -> . estructuracontrol
    (114) linea -> . comentario
    (115) linea -> . declaracion_numeros
    (116) linea -> . array
    (27) estructuracontrol -> . while
    (28) estructuracontrol -> . if
    (29) estructuracontrol -> . for
    (67) comentario -> . COMNT
    (73) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (74) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (30) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (31) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (32) if -> . if else
    (33) if -> . if elseif else
    (34) if -> . if elseif
    (108) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for COMNT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RBRACE          reduce using rule 117 (lineas -> linea .)
    RETURN          reduce using rule 117 (lineas -> linea .)
    ECHO            shift and go to state 115
    VAR             shift and go to state 116
    COMNT           shift and go to state 17
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 23

  ! ECHO            [ reduce using rule 117 (lineas -> linea .) ]
  ! VAR             [ reduce using rule 117 (lineas -> linea .) ]
  ! COMNT           [ reduce using rule 117 (lineas -> linea .) ]
  ! WHILE           [ reduce using rule 117 (lineas -> linea .) ]
  ! IF              [ reduce using rule 117 (lineas -> linea .) ]
  ! FOR             [ reduce using rule 117 (lineas -> linea .) ]

    linea                          shift and go to state 114
    lineas                         shift and go to state 146
    estructuracontrol              shift and go to state 117
    comentario                     shift and go to state 118
    declaracion_numeros            shift and go to state 119
    array                          shift and go to state 120
    while                          shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16

state 115

    (110) linea -> ECHO . CADENA EOL
    (111) linea -> ECHO . VAR EOL

    CADENA          shift and go to state 147
    VAR             shift and go to state 148


state 116

    (112) linea -> VAR . ASIGNACION CADENA EOL
    (73) declaracion_numeros -> VAR . ASIGNACION numero EOL
    (74) array -> VAR . ASIGNACION ARRAY LPAREN elementos RPAREN EOL

    ASIGNACION      shift and go to state 149


state 117

    (113) linea -> estructuracontrol .

    ECHO            reduce using rule 113 (linea -> estructuracontrol .)
    VAR             reduce using rule 113 (linea -> estructuracontrol .)
    COMNT           reduce using rule 113 (linea -> estructuracontrol .)
    WHILE           reduce using rule 113 (linea -> estructuracontrol .)
    IF              reduce using rule 113 (linea -> estructuracontrol .)
    FOR             reduce using rule 113 (linea -> estructuracontrol .)
    RBRACE          reduce using rule 113 (linea -> estructuracontrol .)
    RETURN          reduce using rule 113 (linea -> estructuracontrol .)


state 118

    (114) linea -> comentario .

    ECHO            reduce using rule 114 (linea -> comentario .)
    VAR             reduce using rule 114 (linea -> comentario .)
    COMNT           reduce using rule 114 (linea -> comentario .)
    WHILE           reduce using rule 114 (linea -> comentario .)
    IF              reduce using rule 114 (linea -> comentario .)
    FOR             reduce using rule 114 (linea -> comentario .)
    RBRACE          reduce using rule 114 (linea -> comentario .)
    RETURN          reduce using rule 114 (linea -> comentario .)


state 119

    (115) linea -> declaracion_numeros .

    ECHO            reduce using rule 115 (linea -> declaracion_numeros .)
    VAR             reduce using rule 115 (linea -> declaracion_numeros .)
    COMNT           reduce using rule 115 (linea -> declaracion_numeros .)
    WHILE           reduce using rule 115 (linea -> declaracion_numeros .)
    IF              reduce using rule 115 (linea -> declaracion_numeros .)
    FOR             reduce using rule 115 (linea -> declaracion_numeros .)
    RBRACE          reduce using rule 115 (linea -> declaracion_numeros .)
    RETURN          reduce using rule 115 (linea -> declaracion_numeros .)


state 120

    (116) linea -> array .

    ECHO            reduce using rule 116 (linea -> array .)
    VAR             reduce using rule 116 (linea -> array .)
    COMNT           reduce using rule 116 (linea -> array .)
    WHILE           reduce using rule 116 (linea -> array .)
    IF              reduce using rule 116 (linea -> array .)
    FOR             reduce using rule 116 (linea -> array .)
    RBRACE          reduce using rule 116 (linea -> array .)
    RETURN          reduce using rule 116 (linea -> array .)


state 121

    (35) elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE lineas RBRACE
    (36) elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE lineas RBRACE elseif

    RPAREN          shift and go to state 150


state 122

    (90) funcion -> FUNCTION tipo_funcion LBRACE final_funcion . RBRACE

    RBRACE          shift and go to state 151


state 123

    (93) final_funcion -> RETURN . VAR EOL

    VAR             shift and go to state 152


state 124

    (94) final_funcion -> lineas . final_funcion
    (93) final_funcion -> . RETURN VAR EOL
    (94) final_funcion -> . lineas final_funcion
    (117) lineas -> . linea
    (118) lineas -> . linea lineas
    (110) linea -> . ECHO CADENA EOL
    (111) linea -> . ECHO VAR EOL
    (112) linea -> . VAR ASIGNACION CADENA EOL
    (113) linea -> . estructuracontrol
    (114) linea -> . comentario
    (115) linea -> . declaracion_numeros
    (116) linea -> . array
    (27) estructuracontrol -> . while
    (28) estructuracontrol -> . if
    (29) estructuracontrol -> . for
    (67) comentario -> . COMNT
    (73) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (74) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (30) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (31) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (32) if -> . if else
    (33) if -> . if elseif else
    (34) if -> . if elseif
    (108) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    RETURN          shift and go to state 123
    ECHO            shift and go to state 115
    VAR             shift and go to state 116
    COMNT           shift and go to state 17
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 23

    lineas                         shift and go to state 124
    final_funcion                  shift and go to state 153
    linea                          shift and go to state 114
    estructuracontrol              shift and go to state 117
    comentario                     shift and go to state 118
    declaracion_numeros            shift and go to state 119
    array                          shift and go to state 120
    while                          shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16

state 125

    (98) readline -> READLINE LPAREN CADENA RPAREN . EOL

    EOL             shift and go to state 154


state 126

    (100) objeto -> CLASE OBJETO LBRACE mas_objetos . RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    RBRACE          shift and go to state 155


state 127

    (103) mas_objetos -> cuerpo_objeto .
    (104) mas_objetos -> cuerpo_objeto . mas_objetos
    (103) mas_objetos -> . cuerpo_objeto
    (104) mas_objetos -> . cuerpo_objeto mas_objetos
    (101) cuerpo_objeto -> . PUBLIC VAR EOL
    (102) cuerpo_objeto -> . PUBLIC asignacion

    RBRACE          reduce using rule 103 (mas_objetos -> cuerpo_objeto .)
    PUBLIC          shift and go to state 128

    cuerpo_objeto                  shift and go to state 127
    mas_objetos                    shift and go to state 156

state 128

    (101) cuerpo_objeto -> PUBLIC . VAR EOL
    (102) cuerpo_objeto -> PUBLIC . asignacion
    (11) asignacion -> . VAR ASIGNACION valor EOL

    VAR             shift and go to state 157

    asignacion                     shift and go to state 158

state 129

    (30) while -> WHILE LPAREN condicion RPAREN . LBRACE lineas RBRACE

    LBRACE          shift and go to state 159


state 130

    (39) condicion -> argumentologico conector_logico . condicion
    (38) condicion -> . argumentologico
    (39) condicion -> . argumentologico conector_logico condicion
    (45) argumentologico -> . VAR operador_logico VAR
    (46) argumentologico -> . numero operador_logico numero
    (47) argumentologico -> . VAR operador_logico numero
    (48) argumentologico -> . VAR IGUAL BOOLEANO
    (49) argumentologico -> . VAR IGUAL CADENA
    (50) argumentologico -> . VAR DIFERENTE BOOLEANO
    (51) argumentologico -> . VAR DIFERENTE CADENA
    (52) argumentologico -> . numero operador_logico VAR
    (53) argumentologico -> . BOOLEANO IGUAL VAR
    (54) argumentologico -> . CADENA IGUAL VAR
    (55) argumentologico -> . CADENA IGUAL CADENA
    (56) argumentologico -> . CADENA DIFERENTE VAR
    (57) argumentologico -> . CADENA DIFERENTE CADENA
    (58) argumentologico -> . BOOLEANO
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    VAR             shift and go to state 84
    BOOLEANO        shift and go to state 85
    CADENA          shift and go to state 86
    ENTERO          shift and go to state 87
    FLOTANTE        shift and go to state 88

    argumentologico                shift and go to state 83
    condicion                      shift and go to state 160
    numero                         shift and go to state 35

state 131

    (41) conector_logico -> AND .

    VAR             reduce using rule 41 (conector_logico -> AND .)
    BOOLEANO        reduce using rule 41 (conector_logico -> AND .)
    CADENA          reduce using rule 41 (conector_logico -> AND .)
    ENTERO          reduce using rule 41 (conector_logico -> AND .)
    FLOTANTE        reduce using rule 41 (conector_logico -> AND .)


state 132

    (42) conector_logico -> OR .

    VAR             reduce using rule 42 (conector_logico -> OR .)
    BOOLEANO        reduce using rule 42 (conector_logico -> OR .)
    CADENA          reduce using rule 42 (conector_logico -> OR .)
    ENTERO          reduce using rule 42 (conector_logico -> OR .)
    FLOTANTE        reduce using rule 42 (conector_logico -> OR .)


state 133

    (31) if -> IF LPAREN condicion RPAREN . LBRACE lineas RBRACE

    LBRACE          shift and go to state 161


state 134

    (108) for -> FOR LPAREN asignacion argumentologico . EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> FOR LPAREN asignacion argumentologico . EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    EOL             shift and go to state 162


state 135

    (11) asignacion -> VAR ASIGNACION . valor EOL
    (15) valor -> . ENTERO
    (16) valor -> . FLOTANTE
    (17) valor -> . BOOLEANO
    (18) valor -> . CADENA
    (19) valor -> . VAR
    (20) valor -> . VARIABLE_ARRAY
    (21) valor -> . operacion
    (22) valor -> . argumentologico
    (23) operacion -> . ENTERO
    (24) operacion -> . FLOTANTE
    (25) operacion -> . ENTERO operador operacion
    (26) operacion -> . FLOTANTE operador operacion
    (45) argumentologico -> . VAR operador_logico VAR
    (46) argumentologico -> . numero operador_logico numero
    (47) argumentologico -> . VAR operador_logico numero
    (48) argumentologico -> . VAR IGUAL BOOLEANO
    (49) argumentologico -> . VAR IGUAL CADENA
    (50) argumentologico -> . VAR DIFERENTE BOOLEANO
    (51) argumentologico -> . VAR DIFERENTE CADENA
    (52) argumentologico -> . numero operador_logico VAR
    (53) argumentologico -> . BOOLEANO IGUAL VAR
    (54) argumentologico -> . CADENA IGUAL VAR
    (55) argumentologico -> . CADENA IGUAL CADENA
    (56) argumentologico -> . CADENA DIFERENTE VAR
    (57) argumentologico -> . CADENA DIFERENTE CADENA
    (58) argumentologico -> . BOOLEANO
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    BOOLEANO        shift and go to state 29
    CADENA          shift and go to state 30
    VAR             shift and go to state 31
    VARIABLE_ARRAY  shift and go to state 32

    valor                          shift and go to state 48
    operacion                      shift and go to state 33
    argumentologico                shift and go to state 34
    numero                         shift and go to state 35

state 136

    (88) variables -> VAR . COMA variables
    (89) variables -> VAR .

    COMA            shift and go to state 163
    RPAREN          reduce using rule 89 (variables -> VAR .)


state 137

    (74) array -> VAR ASIGNACION ARRAY LPAREN elementos . RPAREN EOL

    RPAREN          shift and go to state 164


state 138

    (75) elementos -> lista .

    RPAREN          reduce using rule 75 (elementos -> lista .)


state 139

    (76) elementos -> diccionario .

    RPAREN          reduce using rule 76 (elementos -> diccionario .)


state 140

    (81) lista -> palabras .

    RPAREN          reduce using rule 81 (lista -> palabras .)


state 141

    (82) lista -> numeros .

    RPAREN          reduce using rule 82 (lista -> numeros .)


state 142

    (83) lista -> variables .

    RPAREN          reduce using rule 83 (lista -> variables .)


state 143

    (77) diccionario -> CADENA . ASIGNACION MAYOR valor_dic
    (78) diccionario -> CADENA . ASIGNACION MAYOR valor COMA diccionario
    (84) palabras -> CADENA . COMA palabras
    (85) palabras -> CADENA .

    ASIGNACION      shift and go to state 165
    COMA            shift and go to state 166
    RPAREN          reduce using rule 85 (palabras -> CADENA .)


state 144

    (86) numeros -> numero . COMA numeros
    (87) numeros -> numero .

    COMA            shift and go to state 167
    RPAREN          reduce using rule 87 (numeros -> numero .)


state 145

    (37) else -> ELSE LBRACE lineas RBRACE .

    ELSE            reduce using rule 37 (else -> ELSE LBRACE lineas RBRACE .)
    ELSEIF          reduce using rule 37 (else -> ELSE LBRACE lineas RBRACE .)
    $end            reduce using rule 37 (else -> ELSE LBRACE lineas RBRACE .)
    ECHO            reduce using rule 37 (else -> ELSE LBRACE lineas RBRACE .)
    VAR             reduce using rule 37 (else -> ELSE LBRACE lineas RBRACE .)
    COMNT           reduce using rule 37 (else -> ELSE LBRACE lineas RBRACE .)
    WHILE           reduce using rule 37 (else -> ELSE LBRACE lineas RBRACE .)
    IF              reduce using rule 37 (else -> ELSE LBRACE lineas RBRACE .)
    FOR             reduce using rule 37 (else -> ELSE LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 37 (else -> ELSE LBRACE lineas RBRACE .)
    RETURN          reduce using rule 37 (else -> ELSE LBRACE lineas RBRACE .)


state 146

    (118) lineas -> linea lineas .

    RBRACE          reduce using rule 118 (lineas -> linea lineas .)
    RETURN          reduce using rule 118 (lineas -> linea lineas .)
    ECHO            reduce using rule 118 (lineas -> linea lineas .)
    VAR             reduce using rule 118 (lineas -> linea lineas .)
    COMNT           reduce using rule 118 (lineas -> linea lineas .)
    WHILE           reduce using rule 118 (lineas -> linea lineas .)
    IF              reduce using rule 118 (lineas -> linea lineas .)
    FOR             reduce using rule 118 (lineas -> linea lineas .)


state 147

    (110) linea -> ECHO CADENA . EOL

    EOL             shift and go to state 168


state 148

    (111) linea -> ECHO VAR . EOL

    EOL             shift and go to state 169


state 149

    (112) linea -> VAR ASIGNACION . CADENA EOL
    (73) declaracion_numeros -> VAR ASIGNACION . numero EOL
    (74) array -> VAR ASIGNACION . ARRAY LPAREN elementos RPAREN EOL
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    CADENA          shift and go to state 170
    ARRAY           shift and go to state 50
    ENTERO          shift and go to state 87
    FLOTANTE        shift and go to state 88

    numero                         shift and go to state 171

state 150

    (35) elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE lineas RBRACE
    (36) elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE lineas RBRACE elseif

    LBRACE          shift and go to state 172


state 151

    (90) funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE .

    $end            reduce using rule 90 (funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE .)


state 152

    (93) final_funcion -> RETURN VAR . EOL

    EOL             shift and go to state 173


state 153

    (94) final_funcion -> lineas final_funcion .

    RBRACE          reduce using rule 94 (final_funcion -> lineas final_funcion .)


state 154

    (98) readline -> READLINE LPAREN CADENA RPAREN EOL .

    $end            reduce using rule 98 (readline -> READLINE LPAREN CADENA RPAREN EOL .)


state 155

    (100) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE . VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    VAR             shift and go to state 174


state 156

    (104) mas_objetos -> cuerpo_objeto mas_objetos .

    RBRACE          reduce using rule 104 (mas_objetos -> cuerpo_objeto mas_objetos .)


state 157

    (101) cuerpo_objeto -> PUBLIC VAR . EOL
    (11) asignacion -> VAR . ASIGNACION valor EOL

    EOL             shift and go to state 175
    ASIGNACION      shift and go to state 135


state 158

    (102) cuerpo_objeto -> PUBLIC asignacion .

    PUBLIC          reduce using rule 102 (cuerpo_objeto -> PUBLIC asignacion .)
    RBRACE          reduce using rule 102 (cuerpo_objeto -> PUBLIC asignacion .)


state 159

    (30) while -> WHILE LPAREN condicion RPAREN LBRACE . lineas RBRACE
    (117) lineas -> . linea
    (118) lineas -> . linea lineas
    (110) linea -> . ECHO CADENA EOL
    (111) linea -> . ECHO VAR EOL
    (112) linea -> . VAR ASIGNACION CADENA EOL
    (113) linea -> . estructuracontrol
    (114) linea -> . comentario
    (115) linea -> . declaracion_numeros
    (116) linea -> . array
    (27) estructuracontrol -> . while
    (28) estructuracontrol -> . if
    (29) estructuracontrol -> . for
    (67) comentario -> . COMNT
    (73) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (74) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (30) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (31) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (32) if -> . if else
    (33) if -> . if elseif else
    (34) if -> . if elseif
    (108) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    ECHO            shift and go to state 115
    VAR             shift and go to state 116
    COMNT           shift and go to state 17
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 23

    lineas                         shift and go to state 176
    linea                          shift and go to state 114
    estructuracontrol              shift and go to state 117
    comentario                     shift and go to state 118
    declaracion_numeros            shift and go to state 119
    array                          shift and go to state 120
    while                          shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16

state 160

    (39) condicion -> argumentologico conector_logico condicion .

    RPAREN          reduce using rule 39 (condicion -> argumentologico conector_logico condicion .)


state 161

    (31) if -> IF LPAREN condicion RPAREN LBRACE . lineas RBRACE
    (117) lineas -> . linea
    (118) lineas -> . linea lineas
    (110) linea -> . ECHO CADENA EOL
    (111) linea -> . ECHO VAR EOL
    (112) linea -> . VAR ASIGNACION CADENA EOL
    (113) linea -> . estructuracontrol
    (114) linea -> . comentario
    (115) linea -> . declaracion_numeros
    (116) linea -> . array
    (27) estructuracontrol -> . while
    (28) estructuracontrol -> . if
    (29) estructuracontrol -> . for
    (67) comentario -> . COMNT
    (73) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (74) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (30) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (31) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (32) if -> . if else
    (33) if -> . if elseif else
    (34) if -> . if elseif
    (108) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    ECHO            shift and go to state 115
    VAR             shift and go to state 116
    COMNT           shift and go to state 17
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 23

    lineas                         shift and go to state 177
    linea                          shift and go to state 114
    estructuracontrol              shift and go to state 117
    comentario                     shift and go to state 118
    declaracion_numeros            shift and go to state 119
    array                          shift and go to state 120
    while                          shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16

state 162

    (108) for -> FOR LPAREN asignacion argumentologico EOL . VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> FOR LPAREN asignacion argumentologico EOL . VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    VAR             shift and go to state 178


state 163

    (88) variables -> VAR COMA . variables
    (88) variables -> . VAR COMA variables
    (89) variables -> . VAR

    VAR             shift and go to state 136

    variables                      shift and go to state 179

state 164

    (74) array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN . EOL

    EOL             shift and go to state 180


state 165

    (77) diccionario -> CADENA ASIGNACION . MAYOR valor_dic
    (78) diccionario -> CADENA ASIGNACION . MAYOR valor COMA diccionario

    MAYOR           shift and go to state 181


state 166

    (84) palabras -> CADENA COMA . palabras
    (84) palabras -> . CADENA COMA palabras
    (85) palabras -> . CADENA

    CADENA          shift and go to state 182

    palabras                       shift and go to state 183

state 167

    (86) numeros -> numero COMA . numeros
    (86) numeros -> . numero COMA numeros
    (87) numeros -> . numero
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE

    ENTERO          shift and go to state 87
    FLOTANTE        shift and go to state 88

    numero                         shift and go to state 144
    numeros                        shift and go to state 184

state 168

    (110) linea -> ECHO CADENA EOL .

    ECHO            reduce using rule 110 (linea -> ECHO CADENA EOL .)
    VAR             reduce using rule 110 (linea -> ECHO CADENA EOL .)
    COMNT           reduce using rule 110 (linea -> ECHO CADENA EOL .)
    WHILE           reduce using rule 110 (linea -> ECHO CADENA EOL .)
    IF              reduce using rule 110 (linea -> ECHO CADENA EOL .)
    FOR             reduce using rule 110 (linea -> ECHO CADENA EOL .)
    RBRACE          reduce using rule 110 (linea -> ECHO CADENA EOL .)
    RETURN          reduce using rule 110 (linea -> ECHO CADENA EOL .)


state 169

    (111) linea -> ECHO VAR EOL .

    ECHO            reduce using rule 111 (linea -> ECHO VAR EOL .)
    VAR             reduce using rule 111 (linea -> ECHO VAR EOL .)
    COMNT           reduce using rule 111 (linea -> ECHO VAR EOL .)
    WHILE           reduce using rule 111 (linea -> ECHO VAR EOL .)
    IF              reduce using rule 111 (linea -> ECHO VAR EOL .)
    FOR             reduce using rule 111 (linea -> ECHO VAR EOL .)
    RBRACE          reduce using rule 111 (linea -> ECHO VAR EOL .)
    RETURN          reduce using rule 111 (linea -> ECHO VAR EOL .)


state 170

    (112) linea -> VAR ASIGNACION CADENA . EOL

    EOL             shift and go to state 185


state 171

    (73) declaracion_numeros -> VAR ASIGNACION numero . EOL

    EOL             shift and go to state 93


state 172

    (35) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . lineas RBRACE
    (36) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . lineas RBRACE elseif
    (117) lineas -> . linea
    (118) lineas -> . linea lineas
    (110) linea -> . ECHO CADENA EOL
    (111) linea -> . ECHO VAR EOL
    (112) linea -> . VAR ASIGNACION CADENA EOL
    (113) linea -> . estructuracontrol
    (114) linea -> . comentario
    (115) linea -> . declaracion_numeros
    (116) linea -> . array
    (27) estructuracontrol -> . while
    (28) estructuracontrol -> . if
    (29) estructuracontrol -> . for
    (67) comentario -> . COMNT
    (73) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (74) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (30) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (31) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (32) if -> . if else
    (33) if -> . if elseif else
    (34) if -> . if elseif
    (108) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    ECHO            shift and go to state 115
    VAR             shift and go to state 116
    COMNT           shift and go to state 17
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 23

    lineas                         shift and go to state 186
    linea                          shift and go to state 114
    estructuracontrol              shift and go to state 117
    comentario                     shift and go to state 118
    declaracion_numeros            shift and go to state 119
    array                          shift and go to state 120
    while                          shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16

state 173

    (93) final_funcion -> RETURN VAR EOL .

    RBRACE          reduce using rule 93 (final_funcion -> RETURN VAR EOL .)


state 174

    (100) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR . ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    ASIGNACION      shift and go to state 187


state 175

    (101) cuerpo_objeto -> PUBLIC VAR EOL .

    PUBLIC          reduce using rule 101 (cuerpo_objeto -> PUBLIC VAR EOL .)
    RBRACE          reduce using rule 101 (cuerpo_objeto -> PUBLIC VAR EOL .)


state 176

    (30) while -> WHILE LPAREN condicion RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 188


state 177

    (31) if -> IF LPAREN condicion RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 189


state 178

    (108) for -> FOR LPAREN asignacion argumentologico EOL VAR . SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> FOR LPAREN asignacion argumentologico EOL VAR . RESTA RESTA RPAREN LBRACE lineas RBRACE

    SUMA            shift and go to state 190
    RESTA           shift and go to state 191


state 179

    (88) variables -> VAR COMA variables .

    RPAREN          reduce using rule 88 (variables -> VAR COMA variables .)


state 180

    (74) array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .

    $end            reduce using rule 74 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    ECHO            reduce using rule 74 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    VAR             reduce using rule 74 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    COMNT           reduce using rule 74 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    WHILE           reduce using rule 74 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    IF              reduce using rule 74 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    FOR             reduce using rule 74 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    RBRACE          reduce using rule 74 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    RETURN          reduce using rule 74 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)


state 181

    (77) diccionario -> CADENA ASIGNACION MAYOR . valor_dic
    (78) diccionario -> CADENA ASIGNACION MAYOR . valor COMA diccionario
    (79) valor_dic -> . numero
    (80) valor_dic -> . CADENA
    (15) valor -> . ENTERO
    (16) valor -> . FLOTANTE
    (17) valor -> . BOOLEANO
    (18) valor -> . CADENA
    (19) valor -> . VAR
    (20) valor -> . VARIABLE_ARRAY
    (21) valor -> . operacion
    (22) valor -> . argumentologico
    (59) numero -> . ENTERO
    (60) numero -> . FLOTANTE
    (23) operacion -> . ENTERO
    (24) operacion -> . FLOTANTE
    (25) operacion -> . ENTERO operador operacion
    (26) operacion -> . FLOTANTE operador operacion
    (45) argumentologico -> . VAR operador_logico VAR
    (46) argumentologico -> . numero operador_logico numero
    (47) argumentologico -> . VAR operador_logico numero
    (48) argumentologico -> . VAR IGUAL BOOLEANO
    (49) argumentologico -> . VAR IGUAL CADENA
    (50) argumentologico -> . VAR DIFERENTE BOOLEANO
    (51) argumentologico -> . VAR DIFERENTE CADENA
    (52) argumentologico -> . numero operador_logico VAR
    (53) argumentologico -> . BOOLEANO IGUAL VAR
    (54) argumentologico -> . CADENA IGUAL VAR
    (55) argumentologico -> . CADENA IGUAL CADENA
    (56) argumentologico -> . CADENA DIFERENTE VAR
    (57) argumentologico -> . CADENA DIFERENTE CADENA
    (58) argumentologico -> . BOOLEANO

    CADENA          shift and go to state 192
    ENTERO          shift and go to state 52
    FLOTANTE        shift and go to state 53
    BOOLEANO        shift and go to state 29
    VAR             shift and go to state 31
    VARIABLE_ARRAY  shift and go to state 32

    valor_dic                      shift and go to state 193
    valor                          shift and go to state 194
    numero                         shift and go to state 195
    operacion                      shift and go to state 33
    argumentologico                shift and go to state 34

state 182

    (84) palabras -> CADENA . COMA palabras
    (85) palabras -> CADENA .

    COMA            shift and go to state 166
    RPAREN          reduce using rule 85 (palabras -> CADENA .)


state 183

    (84) palabras -> CADENA COMA palabras .

    RPAREN          reduce using rule 84 (palabras -> CADENA COMA palabras .)


state 184

    (86) numeros -> numero COMA numeros .

    RPAREN          reduce using rule 86 (numeros -> numero COMA numeros .)


state 185

    (112) linea -> VAR ASIGNACION CADENA EOL .

    ECHO            reduce using rule 112 (linea -> VAR ASIGNACION CADENA EOL .)
    VAR             reduce using rule 112 (linea -> VAR ASIGNACION CADENA EOL .)
    COMNT           reduce using rule 112 (linea -> VAR ASIGNACION CADENA EOL .)
    WHILE           reduce using rule 112 (linea -> VAR ASIGNACION CADENA EOL .)
    IF              reduce using rule 112 (linea -> VAR ASIGNACION CADENA EOL .)
    FOR             reduce using rule 112 (linea -> VAR ASIGNACION CADENA EOL .)
    RBRACE          reduce using rule 112 (linea -> VAR ASIGNACION CADENA EOL .)
    RETURN          reduce using rule 112 (linea -> VAR ASIGNACION CADENA EOL .)


state 186

    (35) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas . RBRACE
    (36) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas . RBRACE elseif

    RBRACE          shift and go to state 196


state 187

    (100) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION . NEW OBJETO LPAREN RPAREN EOL mas_atributos

    NEW             shift and go to state 197


state 188

    (30) while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .

    $end            reduce using rule 30 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 30 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 30 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 30 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 30 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 30 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 30 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 30 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 30 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)


state 189

    (31) if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .

    ELSE            reduce using rule 31 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ELSEIF          reduce using rule 31 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    $end            reduce using rule 31 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 31 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 31 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 31 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 31 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 31 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 31 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 31 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 31 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)


state 190

    (108) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA . SUMA RPAREN LBRACE lineas RBRACE

    SUMA            shift and go to state 198


state 191

    (109) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA . RESTA RPAREN LBRACE lineas RBRACE

    RESTA           shift and go to state 199


state 192

    (80) valor_dic -> CADENA .
    (18) valor -> CADENA .
    (54) argumentologico -> CADENA . IGUAL VAR
    (55) argumentologico -> CADENA . IGUAL CADENA
    (56) argumentologico -> CADENA . DIFERENTE VAR
    (57) argumentologico -> CADENA . DIFERENTE CADENA

    RPAREN          reduce using rule 80 (valor_dic -> CADENA .)
    COMA            reduce using rule 18 (valor -> CADENA .)
    IGUAL           shift and go to state 64
    DIFERENTE       shift and go to state 65


state 193

    (77) diccionario -> CADENA ASIGNACION MAYOR valor_dic .

    RPAREN          reduce using rule 77 (diccionario -> CADENA ASIGNACION MAYOR valor_dic .)


state 194

    (78) diccionario -> CADENA ASIGNACION MAYOR valor . COMA diccionario

    COMA            shift and go to state 200


state 195

    (79) valor_dic -> numero .
    (46) argumentologico -> numero . operador_logico numero
    (52) argumentologico -> numero . operador_logico VAR
    (61) operador_logico -> . IGUAL
    (62) operador_logico -> . DIFERENTE
    (63) operador_logico -> . MENOR
    (64) operador_logico -> . MAYOR
    (65) operador_logico -> . MENOR_IGUAL
    (66) operador_logico -> . MAYOR_IGUAL

    RPAREN          reduce using rule 79 (valor_dic -> numero .)
    IGUAL           shift and go to state 74
    DIFERENTE       shift and go to state 75
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENOR_IGUAL     shift and go to state 71
    MAYOR_IGUAL     shift and go to state 72

    operador_logico                shift and go to state 73

state 196

    (35) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .
    (36) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE . elseif
    (35) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (36) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif

  ! shift/reduce conflict for ELSEIF resolved as shift
    ELSE            reduce using rule 35 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    $end            reduce using rule 35 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 35 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 35 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 35 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 35 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 35 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 35 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 35 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 35 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ELSEIF          shift and go to state 39

  ! ELSEIF          [ reduce using rule 35 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .) ]

    elseif                         shift and go to state 201

state 197

    (100) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW . OBJETO LPAREN RPAREN EOL mas_atributos

    OBJETO          shift and go to state 202


state 198

    (108) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA . RPAREN LBRACE lineas RBRACE

    RPAREN          shift and go to state 203


state 199

    (109) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA . RPAREN LBRACE lineas RBRACE

    RPAREN          shift and go to state 204


state 200

    (78) diccionario -> CADENA ASIGNACION MAYOR valor COMA . diccionario
    (77) diccionario -> . CADENA ASIGNACION MAYOR valor_dic
    (78) diccionario -> . CADENA ASIGNACION MAYOR valor COMA diccionario

    CADENA          shift and go to state 205

    diccionario                    shift and go to state 206

state 201

    (36) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .

    ELSE            reduce using rule 36 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    ELSEIF          reduce using rule 36 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    $end            reduce using rule 36 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    ECHO            reduce using rule 36 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    VAR             reduce using rule 36 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    COMNT           reduce using rule 36 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    WHILE           reduce using rule 36 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    IF              reduce using rule 36 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    FOR             reduce using rule 36 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    RBRACE          reduce using rule 36 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    RETURN          reduce using rule 36 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)


state 202

    (100) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO . LPAREN RPAREN EOL mas_atributos

    LPAREN          shift and go to state 207


state 203

    (108) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN . LBRACE lineas RBRACE

    LBRACE          shift and go to state 208


state 204

    (109) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN . LBRACE lineas RBRACE

    LBRACE          shift and go to state 209


state 205

    (77) diccionario -> CADENA . ASIGNACION MAYOR valor_dic
    (78) diccionario -> CADENA . ASIGNACION MAYOR valor COMA diccionario

    ASIGNACION      shift and go to state 165


state 206

    (78) diccionario -> CADENA ASIGNACION MAYOR valor COMA diccionario .

    RPAREN          reduce using rule 78 (diccionario -> CADENA ASIGNACION MAYOR valor COMA diccionario .)


state 207

    (100) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN . RPAREN EOL mas_atributos

    RPAREN          shift and go to state 210


state 208

    (108) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE . lineas RBRACE
    (117) lineas -> . linea
    (118) lineas -> . linea lineas
    (110) linea -> . ECHO CADENA EOL
    (111) linea -> . ECHO VAR EOL
    (112) linea -> . VAR ASIGNACION CADENA EOL
    (113) linea -> . estructuracontrol
    (114) linea -> . comentario
    (115) linea -> . declaracion_numeros
    (116) linea -> . array
    (27) estructuracontrol -> . while
    (28) estructuracontrol -> . if
    (29) estructuracontrol -> . for
    (67) comentario -> . COMNT
    (73) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (74) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (30) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (31) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (32) if -> . if else
    (33) if -> . if elseif else
    (34) if -> . if elseif
    (108) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    ECHO            shift and go to state 115
    VAR             shift and go to state 116
    COMNT           shift and go to state 17
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 23

    lineas                         shift and go to state 211
    linea                          shift and go to state 114
    estructuracontrol              shift and go to state 117
    comentario                     shift and go to state 118
    declaracion_numeros            shift and go to state 119
    array                          shift and go to state 120
    while                          shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16

state 209

    (109) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE . lineas RBRACE
    (117) lineas -> . linea
    (118) lineas -> . linea lineas
    (110) linea -> . ECHO CADENA EOL
    (111) linea -> . ECHO VAR EOL
    (112) linea -> . VAR ASIGNACION CADENA EOL
    (113) linea -> . estructuracontrol
    (114) linea -> . comentario
    (115) linea -> . declaracion_numeros
    (116) linea -> . array
    (27) estructuracontrol -> . while
    (28) estructuracontrol -> . if
    (29) estructuracontrol -> . for
    (67) comentario -> . COMNT
    (73) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (74) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (30) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (31) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (32) if -> . if else
    (33) if -> . if elseif else
    (34) if -> . if elseif
    (108) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (109) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE

    ECHO            shift and go to state 115
    VAR             shift and go to state 116
    COMNT           shift and go to state 17
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 23

    lineas                         shift and go to state 212
    linea                          shift and go to state 114
    estructuracontrol              shift and go to state 117
    comentario                     shift and go to state 118
    declaracion_numeros            shift and go to state 119
    array                          shift and go to state 120
    while                          shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16

state 210

    (100) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN . EOL mas_atributos

    EOL             shift and go to state 213


state 211

    (108) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 214


state 212

    (109) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 215


state 213

    (100) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL . mas_atributos
    (106) mas_atributos -> . atributo
    (107) mas_atributos -> . atributo mas_atributos
    (105) atributo -> . VAR RESTA MAYOR ID ASIGNACION CADENA EOL

    VAR             shift and go to state 216

    mas_atributos                  shift and go to state 217
    atributo                       shift and go to state 218

state 214

    (108) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .

    $end            reduce using rule 108 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 108 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 108 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 108 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 108 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 108 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 108 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 108 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 108 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)


state 215

    (109) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .

    $end            reduce using rule 109 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 109 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 109 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 109 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 109 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 109 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 109 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 109 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 109 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)


state 216

    (105) atributo -> VAR . RESTA MAYOR ID ASIGNACION CADENA EOL

    RESTA           shift and go to state 219


state 217

    (100) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos .

    $end            reduce using rule 100 (objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos .)


state 218

    (106) mas_atributos -> atributo .
    (107) mas_atributos -> atributo . mas_atributos
    (106) mas_atributos -> . atributo
    (107) mas_atributos -> . atributo mas_atributos
    (105) atributo -> . VAR RESTA MAYOR ID ASIGNACION CADENA EOL

    $end            reduce using rule 106 (mas_atributos -> atributo .)
    VAR             shift and go to state 216

    atributo                       shift and go to state 218
    mas_atributos                  shift and go to state 220

state 219

    (105) atributo -> VAR RESTA . MAYOR ID ASIGNACION CADENA EOL

    MAYOR           shift and go to state 221


state 220

    (107) mas_atributos -> atributo mas_atributos .

    $end            reduce using rule 107 (mas_atributos -> atributo mas_atributos .)


state 221

    (105) atributo -> VAR RESTA MAYOR . ID ASIGNACION CADENA EOL

    ID              shift and go to state 222


state 222

    (105) atributo -> VAR RESTA MAYOR ID . ASIGNACION CADENA EOL

    ASIGNACION      shift and go to state 223


state 223

    (105) atributo -> VAR RESTA MAYOR ID ASIGNACION . CADENA EOL

    CADENA          shift and go to state 224


state 224

    (105) atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA . EOL

    EOL             shift and go to state 225


state 225

    (105) atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL .

    VAR             reduce using rule 105 (atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL .)
    $end            reduce using rule 105 (atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 37 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 114 resolved as shift
WARNING: shift/reduce conflict for VAR in state 114 resolved as shift
WARNING: shift/reduce conflict for COMNT in state 114 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 114 resolved as shift
WARNING: shift/reduce conflict for IF in state 114 resolved as shift
WARNING: shift/reduce conflict for FOR in state 114 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 196 resolved as shift
WARNING: reduce/reduce conflict in state 27 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (operacion -> ENTERO) in state 27
WARNING: reduce/reduce conflict in state 28 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (operacion -> FLOTANTE) in state 28
WARNING: reduce/reduce conflict in state 29 resolved using rule (valor -> BOOLEANO)
WARNING: rejected rule (argumentologico -> BOOLEANO) in state 29
WARNING: reduce/reduce conflict in state 52 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (numero -> ENTERO) in state 52
WARNING: reduce/reduce conflict in state 52 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (operacion -> ENTERO) in state 52
WARNING: reduce/reduce conflict in state 53 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (numero -> FLOTANTE) in state 53
WARNING: reduce/reduce conflict in state 53 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (operacion -> FLOTANTE) in state 53
