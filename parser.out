Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNAR
    BREAK
    CASE
    COMILLA_DOBLE
    COMILLA_DOBLE_CADENA
    COMILLA_SIMPLE
    COMILLA_SIMPLE_CADENA
    CONTINUE
    DICT
    DIV_ASIGNAR
    DO
    DOSPUNTOS
    ELSE
    ELSEIF
    ENDWHILE
    FOR
    FOREACH
    GLOBAL
    ID
    LBRACKET
    MAYOR_MENOR
    MENOR_MAYOR
    MODULO
    MULT_ASIGNAR
    POT_ASIGNAR
    PUNTO
    RBRACKET
    RESTA_ASIGNAR
    SET
    SUMA_ASIGNAR
    SWITCH
    TUPLE

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> asignacion
Rule 2     sentencia -> echo
Rule 3     sentencia -> estructuracontrol
Rule 4     sentencia -> comentario
Rule 5     sentencia -> declaracion_numeros
Rule 6     sentencia -> array
Rule 7     sentencia -> funcion
Rule 8     asignacion -> VAR ASIGNACION valor EOL
Rule 9     echo -> ECHO valores EOL
Rule 10    valores -> valor
Rule 11    valores -> valor COMA valores
Rule 12    valor -> ENTERO
Rule 13    valor -> FLOTANTE
Rule 14    valor -> BOOLEANO
Rule 15    valor -> CADENA
Rule 16    valor -> VAR
Rule 17    valor -> VARIABLE_ARRAY
Rule 18    valor -> operacion
Rule 19    valor -> argumentologico
Rule 20    operacion -> ENTERO
Rule 21    operacion -> FLOTANTE
Rule 22    operacion -> ENTERO operador operacion
Rule 23    operacion -> FLOTANTE operador operacion
Rule 24    estructuracontrol -> while
Rule 25    estructuracontrol -> if
Rule 26    while -> WHILE LPAREN condicion RPAREN LBRACE RBRACE
Rule 27    if -> IF LPAREN condicion RPAREN LBRACE RBRACE
Rule 28    condicion -> argumentologico
Rule 29    condicion -> argumentologico conector_logico condicion
Rule 30    condicion -> vacio
Rule 31    vacio -> EOL
Rule 32    conector_logico -> AND
Rule 33    conector_logico -> OR
Rule 34    valor_logico -> numero
Rule 35    valor_logico -> VAR
Rule 36    argumentologico -> VAR simboloLogico VAR
Rule 37    argumentologico -> numero simboloLogico numero
Rule 38    argumentologico -> VAR simboloLogico numero
Rule 39    argumentologico -> VAR IGUAL BOOLEANO
Rule 40    argumentologico -> VAR IGUAL CADENA
Rule 41    argumentologico -> VAR DIFERENTE BOOLEANO
Rule 42    argumentologico -> VAR DIFERENTE CADENA
Rule 43    argumentologico -> numero simboloLogico VAR
Rule 44    argumentologico -> BOOLEANO IGUAL VAR
Rule 45    argumentologico -> CADENA IGUAL VAR
Rule 46    argumentologico -> CADENA IGUAL CADENA
Rule 47    argumentologico -> CADENA DIFERENTE VAR
Rule 48    argumentologico -> CADENA DIFERENTE CADENA
Rule 49    argumentologico -> BOOLEANO
Rule 50    simboloLogico -> IGUAL
Rule 51    simboloLogico -> DIFERENTE
Rule 52    simboloLogico -> MENOR
Rule 53    simboloLogico -> MAYOR
Rule 54    simboloLogico -> MENOR_IGUAL
Rule 55    simboloLogico -> MAYOR_IGUAL
Rule 56    comentario -> COMNT
Rule 57    operador -> SUMA
Rule 58    operador -> RESTA
Rule 59    operador -> MULT
Rule 60    operador -> DIV
Rule 61    operador -> POT
Rule 62    numero -> ENTERO
Rule 63    numero -> FLOTANTE
Rule 64    declaracion_numeros -> VAR ASIGNACION numero EOL
Rule 65    array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
Rule 66    elementos -> lista
Rule 67    elementos -> diccionario
Rule 68    diccionario -> CADENA ASIGNACION MAYOR valor_dic
Rule 69    diccionario -> CADENA ASIGNACION MAYOR valor COMA diccionario
Rule 70    valor_dic -> numero
Rule 71    valor_dic -> CADENA
Rule 72    lista -> palabras
Rule 73    lista -> numeros
Rule 74    lista -> variables
Rule 75    palabras -> CADENA COMA palabras
Rule 76    palabras -> CADENA
Rule 77    numeros -> numero COMA numeros
Rule 78    numeros -> numero
Rule 79    variables -> VAR COMA variables
Rule 80    variables -> VAR
Rule 81    funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE
Rule 82    tipo_funcion -> FUNCION
Rule 83    tipo_funcion -> VARIABLE_FUNCION
Rule 84    final_funcion -> RETURN VAR EOL
Rule 85    final_funcion -> cuerpo_funcion
Rule 86    cuerpo_funcion -> declaracion_numeros final_funcion
Rule 87    cuerpo_funcion -> array final_funcion
Rule 88    cuerpo_funcion -> estructuracontrol final_funcion
Rule 89    ingreso_datos -> VAR ASIGNACION readline EOL
Rule 90    readline -> READLINE LPAREN CADENA RPAREN
Rule 91    objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL VARIABLE_OBJETO ASIGNACION CADENA EOL
Rule 92    objeto -> CLASE OBJETO LBRACE mas_objetos PUBLIC VAR EOL RBRACE
Rule 93    objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL
Rule 94    objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL VARIABLE_OBJETO EOL
Rule 95    cuerpo_objeto -> PUBLIC VAR EOL
Rule 96    mas_objetos -> cuerpo_objeto
Rule 97    mas_objetos -> cuerpo_objeto mas_objetos

Terminals, with rules where they appear

AND                  : 32
ARRAY                : 65
ASIGNACION           : 8 64 65 68 69 89 91 91 93 94
ASIGNAR              : 
BOOLEANO             : 14 39 41 44 49
BREAK                : 
CADENA               : 15 40 42 45 46 46 47 48 48 68 69 71 75 76 90 91
CASE                 : 
CLASE                : 91 92 93 94
COMA                 : 11 69 75 77 79
COMILLA_DOBLE        : 
COMILLA_DOBLE_CADENA : 
COMILLA_SIMPLE       : 
COMILLA_SIMPLE_CADENA : 
COMNT                : 56
CONTINUE             : 
DICT                 : 
DIFERENTE            : 41 42 47 48 51
DIV                  : 60
DIV_ASIGNAR          : 
DO                   : 
DOSPUNTOS            : 
ECHO                 : 9
ELSE                 : 
ELSEIF               : 
ENDWHILE             : 
ENTERO               : 12 20 22 62
EOL                  : 8 9 31 64 65 84 89 91 91 92 93 94 94 95
FLOTANTE             : 13 21 23 63
FOR                  : 
FOREACH              : 
FUNCION              : 82
FUNCTION             : 81
GLOBAL               : 
ID                   : 
IF                   : 27
IGUAL                : 39 40 44 45 46 50
LBRACE               : 26 27 81 91 92 93 94
LBRACKET             : 
LPAREN               : 26 27 65 90 91 93 94
MAYOR                : 53 68 69
MAYOR_IGUAL          : 55
MAYOR_MENOR          : 
MENOR                : 52
MENOR_IGUAL          : 54
MENOR_MAYOR          : 
MODULO               : 
MULT                 : 59
MULT_ASIGNAR         : 
NEW                  : 91 93 94
OBJETO               : 91 91 92 93 93 94 94
OR                   : 33
POT                  : 61
POT_ASIGNAR          : 
PUBLIC               : 92 95
PUNTO                : 
RBRACE               : 26 27 81 91 92 93 94
RBRACKET             : 
READLINE             : 90
RESTA                : 58
RESTA_ASIGNAR        : 
RETURN               : 84
RPAREN               : 26 27 65 90 91 93 94
SET                  : 
SUMA                 : 57
SUMA_ASIGNAR         : 
SWITCH               : 
TUPLE                : 
VAR                  : 8 16 35 36 36 38 39 40 41 42 43 44 45 47 64 65 79 80 84 89 91 92 93 94 95
VARIABLE_ARRAY       : 17
VARIABLE_FUNCION     : 83
VARIABLE_OBJETO      : 91 94
WHILE                : 26
error                : 

Nonterminals, with rules where they appear

argumentologico      : 19 28 29
array                : 6 87
asignacion           : 1
comentario           : 4
condicion            : 26 27 29
conector_logico      : 29
cuerpo_funcion       : 85
cuerpo_objeto        : 96 97
declaracion_numeros  : 5 86
diccionario          : 67 69
echo                 : 2
elementos            : 65
estructuracontrol    : 3 88
final_funcion        : 81 86 87 88
funcion              : 7
if                   : 25
ingreso_datos        : 
lista                : 66
mas_objetos          : 91 92 93 94 97
numero               : 34 37 37 38 43 64 70 77 78
numeros              : 73 77
objeto               : 
operacion            : 18 22 23
operador             : 22 23
palabras             : 72 75
readline             : 89
sentencia            : 0
simboloLogico        : 36 37 38 43
tipo_funcion         : 81
vacio                : 30
valor                : 8 10 11 69
valor_dic            : 68
valor_logico         : 
valores              : 9 11
variables            : 74 79
while                : 24

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . asignacion
    (2) sentencia -> . echo
    (3) sentencia -> . estructuracontrol
    (4) sentencia -> . comentario
    (5) sentencia -> . declaracion_numeros
    (6) sentencia -> . array
    (7) sentencia -> . funcion
    (8) asignacion -> . VAR ASIGNACION valor EOL
    (9) echo -> . ECHO valores EOL
    (24) estructuracontrol -> . while
    (25) estructuracontrol -> . if
    (56) comentario -> . COMNT
    (64) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (65) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (81) funcion -> . FUNCTION tipo_funcion LBRACE final_funcion RBRACE
    (26) while -> . WHILE LPAREN condicion RPAREN LBRACE RBRACE
    (27) if -> . IF LPAREN condicion RPAREN LBRACE RBRACE

    VAR             shift and go to state 9
    ECHO            shift and go to state 10
    COMNT           shift and go to state 13
    FUNCTION        shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16

    sentencia                      shift and go to state 1
    asignacion                     shift and go to state 2
    echo                           shift and go to state 3
    estructuracontrol              shift and go to state 4
    comentario                     shift and go to state 5
    declaracion_numeros            shift and go to state 6
    array                          shift and go to state 7
    funcion                        shift and go to state 8
    while                          shift and go to state 11
    if                             shift and go to state 12

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> asignacion .

    $end            reduce using rule 1 (sentencia -> asignacion .)


state 3

    (2) sentencia -> echo .

    $end            reduce using rule 2 (sentencia -> echo .)


state 4

    (3) sentencia -> estructuracontrol .

    $end            reduce using rule 3 (sentencia -> estructuracontrol .)


state 5

    (4) sentencia -> comentario .

    $end            reduce using rule 4 (sentencia -> comentario .)


state 6

    (5) sentencia -> declaracion_numeros .

    $end            reduce using rule 5 (sentencia -> declaracion_numeros .)


state 7

    (6) sentencia -> array .

    $end            reduce using rule 6 (sentencia -> array .)


state 8

    (7) sentencia -> funcion .

    $end            reduce using rule 7 (sentencia -> funcion .)


state 9

    (8) asignacion -> VAR . ASIGNACION valor EOL
    (64) declaracion_numeros -> VAR . ASIGNACION numero EOL
    (65) array -> VAR . ASIGNACION ARRAY LPAREN elementos RPAREN EOL

    ASIGNACION      shift and go to state 17


state 10

    (9) echo -> ECHO . valores EOL
    (10) valores -> . valor
    (11) valores -> . valor COMA valores
    (12) valor -> . ENTERO
    (13) valor -> . FLOTANTE
    (14) valor -> . BOOLEANO
    (15) valor -> . CADENA
    (16) valor -> . VAR
    (17) valor -> . VARIABLE_ARRAY
    (18) valor -> . operacion
    (19) valor -> . argumentologico
    (20) operacion -> . ENTERO
    (21) operacion -> . FLOTANTE
    (22) operacion -> . ENTERO operador operacion
    (23) operacion -> . FLOTANTE operador operacion
    (36) argumentologico -> . VAR simboloLogico VAR
    (37) argumentologico -> . numero simboloLogico numero
    (38) argumentologico -> . VAR simboloLogico numero
    (39) argumentologico -> . VAR IGUAL BOOLEANO
    (40) argumentologico -> . VAR IGUAL CADENA
    (41) argumentologico -> . VAR DIFERENTE BOOLEANO
    (42) argumentologico -> . VAR DIFERENTE CADENA
    (43) argumentologico -> . numero simboloLogico VAR
    (44) argumentologico -> . BOOLEANO IGUAL VAR
    (45) argumentologico -> . CADENA IGUAL VAR
    (46) argumentologico -> . CADENA IGUAL CADENA
    (47) argumentologico -> . CADENA DIFERENTE VAR
    (48) argumentologico -> . CADENA DIFERENTE CADENA
    (49) argumentologico -> . BOOLEANO
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE

    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21
    BOOLEANO        shift and go to state 22
    CADENA          shift and go to state 23
    VAR             shift and go to state 24
    VARIABLE_ARRAY  shift and go to state 25

    valores                        shift and go to state 18
    valor                          shift and go to state 19
    operacion                      shift and go to state 26
    argumentologico                shift and go to state 27
    numero                         shift and go to state 28

state 11

    (24) estructuracontrol -> while .

    $end            reduce using rule 24 (estructuracontrol -> while .)
    RETURN          reduce using rule 24 (estructuracontrol -> while .)
    VAR             reduce using rule 24 (estructuracontrol -> while .)
    WHILE           reduce using rule 24 (estructuracontrol -> while .)
    IF              reduce using rule 24 (estructuracontrol -> while .)


state 12

    (25) estructuracontrol -> if .

    $end            reduce using rule 25 (estructuracontrol -> if .)
    RETURN          reduce using rule 25 (estructuracontrol -> if .)
    VAR             reduce using rule 25 (estructuracontrol -> if .)
    WHILE           reduce using rule 25 (estructuracontrol -> if .)
    IF              reduce using rule 25 (estructuracontrol -> if .)


state 13

    (56) comentario -> COMNT .

    $end            reduce using rule 56 (comentario -> COMNT .)


state 14

    (81) funcion -> FUNCTION . tipo_funcion LBRACE final_funcion RBRACE
    (82) tipo_funcion -> . FUNCION
    (83) tipo_funcion -> . VARIABLE_FUNCION

    FUNCION         shift and go to state 30
    VARIABLE_FUNCION shift and go to state 31

    tipo_funcion                   shift and go to state 29

state 15

    (26) while -> WHILE . LPAREN condicion RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 32


state 16

    (27) if -> IF . LPAREN condicion RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 33


state 17

    (8) asignacion -> VAR ASIGNACION . valor EOL
    (64) declaracion_numeros -> VAR ASIGNACION . numero EOL
    (65) array -> VAR ASIGNACION . ARRAY LPAREN elementos RPAREN EOL
    (12) valor -> . ENTERO
    (13) valor -> . FLOTANTE
    (14) valor -> . BOOLEANO
    (15) valor -> . CADENA
    (16) valor -> . VAR
    (17) valor -> . VARIABLE_ARRAY
    (18) valor -> . operacion
    (19) valor -> . argumentologico
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE
    (20) operacion -> . ENTERO
    (21) operacion -> . FLOTANTE
    (22) operacion -> . ENTERO operador operacion
    (23) operacion -> . FLOTANTE operador operacion
    (36) argumentologico -> . VAR simboloLogico VAR
    (37) argumentologico -> . numero simboloLogico numero
    (38) argumentologico -> . VAR simboloLogico numero
    (39) argumentologico -> . VAR IGUAL BOOLEANO
    (40) argumentologico -> . VAR IGUAL CADENA
    (41) argumentologico -> . VAR DIFERENTE BOOLEANO
    (42) argumentologico -> . VAR DIFERENTE CADENA
    (43) argumentologico -> . numero simboloLogico VAR
    (44) argumentologico -> . BOOLEANO IGUAL VAR
    (45) argumentologico -> . CADENA IGUAL VAR
    (46) argumentologico -> . CADENA IGUAL CADENA
    (47) argumentologico -> . CADENA DIFERENTE VAR
    (48) argumentologico -> . CADENA DIFERENTE CADENA
    (49) argumentologico -> . BOOLEANO

    ARRAY           shift and go to state 36
    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    BOOLEANO        shift and go to state 22
    CADENA          shift and go to state 23
    VAR             shift and go to state 24
    VARIABLE_ARRAY  shift and go to state 25

    valor                          shift and go to state 34
    numero                         shift and go to state 35
    operacion                      shift and go to state 26
    argumentologico                shift and go to state 27

state 18

    (9) echo -> ECHO valores . EOL

    EOL             shift and go to state 39


state 19

    (10) valores -> valor .
    (11) valores -> valor . COMA valores

    EOL             reduce using rule 10 (valores -> valor .)
    COMA            shift and go to state 40


state 20

    (12) valor -> ENTERO .
    (20) operacion -> ENTERO .
    (22) operacion -> ENTERO . operador operacion
    (62) numero -> ENTERO .
    (57) operador -> . SUMA
    (58) operador -> . RESTA
    (59) operador -> . MULT
    (60) operador -> . DIV
    (61) operador -> . POT

  ! reduce/reduce conflict for COMA resolved using rule 12 (valor -> ENTERO .)
  ! reduce/reduce conflict for EOL resolved using rule 12 (valor -> ENTERO .)
    COMA            reduce using rule 12 (valor -> ENTERO .)
    EOL             reduce using rule 12 (valor -> ENTERO .)
    IGUAL           reduce using rule 62 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 62 (numero -> ENTERO .)
    MENOR           reduce using rule 62 (numero -> ENTERO .)
    MAYOR           reduce using rule 62 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 62 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 62 (numero -> ENTERO .)
    SUMA            shift and go to state 42
    RESTA           shift and go to state 43
    MULT            shift and go to state 44
    DIV             shift and go to state 45
    POT             shift and go to state 46

  ! COMA            [ reduce using rule 20 (operacion -> ENTERO .) ]
  ! EOL             [ reduce using rule 20 (operacion -> ENTERO .) ]

    operador                       shift and go to state 41

state 21

    (13) valor -> FLOTANTE .
    (21) operacion -> FLOTANTE .
    (23) operacion -> FLOTANTE . operador operacion
    (63) numero -> FLOTANTE .
    (57) operador -> . SUMA
    (58) operador -> . RESTA
    (59) operador -> . MULT
    (60) operador -> . DIV
    (61) operador -> . POT

  ! reduce/reduce conflict for COMA resolved using rule 13 (valor -> FLOTANTE .)
  ! reduce/reduce conflict for EOL resolved using rule 13 (valor -> FLOTANTE .)
    COMA            reduce using rule 13 (valor -> FLOTANTE .)
    EOL             reduce using rule 13 (valor -> FLOTANTE .)
    IGUAL           reduce using rule 63 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 63 (numero -> FLOTANTE .)
    MENOR           reduce using rule 63 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 63 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 63 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 63 (numero -> FLOTANTE .)
    SUMA            shift and go to state 42
    RESTA           shift and go to state 43
    MULT            shift and go to state 44
    DIV             shift and go to state 45
    POT             shift and go to state 46

  ! COMA            [ reduce using rule 21 (operacion -> FLOTANTE .) ]
  ! EOL             [ reduce using rule 21 (operacion -> FLOTANTE .) ]

    operador                       shift and go to state 47

state 22

    (14) valor -> BOOLEANO .
    (44) argumentologico -> BOOLEANO . IGUAL VAR
    (49) argumentologico -> BOOLEANO .

  ! reduce/reduce conflict for COMA resolved using rule 14 (valor -> BOOLEANO .)
  ! reduce/reduce conflict for EOL resolved using rule 14 (valor -> BOOLEANO .)
    COMA            reduce using rule 14 (valor -> BOOLEANO .)
    EOL             reduce using rule 14 (valor -> BOOLEANO .)
    IGUAL           shift and go to state 48

  ! COMA            [ reduce using rule 49 (argumentologico -> BOOLEANO .) ]
  ! EOL             [ reduce using rule 49 (argumentologico -> BOOLEANO .) ]


state 23

    (15) valor -> CADENA .
    (45) argumentologico -> CADENA . IGUAL VAR
    (46) argumentologico -> CADENA . IGUAL CADENA
    (47) argumentologico -> CADENA . DIFERENTE VAR
    (48) argumentologico -> CADENA . DIFERENTE CADENA

    COMA            reduce using rule 15 (valor -> CADENA .)
    EOL             reduce using rule 15 (valor -> CADENA .)
    IGUAL           shift and go to state 49
    DIFERENTE       shift and go to state 50


state 24

    (16) valor -> VAR .
    (36) argumentologico -> VAR . simboloLogico VAR
    (38) argumentologico -> VAR . simboloLogico numero
    (39) argumentologico -> VAR . IGUAL BOOLEANO
    (40) argumentologico -> VAR . IGUAL CADENA
    (41) argumentologico -> VAR . DIFERENTE BOOLEANO
    (42) argumentologico -> VAR . DIFERENTE CADENA
    (50) simboloLogico -> . IGUAL
    (51) simboloLogico -> . DIFERENTE
    (52) simboloLogico -> . MENOR
    (53) simboloLogico -> . MAYOR
    (54) simboloLogico -> . MENOR_IGUAL
    (55) simboloLogico -> . MAYOR_IGUAL

    COMA            reduce using rule 16 (valor -> VAR .)
    EOL             reduce using rule 16 (valor -> VAR .)
    IGUAL           shift and go to state 52
    DIFERENTE       shift and go to state 53
    MENOR           shift and go to state 54
    MAYOR           shift and go to state 55
    MENOR_IGUAL     shift and go to state 56
    MAYOR_IGUAL     shift and go to state 57

    simboloLogico                  shift and go to state 51

state 25

    (17) valor -> VARIABLE_ARRAY .

    COMA            reduce using rule 17 (valor -> VARIABLE_ARRAY .)
    EOL             reduce using rule 17 (valor -> VARIABLE_ARRAY .)


state 26

    (18) valor -> operacion .

    COMA            reduce using rule 18 (valor -> operacion .)
    EOL             reduce using rule 18 (valor -> operacion .)


state 27

    (19) valor -> argumentologico .

    COMA            reduce using rule 19 (valor -> argumentologico .)
    EOL             reduce using rule 19 (valor -> argumentologico .)


state 28

    (37) argumentologico -> numero . simboloLogico numero
    (43) argumentologico -> numero . simboloLogico VAR
    (50) simboloLogico -> . IGUAL
    (51) simboloLogico -> . DIFERENTE
    (52) simboloLogico -> . MENOR
    (53) simboloLogico -> . MAYOR
    (54) simboloLogico -> . MENOR_IGUAL
    (55) simboloLogico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 59
    DIFERENTE       shift and go to state 60
    MENOR           shift and go to state 54
    MAYOR           shift and go to state 55
    MENOR_IGUAL     shift and go to state 56
    MAYOR_IGUAL     shift and go to state 57

    simboloLogico                  shift and go to state 58

state 29

    (81) funcion -> FUNCTION tipo_funcion . LBRACE final_funcion RBRACE

    LBRACE          shift and go to state 61


state 30

    (82) tipo_funcion -> FUNCION .

    LBRACE          reduce using rule 82 (tipo_funcion -> FUNCION .)


state 31

    (83) tipo_funcion -> VARIABLE_FUNCION .

    LBRACE          reduce using rule 83 (tipo_funcion -> VARIABLE_FUNCION .)


state 32

    (26) while -> WHILE LPAREN . condicion RPAREN LBRACE RBRACE
    (28) condicion -> . argumentologico
    (29) condicion -> . argumentologico conector_logico condicion
    (30) condicion -> . vacio
    (36) argumentologico -> . VAR simboloLogico VAR
    (37) argumentologico -> . numero simboloLogico numero
    (38) argumentologico -> . VAR simboloLogico numero
    (39) argumentologico -> . VAR IGUAL BOOLEANO
    (40) argumentologico -> . VAR IGUAL CADENA
    (41) argumentologico -> . VAR DIFERENTE BOOLEANO
    (42) argumentologico -> . VAR DIFERENTE CADENA
    (43) argumentologico -> . numero simboloLogico VAR
    (44) argumentologico -> . BOOLEANO IGUAL VAR
    (45) argumentologico -> . CADENA IGUAL VAR
    (46) argumentologico -> . CADENA IGUAL CADENA
    (47) argumentologico -> . CADENA DIFERENTE VAR
    (48) argumentologico -> . CADENA DIFERENTE CADENA
    (49) argumentologico -> . BOOLEANO
    (31) vacio -> . EOL
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE

    VAR             shift and go to state 65
    BOOLEANO        shift and go to state 66
    CADENA          shift and go to state 67
    EOL             shift and go to state 68
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 70

    condicion                      shift and go to state 62
    argumentologico                shift and go to state 63
    vacio                          shift and go to state 64
    numero                         shift and go to state 28

state 33

    (27) if -> IF LPAREN . condicion RPAREN LBRACE RBRACE
    (28) condicion -> . argumentologico
    (29) condicion -> . argumentologico conector_logico condicion
    (30) condicion -> . vacio
    (36) argumentologico -> . VAR simboloLogico VAR
    (37) argumentologico -> . numero simboloLogico numero
    (38) argumentologico -> . VAR simboloLogico numero
    (39) argumentologico -> . VAR IGUAL BOOLEANO
    (40) argumentologico -> . VAR IGUAL CADENA
    (41) argumentologico -> . VAR DIFERENTE BOOLEANO
    (42) argumentologico -> . VAR DIFERENTE CADENA
    (43) argumentologico -> . numero simboloLogico VAR
    (44) argumentologico -> . BOOLEANO IGUAL VAR
    (45) argumentologico -> . CADENA IGUAL VAR
    (46) argumentologico -> . CADENA IGUAL CADENA
    (47) argumentologico -> . CADENA DIFERENTE VAR
    (48) argumentologico -> . CADENA DIFERENTE CADENA
    (49) argumentologico -> . BOOLEANO
    (31) vacio -> . EOL
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE

    VAR             shift and go to state 65
    BOOLEANO        shift and go to state 66
    CADENA          shift and go to state 67
    EOL             shift and go to state 68
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 70

    condicion                      shift and go to state 71
    argumentologico                shift and go to state 63
    vacio                          shift and go to state 64
    numero                         shift and go to state 28

state 34

    (8) asignacion -> VAR ASIGNACION valor . EOL

    EOL             shift and go to state 72


state 35

    (64) declaracion_numeros -> VAR ASIGNACION numero . EOL
    (37) argumentologico -> numero . simboloLogico numero
    (43) argumentologico -> numero . simboloLogico VAR
    (50) simboloLogico -> . IGUAL
    (51) simboloLogico -> . DIFERENTE
    (52) simboloLogico -> . MENOR
    (53) simboloLogico -> . MAYOR
    (54) simboloLogico -> . MENOR_IGUAL
    (55) simboloLogico -> . MAYOR_IGUAL

    EOL             shift and go to state 73
    IGUAL           shift and go to state 59
    DIFERENTE       shift and go to state 60
    MENOR           shift and go to state 54
    MAYOR           shift and go to state 55
    MENOR_IGUAL     shift and go to state 56
    MAYOR_IGUAL     shift and go to state 57

    simboloLogico                  shift and go to state 58

state 36

    (65) array -> VAR ASIGNACION ARRAY . LPAREN elementos RPAREN EOL

    LPAREN          shift and go to state 74


state 37

    (12) valor -> ENTERO .
    (62) numero -> ENTERO .
    (20) operacion -> ENTERO .
    (22) operacion -> ENTERO . operador operacion
    (57) operador -> . SUMA
    (58) operador -> . RESTA
    (59) operador -> . MULT
    (60) operador -> . DIV
    (61) operador -> . POT

  ! reduce/reduce conflict for EOL resolved using rule 12 (valor -> ENTERO .)
  ! reduce/reduce conflict for EOL resolved using rule 12 (valor -> ENTERO .)
  ! reduce/reduce conflict for COMA resolved using rule 12 (valor -> ENTERO .)
    EOL             reduce using rule 12 (valor -> ENTERO .)
    COMA            reduce using rule 12 (valor -> ENTERO .)
    IGUAL           reduce using rule 62 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 62 (numero -> ENTERO .)
    MENOR           reduce using rule 62 (numero -> ENTERO .)
    MAYOR           reduce using rule 62 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 62 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 62 (numero -> ENTERO .)
    RPAREN          reduce using rule 62 (numero -> ENTERO .)
    SUMA            shift and go to state 42
    RESTA           shift and go to state 43
    MULT            shift and go to state 44
    DIV             shift and go to state 45
    POT             shift and go to state 46

  ! EOL             [ reduce using rule 62 (numero -> ENTERO .) ]
  ! EOL             [ reduce using rule 20 (operacion -> ENTERO .) ]
  ! COMA            [ reduce using rule 20 (operacion -> ENTERO .) ]

    operador                       shift and go to state 41

state 38

    (13) valor -> FLOTANTE .
    (63) numero -> FLOTANTE .
    (21) operacion -> FLOTANTE .
    (23) operacion -> FLOTANTE . operador operacion
    (57) operador -> . SUMA
    (58) operador -> . RESTA
    (59) operador -> . MULT
    (60) operador -> . DIV
    (61) operador -> . POT

  ! reduce/reduce conflict for EOL resolved using rule 13 (valor -> FLOTANTE .)
  ! reduce/reduce conflict for EOL resolved using rule 13 (valor -> FLOTANTE .)
  ! reduce/reduce conflict for COMA resolved using rule 13 (valor -> FLOTANTE .)
    EOL             reduce using rule 13 (valor -> FLOTANTE .)
    COMA            reduce using rule 13 (valor -> FLOTANTE .)
    IGUAL           reduce using rule 63 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 63 (numero -> FLOTANTE .)
    MENOR           reduce using rule 63 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 63 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 63 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 63 (numero -> FLOTANTE .)
    RPAREN          reduce using rule 63 (numero -> FLOTANTE .)
    SUMA            shift and go to state 42
    RESTA           shift and go to state 43
    MULT            shift and go to state 44
    DIV             shift and go to state 45
    POT             shift and go to state 46

  ! EOL             [ reduce using rule 63 (numero -> FLOTANTE .) ]
  ! EOL             [ reduce using rule 21 (operacion -> FLOTANTE .) ]
  ! COMA            [ reduce using rule 21 (operacion -> FLOTANTE .) ]

    operador                       shift and go to state 47

state 39

    (9) echo -> ECHO valores EOL .

    $end            reduce using rule 9 (echo -> ECHO valores EOL .)


state 40

    (11) valores -> valor COMA . valores
    (10) valores -> . valor
    (11) valores -> . valor COMA valores
    (12) valor -> . ENTERO
    (13) valor -> . FLOTANTE
    (14) valor -> . BOOLEANO
    (15) valor -> . CADENA
    (16) valor -> . VAR
    (17) valor -> . VARIABLE_ARRAY
    (18) valor -> . operacion
    (19) valor -> . argumentologico
    (20) operacion -> . ENTERO
    (21) operacion -> . FLOTANTE
    (22) operacion -> . ENTERO operador operacion
    (23) operacion -> . FLOTANTE operador operacion
    (36) argumentologico -> . VAR simboloLogico VAR
    (37) argumentologico -> . numero simboloLogico numero
    (38) argumentologico -> . VAR simboloLogico numero
    (39) argumentologico -> . VAR IGUAL BOOLEANO
    (40) argumentologico -> . VAR IGUAL CADENA
    (41) argumentologico -> . VAR DIFERENTE BOOLEANO
    (42) argumentologico -> . VAR DIFERENTE CADENA
    (43) argumentologico -> . numero simboloLogico VAR
    (44) argumentologico -> . BOOLEANO IGUAL VAR
    (45) argumentologico -> . CADENA IGUAL VAR
    (46) argumentologico -> . CADENA IGUAL CADENA
    (47) argumentologico -> . CADENA DIFERENTE VAR
    (48) argumentologico -> . CADENA DIFERENTE CADENA
    (49) argumentologico -> . BOOLEANO
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE

    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21
    BOOLEANO        shift and go to state 22
    CADENA          shift and go to state 23
    VAR             shift and go to state 24
    VARIABLE_ARRAY  shift and go to state 25

    valor                          shift and go to state 19
    valores                        shift and go to state 75
    operacion                      shift and go to state 26
    argumentologico                shift and go to state 27
    numero                         shift and go to state 28

state 41

    (22) operacion -> ENTERO operador . operacion
    (20) operacion -> . ENTERO
    (21) operacion -> . FLOTANTE
    (22) operacion -> . ENTERO operador operacion
    (23) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 76
    FLOTANTE        shift and go to state 78

    operacion                      shift and go to state 77

state 42

    (57) operador -> SUMA .

    ENTERO          reduce using rule 57 (operador -> SUMA .)
    FLOTANTE        reduce using rule 57 (operador -> SUMA .)


state 43

    (58) operador -> RESTA .

    ENTERO          reduce using rule 58 (operador -> RESTA .)
    FLOTANTE        reduce using rule 58 (operador -> RESTA .)


state 44

    (59) operador -> MULT .

    ENTERO          reduce using rule 59 (operador -> MULT .)
    FLOTANTE        reduce using rule 59 (operador -> MULT .)


state 45

    (60) operador -> DIV .

    ENTERO          reduce using rule 60 (operador -> DIV .)
    FLOTANTE        reduce using rule 60 (operador -> DIV .)


state 46

    (61) operador -> POT .

    ENTERO          reduce using rule 61 (operador -> POT .)
    FLOTANTE        reduce using rule 61 (operador -> POT .)


state 47

    (23) operacion -> FLOTANTE operador . operacion
    (20) operacion -> . ENTERO
    (21) operacion -> . FLOTANTE
    (22) operacion -> . ENTERO operador operacion
    (23) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 76
    FLOTANTE        shift and go to state 78

    operacion                      shift and go to state 79

state 48

    (44) argumentologico -> BOOLEANO IGUAL . VAR

    VAR             shift and go to state 80


state 49

    (45) argumentologico -> CADENA IGUAL . VAR
    (46) argumentologico -> CADENA IGUAL . CADENA

    VAR             shift and go to state 82
    CADENA          shift and go to state 81


state 50

    (47) argumentologico -> CADENA DIFERENTE . VAR
    (48) argumentologico -> CADENA DIFERENTE . CADENA

    VAR             shift and go to state 84
    CADENA          shift and go to state 83


state 51

    (36) argumentologico -> VAR simboloLogico . VAR
    (38) argumentologico -> VAR simboloLogico . numero
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE

    VAR             shift and go to state 85
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 70

    numero                         shift and go to state 86

state 52

    (39) argumentologico -> VAR IGUAL . BOOLEANO
    (40) argumentologico -> VAR IGUAL . CADENA
    (50) simboloLogico -> IGUAL .

    BOOLEANO        shift and go to state 87
    CADENA          shift and go to state 88
    VAR             reduce using rule 50 (simboloLogico -> IGUAL .)
    ENTERO          reduce using rule 50 (simboloLogico -> IGUAL .)
    FLOTANTE        reduce using rule 50 (simboloLogico -> IGUAL .)


state 53

    (41) argumentologico -> VAR DIFERENTE . BOOLEANO
    (42) argumentologico -> VAR DIFERENTE . CADENA
    (51) simboloLogico -> DIFERENTE .

    BOOLEANO        shift and go to state 89
    CADENA          shift and go to state 90
    VAR             reduce using rule 51 (simboloLogico -> DIFERENTE .)
    ENTERO          reduce using rule 51 (simboloLogico -> DIFERENTE .)
    FLOTANTE        reduce using rule 51 (simboloLogico -> DIFERENTE .)


state 54

    (52) simboloLogico -> MENOR .

    VAR             reduce using rule 52 (simboloLogico -> MENOR .)
    ENTERO          reduce using rule 52 (simboloLogico -> MENOR .)
    FLOTANTE        reduce using rule 52 (simboloLogico -> MENOR .)


state 55

    (53) simboloLogico -> MAYOR .

    VAR             reduce using rule 53 (simboloLogico -> MAYOR .)
    ENTERO          reduce using rule 53 (simboloLogico -> MAYOR .)
    FLOTANTE        reduce using rule 53 (simboloLogico -> MAYOR .)


state 56

    (54) simboloLogico -> MENOR_IGUAL .

    VAR             reduce using rule 54 (simboloLogico -> MENOR_IGUAL .)
    ENTERO          reduce using rule 54 (simboloLogico -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 54 (simboloLogico -> MENOR_IGUAL .)


state 57

    (55) simboloLogico -> MAYOR_IGUAL .

    VAR             reduce using rule 55 (simboloLogico -> MAYOR_IGUAL .)
    ENTERO          reduce using rule 55 (simboloLogico -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 55 (simboloLogico -> MAYOR_IGUAL .)


state 58

    (37) argumentologico -> numero simboloLogico . numero
    (43) argumentologico -> numero simboloLogico . VAR
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE

    VAR             shift and go to state 92
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 70

    numero                         shift and go to state 91

state 59

    (50) simboloLogico -> IGUAL .

    VAR             reduce using rule 50 (simboloLogico -> IGUAL .)
    ENTERO          reduce using rule 50 (simboloLogico -> IGUAL .)
    FLOTANTE        reduce using rule 50 (simboloLogico -> IGUAL .)


state 60

    (51) simboloLogico -> DIFERENTE .

    VAR             reduce using rule 51 (simboloLogico -> DIFERENTE .)
    ENTERO          reduce using rule 51 (simboloLogico -> DIFERENTE .)
    FLOTANTE        reduce using rule 51 (simboloLogico -> DIFERENTE .)


state 61

    (81) funcion -> FUNCTION tipo_funcion LBRACE . final_funcion RBRACE
    (84) final_funcion -> . RETURN VAR EOL
    (85) final_funcion -> . cuerpo_funcion
    (86) cuerpo_funcion -> . declaracion_numeros final_funcion
    (87) cuerpo_funcion -> . array final_funcion
    (88) cuerpo_funcion -> . estructuracontrol final_funcion
    (64) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (65) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (24) estructuracontrol -> . while
    (25) estructuracontrol -> . if
    (26) while -> . WHILE LPAREN condicion RPAREN LBRACE RBRACE
    (27) if -> . IF LPAREN condicion RPAREN LBRACE RBRACE

    RETURN          shift and go to state 94
    VAR             shift and go to state 95
    WHILE           shift and go to state 15
    IF              shift and go to state 16

    final_funcion                  shift and go to state 93
    cuerpo_funcion                 shift and go to state 96
    declaracion_numeros            shift and go to state 97
    array                          shift and go to state 98
    estructuracontrol              shift and go to state 99
    while                          shift and go to state 11
    if                             shift and go to state 12

state 62

    (26) while -> WHILE LPAREN condicion . RPAREN LBRACE RBRACE

    RPAREN          shift and go to state 100


state 63

    (28) condicion -> argumentologico .
    (29) condicion -> argumentologico . conector_logico condicion
    (32) conector_logico -> . AND
    (33) conector_logico -> . OR

    RPAREN          reduce using rule 28 (condicion -> argumentologico .)
    AND             shift and go to state 102
    OR              shift and go to state 103

    conector_logico                shift and go to state 101

state 64

    (30) condicion -> vacio .

    RPAREN          reduce using rule 30 (condicion -> vacio .)


state 65

    (36) argumentologico -> VAR . simboloLogico VAR
    (38) argumentologico -> VAR . simboloLogico numero
    (39) argumentologico -> VAR . IGUAL BOOLEANO
    (40) argumentologico -> VAR . IGUAL CADENA
    (41) argumentologico -> VAR . DIFERENTE BOOLEANO
    (42) argumentologico -> VAR . DIFERENTE CADENA
    (50) simboloLogico -> . IGUAL
    (51) simboloLogico -> . DIFERENTE
    (52) simboloLogico -> . MENOR
    (53) simboloLogico -> . MAYOR
    (54) simboloLogico -> . MENOR_IGUAL
    (55) simboloLogico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 52
    DIFERENTE       shift and go to state 53
    MENOR           shift and go to state 54
    MAYOR           shift and go to state 55
    MENOR_IGUAL     shift and go to state 56
    MAYOR_IGUAL     shift and go to state 57

    simboloLogico                  shift and go to state 51

state 66

    (44) argumentologico -> BOOLEANO . IGUAL VAR
    (49) argumentologico -> BOOLEANO .

    IGUAL           shift and go to state 48
    AND             reduce using rule 49 (argumentologico -> BOOLEANO .)
    OR              reduce using rule 49 (argumentologico -> BOOLEANO .)
    RPAREN          reduce using rule 49 (argumentologico -> BOOLEANO .)


state 67

    (45) argumentologico -> CADENA . IGUAL VAR
    (46) argumentologico -> CADENA . IGUAL CADENA
    (47) argumentologico -> CADENA . DIFERENTE VAR
    (48) argumentologico -> CADENA . DIFERENTE CADENA

    IGUAL           shift and go to state 49
    DIFERENTE       shift and go to state 50


state 68

    (31) vacio -> EOL .

    RPAREN          reduce using rule 31 (vacio -> EOL .)


state 69

    (62) numero -> ENTERO .

    IGUAL           reduce using rule 62 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 62 (numero -> ENTERO .)
    MENOR           reduce using rule 62 (numero -> ENTERO .)
    MAYOR           reduce using rule 62 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 62 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 62 (numero -> ENTERO .)
    COMA            reduce using rule 62 (numero -> ENTERO .)
    EOL             reduce using rule 62 (numero -> ENTERO .)
    AND             reduce using rule 62 (numero -> ENTERO .)
    OR              reduce using rule 62 (numero -> ENTERO .)
    RPAREN          reduce using rule 62 (numero -> ENTERO .)


state 70

    (63) numero -> FLOTANTE .

    IGUAL           reduce using rule 63 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 63 (numero -> FLOTANTE .)
    MENOR           reduce using rule 63 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 63 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 63 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 63 (numero -> FLOTANTE .)
    COMA            reduce using rule 63 (numero -> FLOTANTE .)
    EOL             reduce using rule 63 (numero -> FLOTANTE .)
    AND             reduce using rule 63 (numero -> FLOTANTE .)
    OR              reduce using rule 63 (numero -> FLOTANTE .)
    RPAREN          reduce using rule 63 (numero -> FLOTANTE .)


state 71

    (27) if -> IF LPAREN condicion . RPAREN LBRACE RBRACE

    RPAREN          shift and go to state 104


state 72

    (8) asignacion -> VAR ASIGNACION valor EOL .

    $end            reduce using rule 8 (asignacion -> VAR ASIGNACION valor EOL .)


state 73

    (64) declaracion_numeros -> VAR ASIGNACION numero EOL .

    $end            reduce using rule 64 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    RETURN          reduce using rule 64 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    VAR             reduce using rule 64 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    WHILE           reduce using rule 64 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    IF              reduce using rule 64 (declaracion_numeros -> VAR ASIGNACION numero EOL .)


state 74

    (65) array -> VAR ASIGNACION ARRAY LPAREN . elementos RPAREN EOL
    (66) elementos -> . lista
    (67) elementos -> . diccionario
    (72) lista -> . palabras
    (73) lista -> . numeros
    (74) lista -> . variables
    (68) diccionario -> . CADENA ASIGNACION MAYOR valor_dic
    (69) diccionario -> . CADENA ASIGNACION MAYOR valor COMA diccionario
    (75) palabras -> . CADENA COMA palabras
    (76) palabras -> . CADENA
    (77) numeros -> . numero COMA numeros
    (78) numeros -> . numero
    (79) variables -> . VAR COMA variables
    (80) variables -> . VAR
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE

    CADENA          shift and go to state 112
    VAR             shift and go to state 105
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 70

    elementos                      shift and go to state 106
    lista                          shift and go to state 107
    diccionario                    shift and go to state 108
    palabras                       shift and go to state 109
    numeros                        shift and go to state 110
    variables                      shift and go to state 111
    numero                         shift and go to state 113

state 75

    (11) valores -> valor COMA valores .

    EOL             reduce using rule 11 (valores -> valor COMA valores .)


state 76

    (20) operacion -> ENTERO .
    (22) operacion -> ENTERO . operador operacion
    (57) operador -> . SUMA
    (58) operador -> . RESTA
    (59) operador -> . MULT
    (60) operador -> . DIV
    (61) operador -> . POT

    COMA            reduce using rule 20 (operacion -> ENTERO .)
    EOL             reduce using rule 20 (operacion -> ENTERO .)
    SUMA            shift and go to state 42
    RESTA           shift and go to state 43
    MULT            shift and go to state 44
    DIV             shift and go to state 45
    POT             shift and go to state 46

    operador                       shift and go to state 41

state 77

    (22) operacion -> ENTERO operador operacion .

    COMA            reduce using rule 22 (operacion -> ENTERO operador operacion .)
    EOL             reduce using rule 22 (operacion -> ENTERO operador operacion .)


state 78

    (21) operacion -> FLOTANTE .
    (23) operacion -> FLOTANTE . operador operacion
    (57) operador -> . SUMA
    (58) operador -> . RESTA
    (59) operador -> . MULT
    (60) operador -> . DIV
    (61) operador -> . POT

    COMA            reduce using rule 21 (operacion -> FLOTANTE .)
    EOL             reduce using rule 21 (operacion -> FLOTANTE .)
    SUMA            shift and go to state 42
    RESTA           shift and go to state 43
    MULT            shift and go to state 44
    DIV             shift and go to state 45
    POT             shift and go to state 46

    operador                       shift and go to state 47

state 79

    (23) operacion -> FLOTANTE operador operacion .

    COMA            reduce using rule 23 (operacion -> FLOTANTE operador operacion .)
    EOL             reduce using rule 23 (operacion -> FLOTANTE operador operacion .)


state 80

    (44) argumentologico -> BOOLEANO IGUAL VAR .

    COMA            reduce using rule 44 (argumentologico -> BOOLEANO IGUAL VAR .)
    EOL             reduce using rule 44 (argumentologico -> BOOLEANO IGUAL VAR .)
    AND             reduce using rule 44 (argumentologico -> BOOLEANO IGUAL VAR .)
    OR              reduce using rule 44 (argumentologico -> BOOLEANO IGUAL VAR .)
    RPAREN          reduce using rule 44 (argumentologico -> BOOLEANO IGUAL VAR .)


state 81

    (46) argumentologico -> CADENA IGUAL CADENA .

    COMA            reduce using rule 46 (argumentologico -> CADENA IGUAL CADENA .)
    EOL             reduce using rule 46 (argumentologico -> CADENA IGUAL CADENA .)
    AND             reduce using rule 46 (argumentologico -> CADENA IGUAL CADENA .)
    OR              reduce using rule 46 (argumentologico -> CADENA IGUAL CADENA .)
    RPAREN          reduce using rule 46 (argumentologico -> CADENA IGUAL CADENA .)


state 82

    (45) argumentologico -> CADENA IGUAL VAR .

    COMA            reduce using rule 45 (argumentologico -> CADENA IGUAL VAR .)
    EOL             reduce using rule 45 (argumentologico -> CADENA IGUAL VAR .)
    AND             reduce using rule 45 (argumentologico -> CADENA IGUAL VAR .)
    OR              reduce using rule 45 (argumentologico -> CADENA IGUAL VAR .)
    RPAREN          reduce using rule 45 (argumentologico -> CADENA IGUAL VAR .)


state 83

    (48) argumentologico -> CADENA DIFERENTE CADENA .

    COMA            reduce using rule 48 (argumentologico -> CADENA DIFERENTE CADENA .)
    EOL             reduce using rule 48 (argumentologico -> CADENA DIFERENTE CADENA .)
    AND             reduce using rule 48 (argumentologico -> CADENA DIFERENTE CADENA .)
    OR              reduce using rule 48 (argumentologico -> CADENA DIFERENTE CADENA .)
    RPAREN          reduce using rule 48 (argumentologico -> CADENA DIFERENTE CADENA .)


state 84

    (47) argumentologico -> CADENA DIFERENTE VAR .

    COMA            reduce using rule 47 (argumentologico -> CADENA DIFERENTE VAR .)
    EOL             reduce using rule 47 (argumentologico -> CADENA DIFERENTE VAR .)
    AND             reduce using rule 47 (argumentologico -> CADENA DIFERENTE VAR .)
    OR              reduce using rule 47 (argumentologico -> CADENA DIFERENTE VAR .)
    RPAREN          reduce using rule 47 (argumentologico -> CADENA DIFERENTE VAR .)


state 85

    (36) argumentologico -> VAR simboloLogico VAR .

    COMA            reduce using rule 36 (argumentologico -> VAR simboloLogico VAR .)
    EOL             reduce using rule 36 (argumentologico -> VAR simboloLogico VAR .)
    AND             reduce using rule 36 (argumentologico -> VAR simboloLogico VAR .)
    OR              reduce using rule 36 (argumentologico -> VAR simboloLogico VAR .)
    RPAREN          reduce using rule 36 (argumentologico -> VAR simboloLogico VAR .)


state 86

    (38) argumentologico -> VAR simboloLogico numero .

    COMA            reduce using rule 38 (argumentologico -> VAR simboloLogico numero .)
    EOL             reduce using rule 38 (argumentologico -> VAR simboloLogico numero .)
    AND             reduce using rule 38 (argumentologico -> VAR simboloLogico numero .)
    OR              reduce using rule 38 (argumentologico -> VAR simboloLogico numero .)
    RPAREN          reduce using rule 38 (argumentologico -> VAR simboloLogico numero .)


state 87

    (39) argumentologico -> VAR IGUAL BOOLEANO .

    COMA            reduce using rule 39 (argumentologico -> VAR IGUAL BOOLEANO .)
    EOL             reduce using rule 39 (argumentologico -> VAR IGUAL BOOLEANO .)
    AND             reduce using rule 39 (argumentologico -> VAR IGUAL BOOLEANO .)
    OR              reduce using rule 39 (argumentologico -> VAR IGUAL BOOLEANO .)
    RPAREN          reduce using rule 39 (argumentologico -> VAR IGUAL BOOLEANO .)


state 88

    (40) argumentologico -> VAR IGUAL CADENA .

    COMA            reduce using rule 40 (argumentologico -> VAR IGUAL CADENA .)
    EOL             reduce using rule 40 (argumentologico -> VAR IGUAL CADENA .)
    AND             reduce using rule 40 (argumentologico -> VAR IGUAL CADENA .)
    OR              reduce using rule 40 (argumentologico -> VAR IGUAL CADENA .)
    RPAREN          reduce using rule 40 (argumentologico -> VAR IGUAL CADENA .)


state 89

    (41) argumentologico -> VAR DIFERENTE BOOLEANO .

    COMA            reduce using rule 41 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    EOL             reduce using rule 41 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    AND             reduce using rule 41 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    OR              reduce using rule 41 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    RPAREN          reduce using rule 41 (argumentologico -> VAR DIFERENTE BOOLEANO .)


state 90

    (42) argumentologico -> VAR DIFERENTE CADENA .

    COMA            reduce using rule 42 (argumentologico -> VAR DIFERENTE CADENA .)
    EOL             reduce using rule 42 (argumentologico -> VAR DIFERENTE CADENA .)
    AND             reduce using rule 42 (argumentologico -> VAR DIFERENTE CADENA .)
    OR              reduce using rule 42 (argumentologico -> VAR DIFERENTE CADENA .)
    RPAREN          reduce using rule 42 (argumentologico -> VAR DIFERENTE CADENA .)


state 91

    (37) argumentologico -> numero simboloLogico numero .

    COMA            reduce using rule 37 (argumentologico -> numero simboloLogico numero .)
    EOL             reduce using rule 37 (argumentologico -> numero simboloLogico numero .)
    AND             reduce using rule 37 (argumentologico -> numero simboloLogico numero .)
    OR              reduce using rule 37 (argumentologico -> numero simboloLogico numero .)
    RPAREN          reduce using rule 37 (argumentologico -> numero simboloLogico numero .)


state 92

    (43) argumentologico -> numero simboloLogico VAR .

    COMA            reduce using rule 43 (argumentologico -> numero simboloLogico VAR .)
    EOL             reduce using rule 43 (argumentologico -> numero simboloLogico VAR .)
    AND             reduce using rule 43 (argumentologico -> numero simboloLogico VAR .)
    OR              reduce using rule 43 (argumentologico -> numero simboloLogico VAR .)
    RPAREN          reduce using rule 43 (argumentologico -> numero simboloLogico VAR .)


state 93

    (81) funcion -> FUNCTION tipo_funcion LBRACE final_funcion . RBRACE

    RBRACE          shift and go to state 114


state 94

    (84) final_funcion -> RETURN . VAR EOL

    VAR             shift and go to state 115


state 95

    (64) declaracion_numeros -> VAR . ASIGNACION numero EOL
    (65) array -> VAR . ASIGNACION ARRAY LPAREN elementos RPAREN EOL

    ASIGNACION      shift and go to state 116


state 96

    (85) final_funcion -> cuerpo_funcion .

    RBRACE          reduce using rule 85 (final_funcion -> cuerpo_funcion .)


state 97

    (86) cuerpo_funcion -> declaracion_numeros . final_funcion
    (84) final_funcion -> . RETURN VAR EOL
    (85) final_funcion -> . cuerpo_funcion
    (86) cuerpo_funcion -> . declaracion_numeros final_funcion
    (87) cuerpo_funcion -> . array final_funcion
    (88) cuerpo_funcion -> . estructuracontrol final_funcion
    (64) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (65) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (24) estructuracontrol -> . while
    (25) estructuracontrol -> . if
    (26) while -> . WHILE LPAREN condicion RPAREN LBRACE RBRACE
    (27) if -> . IF LPAREN condicion RPAREN LBRACE RBRACE

    RETURN          shift and go to state 94
    VAR             shift and go to state 95
    WHILE           shift and go to state 15
    IF              shift and go to state 16

    declaracion_numeros            shift and go to state 97
    final_funcion                  shift and go to state 117
    cuerpo_funcion                 shift and go to state 96
    array                          shift and go to state 98
    estructuracontrol              shift and go to state 99
    while                          shift and go to state 11
    if                             shift and go to state 12

state 98

    (87) cuerpo_funcion -> array . final_funcion
    (84) final_funcion -> . RETURN VAR EOL
    (85) final_funcion -> . cuerpo_funcion
    (86) cuerpo_funcion -> . declaracion_numeros final_funcion
    (87) cuerpo_funcion -> . array final_funcion
    (88) cuerpo_funcion -> . estructuracontrol final_funcion
    (64) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (65) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (24) estructuracontrol -> . while
    (25) estructuracontrol -> . if
    (26) while -> . WHILE LPAREN condicion RPAREN LBRACE RBRACE
    (27) if -> . IF LPAREN condicion RPAREN LBRACE RBRACE

    RETURN          shift and go to state 94
    VAR             shift and go to state 95
    WHILE           shift and go to state 15
    IF              shift and go to state 16

    array                          shift and go to state 98
    final_funcion                  shift and go to state 118
    cuerpo_funcion                 shift and go to state 96
    declaracion_numeros            shift and go to state 97
    estructuracontrol              shift and go to state 99
    while                          shift and go to state 11
    if                             shift and go to state 12

state 99

    (88) cuerpo_funcion -> estructuracontrol . final_funcion
    (84) final_funcion -> . RETURN VAR EOL
    (85) final_funcion -> . cuerpo_funcion
    (86) cuerpo_funcion -> . declaracion_numeros final_funcion
    (87) cuerpo_funcion -> . array final_funcion
    (88) cuerpo_funcion -> . estructuracontrol final_funcion
    (64) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (65) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (24) estructuracontrol -> . while
    (25) estructuracontrol -> . if
    (26) while -> . WHILE LPAREN condicion RPAREN LBRACE RBRACE
    (27) if -> . IF LPAREN condicion RPAREN LBRACE RBRACE

    RETURN          shift and go to state 94
    VAR             shift and go to state 95
    WHILE           shift and go to state 15
    IF              shift and go to state 16

    estructuracontrol              shift and go to state 99
    final_funcion                  shift and go to state 119
    cuerpo_funcion                 shift and go to state 96
    declaracion_numeros            shift and go to state 97
    array                          shift and go to state 98
    while                          shift and go to state 11
    if                             shift and go to state 12

state 100

    (26) while -> WHILE LPAREN condicion RPAREN . LBRACE RBRACE

    LBRACE          shift and go to state 120


state 101

    (29) condicion -> argumentologico conector_logico . condicion
    (28) condicion -> . argumentologico
    (29) condicion -> . argumentologico conector_logico condicion
    (30) condicion -> . vacio
    (36) argumentologico -> . VAR simboloLogico VAR
    (37) argumentologico -> . numero simboloLogico numero
    (38) argumentologico -> . VAR simboloLogico numero
    (39) argumentologico -> . VAR IGUAL BOOLEANO
    (40) argumentologico -> . VAR IGUAL CADENA
    (41) argumentologico -> . VAR DIFERENTE BOOLEANO
    (42) argumentologico -> . VAR DIFERENTE CADENA
    (43) argumentologico -> . numero simboloLogico VAR
    (44) argumentologico -> . BOOLEANO IGUAL VAR
    (45) argumentologico -> . CADENA IGUAL VAR
    (46) argumentologico -> . CADENA IGUAL CADENA
    (47) argumentologico -> . CADENA DIFERENTE VAR
    (48) argumentologico -> . CADENA DIFERENTE CADENA
    (49) argumentologico -> . BOOLEANO
    (31) vacio -> . EOL
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE

    VAR             shift and go to state 65
    BOOLEANO        shift and go to state 66
    CADENA          shift and go to state 67
    EOL             shift and go to state 68
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 70

    argumentologico                shift and go to state 63
    condicion                      shift and go to state 121
    vacio                          shift and go to state 64
    numero                         shift and go to state 28

state 102

    (32) conector_logico -> AND .

    VAR             reduce using rule 32 (conector_logico -> AND .)
    BOOLEANO        reduce using rule 32 (conector_logico -> AND .)
    CADENA          reduce using rule 32 (conector_logico -> AND .)
    EOL             reduce using rule 32 (conector_logico -> AND .)
    ENTERO          reduce using rule 32 (conector_logico -> AND .)
    FLOTANTE        reduce using rule 32 (conector_logico -> AND .)


state 103

    (33) conector_logico -> OR .

    VAR             reduce using rule 33 (conector_logico -> OR .)
    BOOLEANO        reduce using rule 33 (conector_logico -> OR .)
    CADENA          reduce using rule 33 (conector_logico -> OR .)
    EOL             reduce using rule 33 (conector_logico -> OR .)
    ENTERO          reduce using rule 33 (conector_logico -> OR .)
    FLOTANTE        reduce using rule 33 (conector_logico -> OR .)


state 104

    (27) if -> IF LPAREN condicion RPAREN . LBRACE RBRACE

    LBRACE          shift and go to state 122


state 105

    (79) variables -> VAR . COMA variables
    (80) variables -> VAR .

    COMA            shift and go to state 123
    RPAREN          reduce using rule 80 (variables -> VAR .)


state 106

    (65) array -> VAR ASIGNACION ARRAY LPAREN elementos . RPAREN EOL

    RPAREN          shift and go to state 124


state 107

    (66) elementos -> lista .

    RPAREN          reduce using rule 66 (elementos -> lista .)


state 108

    (67) elementos -> diccionario .

    RPAREN          reduce using rule 67 (elementos -> diccionario .)


state 109

    (72) lista -> palabras .

    RPAREN          reduce using rule 72 (lista -> palabras .)


state 110

    (73) lista -> numeros .

    RPAREN          reduce using rule 73 (lista -> numeros .)


state 111

    (74) lista -> variables .

    RPAREN          reduce using rule 74 (lista -> variables .)


state 112

    (68) diccionario -> CADENA . ASIGNACION MAYOR valor_dic
    (69) diccionario -> CADENA . ASIGNACION MAYOR valor COMA diccionario
    (75) palabras -> CADENA . COMA palabras
    (76) palabras -> CADENA .

    ASIGNACION      shift and go to state 125
    COMA            shift and go to state 126
    RPAREN          reduce using rule 76 (palabras -> CADENA .)


state 113

    (77) numeros -> numero . COMA numeros
    (78) numeros -> numero .

    COMA            shift and go to state 127
    RPAREN          reduce using rule 78 (numeros -> numero .)


state 114

    (81) funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE .

    $end            reduce using rule 81 (funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE .)


state 115

    (84) final_funcion -> RETURN VAR . EOL

    EOL             shift and go to state 128


state 116

    (64) declaracion_numeros -> VAR ASIGNACION . numero EOL
    (65) array -> VAR ASIGNACION . ARRAY LPAREN elementos RPAREN EOL
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE

    ARRAY           shift and go to state 36
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 70

    numero                         shift and go to state 129

state 117

    (86) cuerpo_funcion -> declaracion_numeros final_funcion .

    RBRACE          reduce using rule 86 (cuerpo_funcion -> declaracion_numeros final_funcion .)


state 118

    (87) cuerpo_funcion -> array final_funcion .

    RBRACE          reduce using rule 87 (cuerpo_funcion -> array final_funcion .)


state 119

    (88) cuerpo_funcion -> estructuracontrol final_funcion .

    RBRACE          reduce using rule 88 (cuerpo_funcion -> estructuracontrol final_funcion .)


state 120

    (26) while -> WHILE LPAREN condicion RPAREN LBRACE . RBRACE

    RBRACE          shift and go to state 130


state 121

    (29) condicion -> argumentologico conector_logico condicion .

    RPAREN          reduce using rule 29 (condicion -> argumentologico conector_logico condicion .)


state 122

    (27) if -> IF LPAREN condicion RPAREN LBRACE . RBRACE

    RBRACE          shift and go to state 131


state 123

    (79) variables -> VAR COMA . variables
    (79) variables -> . VAR COMA variables
    (80) variables -> . VAR

    VAR             shift and go to state 105

    variables                      shift and go to state 132

state 124

    (65) array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN . EOL

    EOL             shift and go to state 133


state 125

    (68) diccionario -> CADENA ASIGNACION . MAYOR valor_dic
    (69) diccionario -> CADENA ASIGNACION . MAYOR valor COMA diccionario

    MAYOR           shift and go to state 134


state 126

    (75) palabras -> CADENA COMA . palabras
    (75) palabras -> . CADENA COMA palabras
    (76) palabras -> . CADENA

    CADENA          shift and go to state 135

    palabras                       shift and go to state 136

state 127

    (77) numeros -> numero COMA . numeros
    (77) numeros -> . numero COMA numeros
    (78) numeros -> . numero
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE

    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 70

    numero                         shift and go to state 113
    numeros                        shift and go to state 137

state 128

    (84) final_funcion -> RETURN VAR EOL .

    RBRACE          reduce using rule 84 (final_funcion -> RETURN VAR EOL .)


state 129

    (64) declaracion_numeros -> VAR ASIGNACION numero . EOL

    EOL             shift and go to state 73


state 130

    (26) while -> WHILE LPAREN condicion RPAREN LBRACE RBRACE .

    $end            reduce using rule 26 (while -> WHILE LPAREN condicion RPAREN LBRACE RBRACE .)
    RETURN          reduce using rule 26 (while -> WHILE LPAREN condicion RPAREN LBRACE RBRACE .)
    VAR             reduce using rule 26 (while -> WHILE LPAREN condicion RPAREN LBRACE RBRACE .)
    WHILE           reduce using rule 26 (while -> WHILE LPAREN condicion RPAREN LBRACE RBRACE .)
    IF              reduce using rule 26 (while -> WHILE LPAREN condicion RPAREN LBRACE RBRACE .)


state 131

    (27) if -> IF LPAREN condicion RPAREN LBRACE RBRACE .

    $end            reduce using rule 27 (if -> IF LPAREN condicion RPAREN LBRACE RBRACE .)
    RETURN          reduce using rule 27 (if -> IF LPAREN condicion RPAREN LBRACE RBRACE .)
    VAR             reduce using rule 27 (if -> IF LPAREN condicion RPAREN LBRACE RBRACE .)
    WHILE           reduce using rule 27 (if -> IF LPAREN condicion RPAREN LBRACE RBRACE .)
    IF              reduce using rule 27 (if -> IF LPAREN condicion RPAREN LBRACE RBRACE .)


state 132

    (79) variables -> VAR COMA variables .

    RPAREN          reduce using rule 79 (variables -> VAR COMA variables .)


state 133

    (65) array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .

    $end            reduce using rule 65 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    RETURN          reduce using rule 65 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    VAR             reduce using rule 65 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    WHILE           reduce using rule 65 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    IF              reduce using rule 65 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)


state 134

    (68) diccionario -> CADENA ASIGNACION MAYOR . valor_dic
    (69) diccionario -> CADENA ASIGNACION MAYOR . valor COMA diccionario
    (70) valor_dic -> . numero
    (71) valor_dic -> . CADENA
    (12) valor -> . ENTERO
    (13) valor -> . FLOTANTE
    (14) valor -> . BOOLEANO
    (15) valor -> . CADENA
    (16) valor -> . VAR
    (17) valor -> . VARIABLE_ARRAY
    (18) valor -> . operacion
    (19) valor -> . argumentologico
    (62) numero -> . ENTERO
    (63) numero -> . FLOTANTE
    (20) operacion -> . ENTERO
    (21) operacion -> . FLOTANTE
    (22) operacion -> . ENTERO operador operacion
    (23) operacion -> . FLOTANTE operador operacion
    (36) argumentologico -> . VAR simboloLogico VAR
    (37) argumentologico -> . numero simboloLogico numero
    (38) argumentologico -> . VAR simboloLogico numero
    (39) argumentologico -> . VAR IGUAL BOOLEANO
    (40) argumentologico -> . VAR IGUAL CADENA
    (41) argumentologico -> . VAR DIFERENTE BOOLEANO
    (42) argumentologico -> . VAR DIFERENTE CADENA
    (43) argumentologico -> . numero simboloLogico VAR
    (44) argumentologico -> . BOOLEANO IGUAL VAR
    (45) argumentologico -> . CADENA IGUAL VAR
    (46) argumentologico -> . CADENA IGUAL CADENA
    (47) argumentologico -> . CADENA DIFERENTE VAR
    (48) argumentologico -> . CADENA DIFERENTE CADENA
    (49) argumentologico -> . BOOLEANO

    CADENA          shift and go to state 138
    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    BOOLEANO        shift and go to state 22
    VAR             shift and go to state 24
    VARIABLE_ARRAY  shift and go to state 25

    valor_dic                      shift and go to state 139
    valor                          shift and go to state 140
    numero                         shift and go to state 141
    operacion                      shift and go to state 26
    argumentologico                shift and go to state 27

state 135

    (75) palabras -> CADENA . COMA palabras
    (76) palabras -> CADENA .

    COMA            shift and go to state 126
    RPAREN          reduce using rule 76 (palabras -> CADENA .)


state 136

    (75) palabras -> CADENA COMA palabras .

    RPAREN          reduce using rule 75 (palabras -> CADENA COMA palabras .)


state 137

    (77) numeros -> numero COMA numeros .

    RPAREN          reduce using rule 77 (numeros -> numero COMA numeros .)


state 138

    (71) valor_dic -> CADENA .
    (15) valor -> CADENA .
    (45) argumentologico -> CADENA . IGUAL VAR
    (46) argumentologico -> CADENA . IGUAL CADENA
    (47) argumentologico -> CADENA . DIFERENTE VAR
    (48) argumentologico -> CADENA . DIFERENTE CADENA

    RPAREN          reduce using rule 71 (valor_dic -> CADENA .)
    COMA            reduce using rule 15 (valor -> CADENA .)
    IGUAL           shift and go to state 49
    DIFERENTE       shift and go to state 50


state 139

    (68) diccionario -> CADENA ASIGNACION MAYOR valor_dic .

    RPAREN          reduce using rule 68 (diccionario -> CADENA ASIGNACION MAYOR valor_dic .)


state 140

    (69) diccionario -> CADENA ASIGNACION MAYOR valor . COMA diccionario

    COMA            shift and go to state 142


state 141

    (70) valor_dic -> numero .
    (37) argumentologico -> numero . simboloLogico numero
    (43) argumentologico -> numero . simboloLogico VAR
    (50) simboloLogico -> . IGUAL
    (51) simboloLogico -> . DIFERENTE
    (52) simboloLogico -> . MENOR
    (53) simboloLogico -> . MAYOR
    (54) simboloLogico -> . MENOR_IGUAL
    (55) simboloLogico -> . MAYOR_IGUAL

    RPAREN          reduce using rule 70 (valor_dic -> numero .)
    IGUAL           shift and go to state 59
    DIFERENTE       shift and go to state 60
    MENOR           shift and go to state 54
    MAYOR           shift and go to state 55
    MENOR_IGUAL     shift and go to state 56
    MAYOR_IGUAL     shift and go to state 57

    simboloLogico                  shift and go to state 58

state 142

    (69) diccionario -> CADENA ASIGNACION MAYOR valor COMA . diccionario
    (68) diccionario -> . CADENA ASIGNACION MAYOR valor_dic
    (69) diccionario -> . CADENA ASIGNACION MAYOR valor COMA diccionario

    CADENA          shift and go to state 143

    diccionario                    shift and go to state 144

state 143

    (68) diccionario -> CADENA . ASIGNACION MAYOR valor_dic
    (69) diccionario -> CADENA . ASIGNACION MAYOR valor COMA diccionario

    ASIGNACION      shift and go to state 125


state 144

    (69) diccionario -> CADENA ASIGNACION MAYOR valor COMA diccionario .

    RPAREN          reduce using rule 69 (diccionario -> CADENA ASIGNACION MAYOR valor COMA diccionario .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 20 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (operacion -> ENTERO) in state 20
WARNING: reduce/reduce conflict in state 21 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (operacion -> FLOTANTE) in state 21
WARNING: reduce/reduce conflict in state 22 resolved using rule (valor -> BOOLEANO)
WARNING: rejected rule (argumentologico -> BOOLEANO) in state 22
WARNING: reduce/reduce conflict in state 37 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (numero -> ENTERO) in state 37
WARNING: reduce/reduce conflict in state 37 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (operacion -> ENTERO) in state 37
WARNING: reduce/reduce conflict in state 38 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (numero -> FLOTANTE) in state 38
WARNING: reduce/reduce conflict in state 38 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (operacion -> FLOTANTE) in state 38
