Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    ASIGNAR
    BREAK
    CASE
    COMA
    COMILLA_DOBLE
    COMILLA_DOBLE_CADENA
    COMILLA_SIMPLE
    COMILLA_SIMPLE_CADENA
    COMNT
    CONTINUE
    DICT
    DIFERENTE
    DIV
    DIV_ASIGNAR
    DO
    DOSPUNTOS
    ELSE
    ELSEIF
    ENDWHILE
    FOR
    FOREACH
    FUNCION
    FUNCTION
    GLOBAL
    ID
    IF
    IGUAL
    LBRACE
    LBRACKET
    LPAREN
    MAYOR
    MAYOR_IGUAL
    MAYOR_MENOR
    MENOR
    MENOR_IGUAL
    MENOR_MAYOR
    MODULO
    MULT
    MULT_ASIGNAR
    OBJETO
    POT
    POT_ASIGNAR
    PUNTO
    RBRACE
    RBRACKET
    RESTA
    RESTA_ASIGNAR
    RETURN
    RPAREN
    SET
    SUMA
    SUMA_ASIGNAR
    SWITCH
    TUPLE
    VARIABLE_FUNCION
    VARIABLE_OBJETO
    WHILE

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> asignacion
Rule 2     asignacion -> VAR ASIGNACION valor EOL
Rule 3     echo -> ECHO valor EOL
Rule 4     valor -> ENTERO
Rule 5     valor -> FLOTANTE
Rule 6     valor -> BOOLEANO
Rule 7     valor -> CADENA
Rule 8     valor -> VAR
Rule 9     valor -> VARIABLE_ARRAY

Terminals, with rules where they appear

ARRAY                : 
ASIGNACION           : 2
ASIGNAR              : 
BOOLEANO             : 6
BREAK                : 
CADENA               : 7
CASE                 : 
COMA                 : 
COMILLA_DOBLE        : 
COMILLA_DOBLE_CADENA : 
COMILLA_SIMPLE       : 
COMILLA_SIMPLE_CADENA : 
COMNT                : 
CONTINUE             : 
DICT                 : 
DIFERENTE            : 
DIV                  : 
DIV_ASIGNAR          : 
DO                   : 
DOSPUNTOS            : 
ECHO                 : 3
ELSE                 : 
ELSEIF               : 
ENDWHILE             : 
ENTERO               : 4
EOL                  : 2 3
FLOTANTE             : 5
FOR                  : 
FOREACH              : 
FUNCION              : 
FUNCTION             : 
GLOBAL               : 
ID                   : 
IF                   : 
IGUAL                : 
LBRACE               : 
LBRACKET             : 
LPAREN               : 
MAYOR                : 
MAYOR_IGUAL          : 
MAYOR_MENOR          : 
MENOR                : 
MENOR_IGUAL          : 
MENOR_MAYOR          : 
MODULO               : 
MULT                 : 
MULT_ASIGNAR         : 
OBJETO               : 
POT                  : 
POT_ASIGNAR          : 
PUNTO                : 
RBRACE               : 
RBRACKET             : 
RESTA                : 
RESTA_ASIGNAR        : 
RETURN               : 
RPAREN               : 
SET                  : 
SUMA                 : 
SUMA_ASIGNAR         : 
SWITCH               : 
TUPLE                : 
VAR                  : 2 8
VARIABLE_ARRAY       : 9
VARIABLE_FUNCION     : 
VARIABLE_OBJETO      : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
echo                 : 
sentencia            : 0
valor                : 2 3

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . asignacion
    (2) asignacion -> . VAR ASIGNACION valor EOL

    VAR             shift and go to state 3

    sentencia                      shift and go to state 1
    asignacion                     shift and go to state 2

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> asignacion .

    $end            reduce using rule 1 (sentencia -> asignacion .)


state 3

    (2) asignacion -> VAR . ASIGNACION valor EOL

    ASIGNACION      shift and go to state 4


state 4

    (2) asignacion -> VAR ASIGNACION . valor EOL
    (4) valor -> . ENTERO
    (5) valor -> . FLOTANTE
    (6) valor -> . BOOLEANO
    (7) valor -> . CADENA
    (8) valor -> . VAR
    (9) valor -> . VARIABLE_ARRAY

    ENTERO          shift and go to state 7
    FLOTANTE        shift and go to state 8
    BOOLEANO        shift and go to state 9
    CADENA          shift and go to state 10
    VAR             shift and go to state 5
    VARIABLE_ARRAY  shift and go to state 11

    valor                          shift and go to state 6

state 5

    (8) valor -> VAR .

    EOL             reduce using rule 8 (valor -> VAR .)


state 6

    (2) asignacion -> VAR ASIGNACION valor . EOL

    EOL             shift and go to state 12


state 7

    (4) valor -> ENTERO .

    EOL             reduce using rule 4 (valor -> ENTERO .)


state 8

    (5) valor -> FLOTANTE .

    EOL             reduce using rule 5 (valor -> FLOTANTE .)


state 9

    (6) valor -> BOOLEANO .

    EOL             reduce using rule 6 (valor -> BOOLEANO .)


state 10

    (7) valor -> CADENA .

    EOL             reduce using rule 7 (valor -> CADENA .)


state 11

    (9) valor -> VARIABLE_ARRAY .

    EOL             reduce using rule 9 (valor -> VARIABLE_ARRAY .)


state 12

    (2) asignacion -> VAR ASIGNACION valor EOL .

    $end            reduce using rule 2 (asignacion -> VAR ASIGNACION valor EOL .)

