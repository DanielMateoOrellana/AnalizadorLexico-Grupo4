Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    ASIGNAR
    BREAK
    CASE
    COMA
    COMILLA_DOBLE
    COMILLA_DOBLE_CADENA
    COMILLA_SIMPLE
    COMILLA_SIMPLE_CADENA
    CONTINUE
    DICT
    DIV_ASIGNAR
    DO
    DOSPUNTOS
    ELSE
    ELSEIF
    ENDWHILE
    FOR
    FOREACH
    FUNCION
    FUNCTION
    GLOBAL
    ID
    LBRACE
    LBRACKET
    MAYOR_MENOR
    MENOR_MAYOR
    MODULO
    MULT_ASIGNAR
    OBJETO
    POT_ASIGNAR
    PUNTO
    RBRACE
    RBRACKET
    RESTA_ASIGNAR
    RETURN
    SET
    SUMA_ASIGNAR
    SWITCH
    TUPLE
    VARIABLE_FUNCION
    VARIABLE_OBJETO

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> asignacion
Rule 2     sentencia -> echo
Rule 3     sentencia -> estructuracontrol
Rule 4     sentencia -> comentario
Rule 5     asignacion -> VAR ASIGNACION valor EOL
Rule 6     echo -> ECHO valor EOL
Rule 7     valor -> ENTERO
Rule 8     valor -> FLOTANTE
Rule 9     valor -> BOOLEANO
Rule 10    valor -> CADENA
Rule 11    valor -> VAR
Rule 12    valor -> VARIABLE_ARRAY
Rule 13    valor -> operacion
Rule 14    operacion -> ENTERO
Rule 15    operacion -> FLOTANTE
Rule 16    operacion -> ENTERO operador operacion
Rule 17    operacion -> FLOTANTE operador operacion
Rule 18    estructuracontrol -> while
Rule 19    estructuracontrol -> if
Rule 20    while -> WHILE LPAREN argumentologico RPAREN
Rule 21    if -> IF LPAREN argumentologico RPAREN
Rule 22    argumentologico -> VAR simboloLogico VAR
Rule 23    argumentologico -> BOOLEANO
Rule 24    argumentologico -> VAR simboloLogico ENTERO
Rule 25    argumentologico -> VAR simboloLogico FLOTANTE
Rule 26    argumentologico -> VAR IGUAL BOOLEANO
Rule 27    argumentologico -> VAR IGUAL CADENA
Rule 28    argumentologico -> ENTERO simboloLogico VAR
Rule 29    argumentologico -> FLOTANTE simboloLogico VAR
Rule 30    argumentologico -> BOOLEANO IGUAL VAR
Rule 31    argumentologico -> CADENA IGUAL VAR
Rule 32    simboloLogico -> IGUAL
Rule 33    simboloLogico -> DIFERENTE
Rule 34    simboloLogico -> MENOR
Rule 35    simboloLogico -> MAYOR
Rule 36    simboloLogico -> MENOR_IGUAL
Rule 37    simboloLogico -> MAYOR_IGUAL
Rule 38    comentario -> COMNT
Rule 39    operador -> SUMA
Rule 40    operador -> RESTA
Rule 41    operador -> MULT
Rule 42    operador -> DIV
Rule 43    operador -> POT

Terminals, with rules where they appear

ARRAY                : 
ASIGNACION           : 5
ASIGNAR              : 
BOOLEANO             : 9 23 26 30
BREAK                : 
CADENA               : 10 27 31
CASE                 : 
COMA                 : 
COMILLA_DOBLE        : 
COMILLA_DOBLE_CADENA : 
COMILLA_SIMPLE       : 
COMILLA_SIMPLE_CADENA : 
COMNT                : 38
CONTINUE             : 
DICT                 : 
DIFERENTE            : 33
DIV                  : 42
DIV_ASIGNAR          : 
DO                   : 
DOSPUNTOS            : 
ECHO                 : 6
ELSE                 : 
ELSEIF               : 
ENDWHILE             : 
ENTERO               : 7 14 16 24 28
EOL                  : 5 6
FLOTANTE             : 8 15 17 25 29
FOR                  : 
FOREACH              : 
FUNCION              : 
FUNCTION             : 
GLOBAL               : 
ID                   : 
IF                   : 21
IGUAL                : 26 27 30 31 32
LBRACE               : 
LBRACKET             : 
LPAREN               : 20 21
MAYOR                : 35
MAYOR_IGUAL          : 37
MAYOR_MENOR          : 
MENOR                : 34
MENOR_IGUAL          : 36
MENOR_MAYOR          : 
MODULO               : 
MULT                 : 41
MULT_ASIGNAR         : 
OBJETO               : 
POT                  : 43
POT_ASIGNAR          : 
PUNTO                : 
RBRACE               : 
RBRACKET             : 
RESTA                : 40
RESTA_ASIGNAR        : 
RETURN               : 
RPAREN               : 20 21
SET                  : 
SUMA                 : 39
SUMA_ASIGNAR         : 
SWITCH               : 
TUPLE                : 
VAR                  : 5 11 22 22 24 25 26 27 28 29 30 31
VARIABLE_ARRAY       : 12
VARIABLE_FUNCION     : 
VARIABLE_OBJETO      : 
WHILE                : 20
error                : 

Nonterminals, with rules where they appear

argumentologico      : 20 21
asignacion           : 1
comentario           : 4
echo                 : 2
estructuracontrol    : 3
if                   : 19
operacion            : 13 16 17
operador             : 16 17
sentencia            : 0
simboloLogico        : 22 24 25 28 29
valor                : 5 6
while                : 18

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . asignacion
    (2) sentencia -> . echo
    (3) sentencia -> . estructuracontrol
    (4) sentencia -> . comentario
    (5) asignacion -> . VAR ASIGNACION valor EOL
    (6) echo -> . ECHO valor EOL
    (18) estructuracontrol -> . while
    (19) estructuracontrol -> . if
    (38) comentario -> . COMNT
    (20) while -> . WHILE LPAREN argumentologico RPAREN
    (21) if -> . IF LPAREN argumentologico RPAREN

    VAR             shift and go to state 6
    ECHO            shift and go to state 7
    COMNT           shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12

    sentencia                      shift and go to state 1
    asignacion                     shift and go to state 2
    echo                           shift and go to state 3
    estructuracontrol              shift and go to state 4
    comentario                     shift and go to state 5
    while                          shift and go to state 8
    if                             shift and go to state 9

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> asignacion .

    $end            reduce using rule 1 (sentencia -> asignacion .)


state 3

    (2) sentencia -> echo .

    $end            reduce using rule 2 (sentencia -> echo .)


state 4

    (3) sentencia -> estructuracontrol .

    $end            reduce using rule 3 (sentencia -> estructuracontrol .)


state 5

    (4) sentencia -> comentario .

    $end            reduce using rule 4 (sentencia -> comentario .)


state 6

    (5) asignacion -> VAR . ASIGNACION valor EOL

    ASIGNACION      shift and go to state 13


state 7

    (6) echo -> ECHO . valor EOL
    (7) valor -> . ENTERO
    (8) valor -> . FLOTANTE
    (9) valor -> . BOOLEANO
    (10) valor -> . CADENA
    (11) valor -> . VAR
    (12) valor -> . VARIABLE_ARRAY
    (13) valor -> . operacion
    (14) operacion -> . ENTERO
    (15) operacion -> . FLOTANTE
    (16) operacion -> . ENTERO operador operacion
    (17) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 16
    BOOLEANO        shift and go to state 17
    CADENA          shift and go to state 18
    VAR             shift and go to state 19
    VARIABLE_ARRAY  shift and go to state 20

    valor                          shift and go to state 14
    operacion                      shift and go to state 21

state 8

    (18) estructuracontrol -> while .

    $end            reduce using rule 18 (estructuracontrol -> while .)


state 9

    (19) estructuracontrol -> if .

    $end            reduce using rule 19 (estructuracontrol -> if .)


state 10

    (38) comentario -> COMNT .

    $end            reduce using rule 38 (comentario -> COMNT .)


state 11

    (20) while -> WHILE . LPAREN argumentologico RPAREN

    LPAREN          shift and go to state 22


state 12

    (21) if -> IF . LPAREN argumentologico RPAREN

    LPAREN          shift and go to state 23


state 13

    (5) asignacion -> VAR ASIGNACION . valor EOL
    (7) valor -> . ENTERO
    (8) valor -> . FLOTANTE
    (9) valor -> . BOOLEANO
    (10) valor -> . CADENA
    (11) valor -> . VAR
    (12) valor -> . VARIABLE_ARRAY
    (13) valor -> . operacion
    (14) operacion -> . ENTERO
    (15) operacion -> . FLOTANTE
    (16) operacion -> . ENTERO operador operacion
    (17) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 16
    BOOLEANO        shift and go to state 17
    CADENA          shift and go to state 18
    VAR             shift and go to state 19
    VARIABLE_ARRAY  shift and go to state 20

    valor                          shift and go to state 24
    operacion                      shift and go to state 21

state 14

    (6) echo -> ECHO valor . EOL

    EOL             shift and go to state 25


state 15

    (7) valor -> ENTERO .
    (14) operacion -> ENTERO .
    (16) operacion -> ENTERO . operador operacion
    (39) operador -> . SUMA
    (40) operador -> . RESTA
    (41) operador -> . MULT
    (42) operador -> . DIV
    (43) operador -> . POT

  ! reduce/reduce conflict for EOL resolved using rule 7 (valor -> ENTERO .)
    EOL             reduce using rule 7 (valor -> ENTERO .)
    SUMA            shift and go to state 27
    RESTA           shift and go to state 28
    MULT            shift and go to state 29
    DIV             shift and go to state 30
    POT             shift and go to state 31

  ! EOL             [ reduce using rule 14 (operacion -> ENTERO .) ]

    operador                       shift and go to state 26

state 16

    (8) valor -> FLOTANTE .
    (15) operacion -> FLOTANTE .
    (17) operacion -> FLOTANTE . operador operacion
    (39) operador -> . SUMA
    (40) operador -> . RESTA
    (41) operador -> . MULT
    (42) operador -> . DIV
    (43) operador -> . POT

  ! reduce/reduce conflict for EOL resolved using rule 8 (valor -> FLOTANTE .)
    EOL             reduce using rule 8 (valor -> FLOTANTE .)
    SUMA            shift and go to state 27
    RESTA           shift and go to state 28
    MULT            shift and go to state 29
    DIV             shift and go to state 30
    POT             shift and go to state 31

  ! EOL             [ reduce using rule 15 (operacion -> FLOTANTE .) ]

    operador                       shift and go to state 32

state 17

    (9) valor -> BOOLEANO .

    EOL             reduce using rule 9 (valor -> BOOLEANO .)


state 18

    (10) valor -> CADENA .

    EOL             reduce using rule 10 (valor -> CADENA .)


state 19

    (11) valor -> VAR .

    EOL             reduce using rule 11 (valor -> VAR .)


state 20

    (12) valor -> VARIABLE_ARRAY .

    EOL             reduce using rule 12 (valor -> VARIABLE_ARRAY .)


state 21

    (13) valor -> operacion .

    EOL             reduce using rule 13 (valor -> operacion .)


state 22

    (20) while -> WHILE LPAREN . argumentologico RPAREN
    (22) argumentologico -> . VAR simboloLogico VAR
    (23) argumentologico -> . BOOLEANO
    (24) argumentologico -> . VAR simboloLogico ENTERO
    (25) argumentologico -> . VAR simboloLogico FLOTANTE
    (26) argumentologico -> . VAR IGUAL BOOLEANO
    (27) argumentologico -> . VAR IGUAL CADENA
    (28) argumentologico -> . ENTERO simboloLogico VAR
    (29) argumentologico -> . FLOTANTE simboloLogico VAR
    (30) argumentologico -> . BOOLEANO IGUAL VAR
    (31) argumentologico -> . CADENA IGUAL VAR

    VAR             shift and go to state 34
    BOOLEANO        shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 38

    argumentologico                shift and go to state 33

state 23

    (21) if -> IF LPAREN . argumentologico RPAREN
    (22) argumentologico -> . VAR simboloLogico VAR
    (23) argumentologico -> . BOOLEANO
    (24) argumentologico -> . VAR simboloLogico ENTERO
    (25) argumentologico -> . VAR simboloLogico FLOTANTE
    (26) argumentologico -> . VAR IGUAL BOOLEANO
    (27) argumentologico -> . VAR IGUAL CADENA
    (28) argumentologico -> . ENTERO simboloLogico VAR
    (29) argumentologico -> . FLOTANTE simboloLogico VAR
    (30) argumentologico -> . BOOLEANO IGUAL VAR
    (31) argumentologico -> . CADENA IGUAL VAR

    VAR             shift and go to state 34
    BOOLEANO        shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    CADENA          shift and go to state 38

    argumentologico                shift and go to state 39

state 24

    (5) asignacion -> VAR ASIGNACION valor . EOL

    EOL             shift and go to state 40


state 25

    (6) echo -> ECHO valor EOL .

    $end            reduce using rule 6 (echo -> ECHO valor EOL .)


state 26

    (16) operacion -> ENTERO operador . operacion
    (14) operacion -> . ENTERO
    (15) operacion -> . FLOTANTE
    (16) operacion -> . ENTERO operador operacion
    (17) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 41
    FLOTANTE        shift and go to state 43

    operacion                      shift and go to state 42

state 27

    (39) operador -> SUMA .

    ENTERO          reduce using rule 39 (operador -> SUMA .)
    FLOTANTE        reduce using rule 39 (operador -> SUMA .)


state 28

    (40) operador -> RESTA .

    ENTERO          reduce using rule 40 (operador -> RESTA .)
    FLOTANTE        reduce using rule 40 (operador -> RESTA .)


state 29

    (41) operador -> MULT .

    ENTERO          reduce using rule 41 (operador -> MULT .)
    FLOTANTE        reduce using rule 41 (operador -> MULT .)


state 30

    (42) operador -> DIV .

    ENTERO          reduce using rule 42 (operador -> DIV .)
    FLOTANTE        reduce using rule 42 (operador -> DIV .)


state 31

    (43) operador -> POT .

    ENTERO          reduce using rule 43 (operador -> POT .)
    FLOTANTE        reduce using rule 43 (operador -> POT .)


state 32

    (17) operacion -> FLOTANTE operador . operacion
    (14) operacion -> . ENTERO
    (15) operacion -> . FLOTANTE
    (16) operacion -> . ENTERO operador operacion
    (17) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 41
    FLOTANTE        shift and go to state 43

    operacion                      shift and go to state 44

state 33

    (20) while -> WHILE LPAREN argumentologico . RPAREN

    RPAREN          shift and go to state 45


state 34

    (22) argumentologico -> VAR . simboloLogico VAR
    (24) argumentologico -> VAR . simboloLogico ENTERO
    (25) argumentologico -> VAR . simboloLogico FLOTANTE
    (26) argumentologico -> VAR . IGUAL BOOLEANO
    (27) argumentologico -> VAR . IGUAL CADENA
    (32) simboloLogico -> . IGUAL
    (33) simboloLogico -> . DIFERENTE
    (34) simboloLogico -> . MENOR
    (35) simboloLogico -> . MAYOR
    (36) simboloLogico -> . MENOR_IGUAL
    (37) simboloLogico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 47
    DIFERENTE       shift and go to state 48
    MENOR           shift and go to state 49
    MAYOR           shift and go to state 50
    MENOR_IGUAL     shift and go to state 51
    MAYOR_IGUAL     shift and go to state 52

    simboloLogico                  shift and go to state 46

state 35

    (23) argumentologico -> BOOLEANO .
    (30) argumentologico -> BOOLEANO . IGUAL VAR

    RPAREN          reduce using rule 23 (argumentologico -> BOOLEANO .)
    IGUAL           shift and go to state 53


state 36

    (28) argumentologico -> ENTERO . simboloLogico VAR
    (32) simboloLogico -> . IGUAL
    (33) simboloLogico -> . DIFERENTE
    (34) simboloLogico -> . MENOR
    (35) simboloLogico -> . MAYOR
    (36) simboloLogico -> . MENOR_IGUAL
    (37) simboloLogico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 55
    DIFERENTE       shift and go to state 48
    MENOR           shift and go to state 49
    MAYOR           shift and go to state 50
    MENOR_IGUAL     shift and go to state 51
    MAYOR_IGUAL     shift and go to state 52

    simboloLogico                  shift and go to state 54

state 37

    (29) argumentologico -> FLOTANTE . simboloLogico VAR
    (32) simboloLogico -> . IGUAL
    (33) simboloLogico -> . DIFERENTE
    (34) simboloLogico -> . MENOR
    (35) simboloLogico -> . MAYOR
    (36) simboloLogico -> . MENOR_IGUAL
    (37) simboloLogico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 55
    DIFERENTE       shift and go to state 48
    MENOR           shift and go to state 49
    MAYOR           shift and go to state 50
    MENOR_IGUAL     shift and go to state 51
    MAYOR_IGUAL     shift and go to state 52

    simboloLogico                  shift and go to state 56

state 38

    (31) argumentologico -> CADENA . IGUAL VAR

    IGUAL           shift and go to state 57


state 39

    (21) if -> IF LPAREN argumentologico . RPAREN

    RPAREN          shift and go to state 58


state 40

    (5) asignacion -> VAR ASIGNACION valor EOL .

    $end            reduce using rule 5 (asignacion -> VAR ASIGNACION valor EOL .)


state 41

    (14) operacion -> ENTERO .
    (16) operacion -> ENTERO . operador operacion
    (39) operador -> . SUMA
    (40) operador -> . RESTA
    (41) operador -> . MULT
    (42) operador -> . DIV
    (43) operador -> . POT

    EOL             reduce using rule 14 (operacion -> ENTERO .)
    SUMA            shift and go to state 27
    RESTA           shift and go to state 28
    MULT            shift and go to state 29
    DIV             shift and go to state 30
    POT             shift and go to state 31

    operador                       shift and go to state 26

state 42

    (16) operacion -> ENTERO operador operacion .

    EOL             reduce using rule 16 (operacion -> ENTERO operador operacion .)


state 43

    (15) operacion -> FLOTANTE .
    (17) operacion -> FLOTANTE . operador operacion
    (39) operador -> . SUMA
    (40) operador -> . RESTA
    (41) operador -> . MULT
    (42) operador -> . DIV
    (43) operador -> . POT

    EOL             reduce using rule 15 (operacion -> FLOTANTE .)
    SUMA            shift and go to state 27
    RESTA           shift and go to state 28
    MULT            shift and go to state 29
    DIV             shift and go to state 30
    POT             shift and go to state 31

    operador                       shift and go to state 32

state 44

    (17) operacion -> FLOTANTE operador operacion .

    EOL             reduce using rule 17 (operacion -> FLOTANTE operador operacion .)


state 45

    (20) while -> WHILE LPAREN argumentologico RPAREN .

    $end            reduce using rule 20 (while -> WHILE LPAREN argumentologico RPAREN .)


state 46

    (22) argumentologico -> VAR simboloLogico . VAR
    (24) argumentologico -> VAR simboloLogico . ENTERO
    (25) argumentologico -> VAR simboloLogico . FLOTANTE

    VAR             shift and go to state 59
    ENTERO          shift and go to state 60
    FLOTANTE        shift and go to state 61


state 47

    (26) argumentologico -> VAR IGUAL . BOOLEANO
    (27) argumentologico -> VAR IGUAL . CADENA
    (32) simboloLogico -> IGUAL .

    BOOLEANO        shift and go to state 62
    CADENA          shift and go to state 63
    VAR             reduce using rule 32 (simboloLogico -> IGUAL .)
    ENTERO          reduce using rule 32 (simboloLogico -> IGUAL .)
    FLOTANTE        reduce using rule 32 (simboloLogico -> IGUAL .)


state 48

    (33) simboloLogico -> DIFERENTE .

    VAR             reduce using rule 33 (simboloLogico -> DIFERENTE .)
    ENTERO          reduce using rule 33 (simboloLogico -> DIFERENTE .)
    FLOTANTE        reduce using rule 33 (simboloLogico -> DIFERENTE .)


state 49

    (34) simboloLogico -> MENOR .

    VAR             reduce using rule 34 (simboloLogico -> MENOR .)
    ENTERO          reduce using rule 34 (simboloLogico -> MENOR .)
    FLOTANTE        reduce using rule 34 (simboloLogico -> MENOR .)


state 50

    (35) simboloLogico -> MAYOR .

    VAR             reduce using rule 35 (simboloLogico -> MAYOR .)
    ENTERO          reduce using rule 35 (simboloLogico -> MAYOR .)
    FLOTANTE        reduce using rule 35 (simboloLogico -> MAYOR .)


state 51

    (36) simboloLogico -> MENOR_IGUAL .

    VAR             reduce using rule 36 (simboloLogico -> MENOR_IGUAL .)
    ENTERO          reduce using rule 36 (simboloLogico -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 36 (simboloLogico -> MENOR_IGUAL .)


state 52

    (37) simboloLogico -> MAYOR_IGUAL .

    VAR             reduce using rule 37 (simboloLogico -> MAYOR_IGUAL .)
    ENTERO          reduce using rule 37 (simboloLogico -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 37 (simboloLogico -> MAYOR_IGUAL .)


state 53

    (30) argumentologico -> BOOLEANO IGUAL . VAR

    VAR             shift and go to state 64


state 54

    (28) argumentologico -> ENTERO simboloLogico . VAR

    VAR             shift and go to state 65


state 55

    (32) simboloLogico -> IGUAL .

    VAR             reduce using rule 32 (simboloLogico -> IGUAL .)


state 56

    (29) argumentologico -> FLOTANTE simboloLogico . VAR

    VAR             shift and go to state 66


state 57

    (31) argumentologico -> CADENA IGUAL . VAR

    VAR             shift and go to state 67


state 58

    (21) if -> IF LPAREN argumentologico RPAREN .

    $end            reduce using rule 21 (if -> IF LPAREN argumentologico RPAREN .)


state 59

    (22) argumentologico -> VAR simboloLogico VAR .

    RPAREN          reduce using rule 22 (argumentologico -> VAR simboloLogico VAR .)


state 60

    (24) argumentologico -> VAR simboloLogico ENTERO .

    RPAREN          reduce using rule 24 (argumentologico -> VAR simboloLogico ENTERO .)


state 61

    (25) argumentologico -> VAR simboloLogico FLOTANTE .

    RPAREN          reduce using rule 25 (argumentologico -> VAR simboloLogico FLOTANTE .)


state 62

    (26) argumentologico -> VAR IGUAL BOOLEANO .

    RPAREN          reduce using rule 26 (argumentologico -> VAR IGUAL BOOLEANO .)


state 63

    (27) argumentologico -> VAR IGUAL CADENA .

    RPAREN          reduce using rule 27 (argumentologico -> VAR IGUAL CADENA .)


state 64

    (30) argumentologico -> BOOLEANO IGUAL VAR .

    RPAREN          reduce using rule 30 (argumentologico -> BOOLEANO IGUAL VAR .)


state 65

    (28) argumentologico -> ENTERO simboloLogico VAR .

    RPAREN          reduce using rule 28 (argumentologico -> ENTERO simboloLogico VAR .)


state 66

    (29) argumentologico -> FLOTANTE simboloLogico VAR .

    RPAREN          reduce using rule 29 (argumentologico -> FLOTANTE simboloLogico VAR .)


state 67

    (31) argumentologico -> CADENA IGUAL VAR .

    RPAREN          reduce using rule 31 (argumentologico -> CADENA IGUAL VAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 15 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (operacion -> ENTERO) in state 15
WARNING: reduce/reduce conflict in state 16 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (operacion -> FLOTANTE) in state 16
