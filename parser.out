Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNAR
    BREAK
    CASE
    COMILLA_DOBLE
    COMILLA_DOBLE_CADENA
    COMILLA_SIMPLE
    COMILLA_SIMPLE_CADENA
    CONTINUE
    DICT
    DIV_ASIGNAR
    DO
    DOSPUNTOS
    ELSE
    ELSEIF
    ENDWHILE
    FOR
    FOREACH
    FUNCION
    FUNCTION
    GLOBAL
    ID
    LBRACE
    LBRACKET
    MAYOR_MENOR
    MENOR_MAYOR
    MODULO
    MULT_ASIGNAR
    OBJETO
    POT_ASIGNAR
    PUNTO
    RBRACE
    RBRACKET
    RESTA_ASIGNAR
    RETURN
    SET
    SUMA_ASIGNAR
    SWITCH
    TUPLE
    VARIABLE_ARRAY
    VARIABLE_FUNCION
    VARIABLE_OBJETO

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> asignacion
Rule 2     sentencia -> echo
Rule 3     sentencia -> estructuracontrol
Rule 4     sentencia -> comentario
Rule 5     sentencia -> declaracion_numeros
Rule 6     sentencia -> array
Rule 7     asignacion -> VAR ASIGNACION valor EOL
Rule 8     echo -> ECHO valores EOL
Rule 9     valores -> valor
Rule 10    valores -> valor COMA valores
Rule 11    operacion -> ENTERO
Rule 12    operacion -> FLOTANTE
Rule 13    operacion -> ENTERO operador operacion
Rule 14    operacion -> FLOTANTE operador operacion
Rule 15    estructuracontrol -> while
Rule 16    estructuracontrol -> if
Rule 17    while -> WHILE LPAREN argumentologico RPAREN
Rule 18    if -> IF LPAREN argumentologico RPAREN
Rule 19    argumentologico -> VAR simboloLogico VAR
Rule 20    argumentologico -> numero simboloLogico numero
Rule 21    argumentologico -> VAR simboloLogico numero
Rule 22    argumentologico -> VAR IGUAL BOOLEANO
Rule 23    argumentologico -> VAR IGUAL CADENA
Rule 24    argumentologico -> numero simboloLogico VAR
Rule 25    argumentologico -> BOOLEANO IGUAL VAR
Rule 26    argumentologico -> CADENA IGUAL VAR
Rule 27    argumentologico -> CADENA IGUAL CADENA
Rule 28    argumentologico -> BOOLEANO
Rule 29    simboloLogico -> IGUAL
Rule 30    simboloLogico -> DIFERENTE
Rule 31    simboloLogico -> MENOR
Rule 32    simboloLogico -> MAYOR
Rule 33    simboloLogico -> MENOR_IGUAL
Rule 34    simboloLogico -> MAYOR_IGUAL
Rule 35    comentario -> COMNT
Rule 36    operador -> SUMA
Rule 37    operador -> RESTA
Rule 38    operador -> MULT
Rule 39    operador -> DIV
Rule 40    operador -> POT
Rule 41    numero -> ENTERO
Rule 42    numero -> FLOTANTE
Rule 43    declaracion_numeros -> VAR ASIGNACION numero
Rule 44    array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN
Rule 45    elementos -> lista
Rule 46    elementos -> diccionario
Rule 47    diccionario -> CADENA ASIGNACION MAYOR valor
Rule 48    diccionario -> CADENA ASIGNACION MAYOR valor COMA diccionario
Rule 49    valor -> numero
Rule 50    valor -> CADENA
Rule 51    lista -> palabras
Rule 52    lista -> numeros
Rule 53    lista -> variables
Rule 54    palabras -> CADENA COMA palabras
Rule 55    palabras -> CADENA
Rule 56    numeros -> numero COMA numeros
Rule 57    numeros -> numero
Rule 58    variables -> VAR COMA variables
Rule 59    variables -> VAR

Terminals, with rules where they appear

ARRAY                : 44
ASIGNACION           : 7 43 44 47 48
ASIGNAR              : 
BOOLEANO             : 22 25 28
BREAK                : 
CADENA               : 23 26 27 27 47 48 50 54 55
CASE                 : 
COMA                 : 10 48 54 56 58
COMILLA_DOBLE        : 
COMILLA_DOBLE_CADENA : 
COMILLA_SIMPLE       : 
COMILLA_SIMPLE_CADENA : 
COMNT                : 35
CONTINUE             : 
DICT                 : 
DIFERENTE            : 30
DIV                  : 39
DIV_ASIGNAR          : 
DO                   : 
DOSPUNTOS            : 
ECHO                 : 8
ELSE                 : 
ELSEIF               : 
ENDWHILE             : 
ENTERO               : 11 13 41
EOL                  : 7 8
FLOTANTE             : 12 14 42
FOR                  : 
FOREACH              : 
FUNCION              : 
FUNCTION             : 
GLOBAL               : 
ID                   : 
IF                   : 18
IGUAL                : 22 23 25 26 27 29
LBRACE               : 
LBRACKET             : 
LPAREN               : 17 18 44
MAYOR                : 32 47 48
MAYOR_IGUAL          : 34
MAYOR_MENOR          : 
MENOR                : 31
MENOR_IGUAL          : 33
MENOR_MAYOR          : 
MODULO               : 
MULT                 : 38
MULT_ASIGNAR         : 
OBJETO               : 
POT                  : 40
POT_ASIGNAR          : 
PUNTO                : 
RBRACE               : 
RBRACKET             : 
RESTA                : 37
RESTA_ASIGNAR        : 
RETURN               : 
RPAREN               : 17 18 44
SET                  : 
SUMA                 : 36
SUMA_ASIGNAR         : 
SWITCH               : 
TUPLE                : 
VAR                  : 7 19 19 21 22 23 24 25 26 43 44 58 59
VARIABLE_ARRAY       : 
VARIABLE_FUNCION     : 
VARIABLE_OBJETO      : 
WHILE                : 17
error                : 

Nonterminals, with rules where they appear

argumentologico      : 17 18
array                : 6
asignacion           : 1
comentario           : 4
declaracion_numeros  : 5
diccionario          : 46 48
echo                 : 2
elementos            : 44
estructuracontrol    : 3
if                   : 16
lista                : 45
numero               : 20 20 21 24 43 49 56 57
numeros              : 52 56
operacion            : 13 14
operador             : 13 14
palabras             : 51 54
sentencia            : 0
simboloLogico        : 19 20 21 24
valor                : 7 9 10 47 48
valores              : 8 10
variables            : 53 58
while                : 15

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . asignacion
    (2) sentencia -> . echo
    (3) sentencia -> . estructuracontrol
    (4) sentencia -> . comentario
    (5) sentencia -> . declaracion_numeros
    (6) sentencia -> . array
    (7) asignacion -> . VAR ASIGNACION valor EOL
    (8) echo -> . ECHO valores EOL
    (15) estructuracontrol -> . while
    (16) estructuracontrol -> . if
    (35) comentario -> . COMNT
    (43) declaracion_numeros -> . VAR ASIGNACION numero
    (44) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN
    (17) while -> . WHILE LPAREN argumentologico RPAREN
    (18) if -> . IF LPAREN argumentologico RPAREN

    VAR             shift and go to state 8
    ECHO            shift and go to state 9
    COMNT           shift and go to state 12
    WHILE           shift and go to state 13
    IF              shift and go to state 14

    sentencia                      shift and go to state 1
    asignacion                     shift and go to state 2
    echo                           shift and go to state 3
    estructuracontrol              shift and go to state 4
    comentario                     shift and go to state 5
    declaracion_numeros            shift and go to state 6
    array                          shift and go to state 7
    while                          shift and go to state 10
    if                             shift and go to state 11

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> asignacion .

    $end            reduce using rule 1 (sentencia -> asignacion .)


state 3

    (2) sentencia -> echo .

    $end            reduce using rule 2 (sentencia -> echo .)


state 4

    (3) sentencia -> estructuracontrol .

    $end            reduce using rule 3 (sentencia -> estructuracontrol .)


state 5

    (4) sentencia -> comentario .

    $end            reduce using rule 4 (sentencia -> comentario .)


state 6

    (5) sentencia -> declaracion_numeros .

    $end            reduce using rule 5 (sentencia -> declaracion_numeros .)


state 7

    (6) sentencia -> array .

    $end            reduce using rule 6 (sentencia -> array .)


state 8

    (7) asignacion -> VAR . ASIGNACION valor EOL
    (43) declaracion_numeros -> VAR . ASIGNACION numero
    (44) array -> VAR . ASIGNACION ARRAY LPAREN elementos RPAREN

    ASIGNACION      shift and go to state 15


state 9

    (8) echo -> ECHO . valores EOL
    (9) valores -> . valor
    (10) valores -> . valor COMA valores
    (49) valor -> . numero
    (50) valor -> . CADENA
    (41) numero -> . ENTERO
    (42) numero -> . FLOTANTE

    CADENA          shift and go to state 19
    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21

    valores                        shift and go to state 16
    valor                          shift and go to state 17
    numero                         shift and go to state 18

state 10

    (15) estructuracontrol -> while .

    $end            reduce using rule 15 (estructuracontrol -> while .)


state 11

    (16) estructuracontrol -> if .

    $end            reduce using rule 16 (estructuracontrol -> if .)


state 12

    (35) comentario -> COMNT .

    $end            reduce using rule 35 (comentario -> COMNT .)


state 13

    (17) while -> WHILE . LPAREN argumentologico RPAREN

    LPAREN          shift and go to state 22


state 14

    (18) if -> IF . LPAREN argumentologico RPAREN

    LPAREN          shift and go to state 23


state 15

    (7) asignacion -> VAR ASIGNACION . valor EOL
    (43) declaracion_numeros -> VAR ASIGNACION . numero
    (44) array -> VAR ASIGNACION . ARRAY LPAREN elementos RPAREN
    (49) valor -> . numero
    (50) valor -> . CADENA
    (41) numero -> . ENTERO
    (42) numero -> . FLOTANTE

    ARRAY           shift and go to state 26
    CADENA          shift and go to state 19
    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21

    valor                          shift and go to state 24
    numero                         shift and go to state 25

state 16

    (8) echo -> ECHO valores . EOL

    EOL             shift and go to state 27


state 17

    (9) valores -> valor .
    (10) valores -> valor . COMA valores

    EOL             reduce using rule 9 (valores -> valor .)
    COMA            shift and go to state 28


state 18

    (49) valor -> numero .

    COMA            reduce using rule 49 (valor -> numero .)
    EOL             reduce using rule 49 (valor -> numero .)
    RPAREN          reduce using rule 49 (valor -> numero .)


state 19

    (50) valor -> CADENA .

    COMA            reduce using rule 50 (valor -> CADENA .)
    EOL             reduce using rule 50 (valor -> CADENA .)
    RPAREN          reduce using rule 50 (valor -> CADENA .)


state 20

    (41) numero -> ENTERO .

    COMA            reduce using rule 41 (numero -> ENTERO .)
    EOL             reduce using rule 41 (numero -> ENTERO .)
    $end            reduce using rule 41 (numero -> ENTERO .)
    IGUAL           reduce using rule 41 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 41 (numero -> ENTERO .)
    MENOR           reduce using rule 41 (numero -> ENTERO .)
    MAYOR           reduce using rule 41 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 41 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 41 (numero -> ENTERO .)
    RPAREN          reduce using rule 41 (numero -> ENTERO .)


state 21

    (42) numero -> FLOTANTE .

    COMA            reduce using rule 42 (numero -> FLOTANTE .)
    EOL             reduce using rule 42 (numero -> FLOTANTE .)
    $end            reduce using rule 42 (numero -> FLOTANTE .)
    IGUAL           reduce using rule 42 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 42 (numero -> FLOTANTE .)
    MENOR           reduce using rule 42 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 42 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 42 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 42 (numero -> FLOTANTE .)
    RPAREN          reduce using rule 42 (numero -> FLOTANTE .)


state 22

    (17) while -> WHILE LPAREN . argumentologico RPAREN
    (19) argumentologico -> . VAR simboloLogico VAR
    (20) argumentologico -> . numero simboloLogico numero
    (21) argumentologico -> . VAR simboloLogico numero
    (22) argumentologico -> . VAR IGUAL BOOLEANO
    (23) argumentologico -> . VAR IGUAL CADENA
    (24) argumentologico -> . numero simboloLogico VAR
    (25) argumentologico -> . BOOLEANO IGUAL VAR
    (26) argumentologico -> . CADENA IGUAL VAR
    (27) argumentologico -> . CADENA IGUAL CADENA
    (28) argumentologico -> . BOOLEANO
    (41) numero -> . ENTERO
    (42) numero -> . FLOTANTE

    VAR             shift and go to state 30
    BOOLEANO        shift and go to state 32
    CADENA          shift and go to state 33
    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21

    argumentologico                shift and go to state 29
    numero                         shift and go to state 31

state 23

    (18) if -> IF LPAREN . argumentologico RPAREN
    (19) argumentologico -> . VAR simboloLogico VAR
    (20) argumentologico -> . numero simboloLogico numero
    (21) argumentologico -> . VAR simboloLogico numero
    (22) argumentologico -> . VAR IGUAL BOOLEANO
    (23) argumentologico -> . VAR IGUAL CADENA
    (24) argumentologico -> . numero simboloLogico VAR
    (25) argumentologico -> . BOOLEANO IGUAL VAR
    (26) argumentologico -> . CADENA IGUAL VAR
    (27) argumentologico -> . CADENA IGUAL CADENA
    (28) argumentologico -> . BOOLEANO
    (41) numero -> . ENTERO
    (42) numero -> . FLOTANTE

    VAR             shift and go to state 30
    BOOLEANO        shift and go to state 32
    CADENA          shift and go to state 33
    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21

    argumentologico                shift and go to state 34
    numero                         shift and go to state 31

state 24

    (7) asignacion -> VAR ASIGNACION valor . EOL

    EOL             shift and go to state 35


state 25

    (43) declaracion_numeros -> VAR ASIGNACION numero .
    (49) valor -> numero .

    $end            reduce using rule 43 (declaracion_numeros -> VAR ASIGNACION numero .)
    EOL             reduce using rule 49 (valor -> numero .)


state 26

    (44) array -> VAR ASIGNACION ARRAY . LPAREN elementos RPAREN

    LPAREN          shift and go to state 36


state 27

    (8) echo -> ECHO valores EOL .

    $end            reduce using rule 8 (echo -> ECHO valores EOL .)


state 28

    (10) valores -> valor COMA . valores
    (9) valores -> . valor
    (10) valores -> . valor COMA valores
    (49) valor -> . numero
    (50) valor -> . CADENA
    (41) numero -> . ENTERO
    (42) numero -> . FLOTANTE

    CADENA          shift and go to state 19
    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21

    valor                          shift and go to state 17
    valores                        shift and go to state 37
    numero                         shift and go to state 18

state 29

    (17) while -> WHILE LPAREN argumentologico . RPAREN

    RPAREN          shift and go to state 38


state 30

    (19) argumentologico -> VAR . simboloLogico VAR
    (21) argumentologico -> VAR . simboloLogico numero
    (22) argumentologico -> VAR . IGUAL BOOLEANO
    (23) argumentologico -> VAR . IGUAL CADENA
    (29) simboloLogico -> . IGUAL
    (30) simboloLogico -> . DIFERENTE
    (31) simboloLogico -> . MENOR
    (32) simboloLogico -> . MAYOR
    (33) simboloLogico -> . MENOR_IGUAL
    (34) simboloLogico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 40
    DIFERENTE       shift and go to state 41
    MENOR           shift and go to state 42
    MAYOR           shift and go to state 43
    MENOR_IGUAL     shift and go to state 44
    MAYOR_IGUAL     shift and go to state 45

    simboloLogico                  shift and go to state 39

state 31

    (20) argumentologico -> numero . simboloLogico numero
    (24) argumentologico -> numero . simboloLogico VAR
    (29) simboloLogico -> . IGUAL
    (30) simboloLogico -> . DIFERENTE
    (31) simboloLogico -> . MENOR
    (32) simboloLogico -> . MAYOR
    (33) simboloLogico -> . MENOR_IGUAL
    (34) simboloLogico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 47
    DIFERENTE       shift and go to state 41
    MENOR           shift and go to state 42
    MAYOR           shift and go to state 43
    MENOR_IGUAL     shift and go to state 44
    MAYOR_IGUAL     shift and go to state 45

    simboloLogico                  shift and go to state 46

state 32

    (25) argumentologico -> BOOLEANO . IGUAL VAR
    (28) argumentologico -> BOOLEANO .

    IGUAL           shift and go to state 48
    RPAREN          reduce using rule 28 (argumentologico -> BOOLEANO .)


state 33

    (26) argumentologico -> CADENA . IGUAL VAR
    (27) argumentologico -> CADENA . IGUAL CADENA

    IGUAL           shift and go to state 49


state 34

    (18) if -> IF LPAREN argumentologico . RPAREN

    RPAREN          shift and go to state 50


state 35

    (7) asignacion -> VAR ASIGNACION valor EOL .

    $end            reduce using rule 7 (asignacion -> VAR ASIGNACION valor EOL .)


state 36

    (44) array -> VAR ASIGNACION ARRAY LPAREN . elementos RPAREN
    (45) elementos -> . lista
    (46) elementos -> . diccionario
    (51) lista -> . palabras
    (52) lista -> . numeros
    (53) lista -> . variables
    (47) diccionario -> . CADENA ASIGNACION MAYOR valor
    (48) diccionario -> . CADENA ASIGNACION MAYOR valor COMA diccionario
    (54) palabras -> . CADENA COMA palabras
    (55) palabras -> . CADENA
    (56) numeros -> . numero COMA numeros
    (57) numeros -> . numero
    (58) variables -> . VAR COMA variables
    (59) variables -> . VAR
    (41) numero -> . ENTERO
    (42) numero -> . FLOTANTE

    CADENA          shift and go to state 58
    VAR             shift and go to state 51
    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21

    elementos                      shift and go to state 52
    lista                          shift and go to state 53
    diccionario                    shift and go to state 54
    palabras                       shift and go to state 55
    numeros                        shift and go to state 56
    variables                      shift and go to state 57
    numero                         shift and go to state 59

state 37

    (10) valores -> valor COMA valores .

    EOL             reduce using rule 10 (valores -> valor COMA valores .)


state 38

    (17) while -> WHILE LPAREN argumentologico RPAREN .

    $end            reduce using rule 17 (while -> WHILE LPAREN argumentologico RPAREN .)


state 39

    (19) argumentologico -> VAR simboloLogico . VAR
    (21) argumentologico -> VAR simboloLogico . numero
    (41) numero -> . ENTERO
    (42) numero -> . FLOTANTE

    VAR             shift and go to state 60
    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21

    numero                         shift and go to state 61

state 40

    (22) argumentologico -> VAR IGUAL . BOOLEANO
    (23) argumentologico -> VAR IGUAL . CADENA
    (29) simboloLogico -> IGUAL .

    BOOLEANO        shift and go to state 62
    CADENA          shift and go to state 63
    VAR             reduce using rule 29 (simboloLogico -> IGUAL .)
    ENTERO          reduce using rule 29 (simboloLogico -> IGUAL .)
    FLOTANTE        reduce using rule 29 (simboloLogico -> IGUAL .)


state 41

    (30) simboloLogico -> DIFERENTE .

    VAR             reduce using rule 30 (simboloLogico -> DIFERENTE .)
    ENTERO          reduce using rule 30 (simboloLogico -> DIFERENTE .)
    FLOTANTE        reduce using rule 30 (simboloLogico -> DIFERENTE .)


state 42

    (31) simboloLogico -> MENOR .

    VAR             reduce using rule 31 (simboloLogico -> MENOR .)
    ENTERO          reduce using rule 31 (simboloLogico -> MENOR .)
    FLOTANTE        reduce using rule 31 (simboloLogico -> MENOR .)


state 43

    (32) simboloLogico -> MAYOR .

    VAR             reduce using rule 32 (simboloLogico -> MAYOR .)
    ENTERO          reduce using rule 32 (simboloLogico -> MAYOR .)
    FLOTANTE        reduce using rule 32 (simboloLogico -> MAYOR .)


state 44

    (33) simboloLogico -> MENOR_IGUAL .

    VAR             reduce using rule 33 (simboloLogico -> MENOR_IGUAL .)
    ENTERO          reduce using rule 33 (simboloLogico -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 33 (simboloLogico -> MENOR_IGUAL .)


state 45

    (34) simboloLogico -> MAYOR_IGUAL .

    VAR             reduce using rule 34 (simboloLogico -> MAYOR_IGUAL .)
    ENTERO          reduce using rule 34 (simboloLogico -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 34 (simboloLogico -> MAYOR_IGUAL .)


state 46

    (20) argumentologico -> numero simboloLogico . numero
    (24) argumentologico -> numero simboloLogico . VAR
    (41) numero -> . ENTERO
    (42) numero -> . FLOTANTE

    VAR             shift and go to state 65
    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21

    numero                         shift and go to state 64

state 47

    (29) simboloLogico -> IGUAL .

    VAR             reduce using rule 29 (simboloLogico -> IGUAL .)
    ENTERO          reduce using rule 29 (simboloLogico -> IGUAL .)
    FLOTANTE        reduce using rule 29 (simboloLogico -> IGUAL .)


state 48

    (25) argumentologico -> BOOLEANO IGUAL . VAR

    VAR             shift and go to state 66


state 49

    (26) argumentologico -> CADENA IGUAL . VAR
    (27) argumentologico -> CADENA IGUAL . CADENA

    VAR             shift and go to state 68
    CADENA          shift and go to state 67


state 50

    (18) if -> IF LPAREN argumentologico RPAREN .

    $end            reduce using rule 18 (if -> IF LPAREN argumentologico RPAREN .)


state 51

    (58) variables -> VAR . COMA variables
    (59) variables -> VAR .

    COMA            shift and go to state 69
    RPAREN          reduce using rule 59 (variables -> VAR .)


state 52

    (44) array -> VAR ASIGNACION ARRAY LPAREN elementos . RPAREN

    RPAREN          shift and go to state 70


state 53

    (45) elementos -> lista .

    RPAREN          reduce using rule 45 (elementos -> lista .)


state 54

    (46) elementos -> diccionario .

    RPAREN          reduce using rule 46 (elementos -> diccionario .)


state 55

    (51) lista -> palabras .

    RPAREN          reduce using rule 51 (lista -> palabras .)


state 56

    (52) lista -> numeros .

    RPAREN          reduce using rule 52 (lista -> numeros .)


state 57

    (53) lista -> variables .

    RPAREN          reduce using rule 53 (lista -> variables .)


state 58

    (47) diccionario -> CADENA . ASIGNACION MAYOR valor
    (48) diccionario -> CADENA . ASIGNACION MAYOR valor COMA diccionario
    (54) palabras -> CADENA . COMA palabras
    (55) palabras -> CADENA .

    ASIGNACION      shift and go to state 71
    COMA            shift and go to state 72
    RPAREN          reduce using rule 55 (palabras -> CADENA .)


state 59

    (56) numeros -> numero . COMA numeros
    (57) numeros -> numero .

    COMA            shift and go to state 73
    RPAREN          reduce using rule 57 (numeros -> numero .)


state 60

    (19) argumentologico -> VAR simboloLogico VAR .

    RPAREN          reduce using rule 19 (argumentologico -> VAR simboloLogico VAR .)


state 61

    (21) argumentologico -> VAR simboloLogico numero .

    RPAREN          reduce using rule 21 (argumentologico -> VAR simboloLogico numero .)


state 62

    (22) argumentologico -> VAR IGUAL BOOLEANO .

    RPAREN          reduce using rule 22 (argumentologico -> VAR IGUAL BOOLEANO .)


state 63

    (23) argumentologico -> VAR IGUAL CADENA .

    RPAREN          reduce using rule 23 (argumentologico -> VAR IGUAL CADENA .)


state 64

    (20) argumentologico -> numero simboloLogico numero .

    RPAREN          reduce using rule 20 (argumentologico -> numero simboloLogico numero .)


state 65

    (24) argumentologico -> numero simboloLogico VAR .

    RPAREN          reduce using rule 24 (argumentologico -> numero simboloLogico VAR .)


state 66

    (25) argumentologico -> BOOLEANO IGUAL VAR .

    RPAREN          reduce using rule 25 (argumentologico -> BOOLEANO IGUAL VAR .)


state 67

    (27) argumentologico -> CADENA IGUAL CADENA .

    RPAREN          reduce using rule 27 (argumentologico -> CADENA IGUAL CADENA .)


state 68

    (26) argumentologico -> CADENA IGUAL VAR .

    RPAREN          reduce using rule 26 (argumentologico -> CADENA IGUAL VAR .)


state 69

    (58) variables -> VAR COMA . variables
    (58) variables -> . VAR COMA variables
    (59) variables -> . VAR

    VAR             shift and go to state 51

    variables                      shift and go to state 74

state 70

    (44) array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN .

    $end            reduce using rule 44 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN .)


state 71

    (47) diccionario -> CADENA ASIGNACION . MAYOR valor
    (48) diccionario -> CADENA ASIGNACION . MAYOR valor COMA diccionario

    MAYOR           shift and go to state 75


state 72

    (54) palabras -> CADENA COMA . palabras
    (54) palabras -> . CADENA COMA palabras
    (55) palabras -> . CADENA

    CADENA          shift and go to state 76

    palabras                       shift and go to state 77

state 73

    (56) numeros -> numero COMA . numeros
    (56) numeros -> . numero COMA numeros
    (57) numeros -> . numero
    (41) numero -> . ENTERO
    (42) numero -> . FLOTANTE

    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21

    numero                         shift and go to state 59
    numeros                        shift and go to state 78

state 74

    (58) variables -> VAR COMA variables .

    RPAREN          reduce using rule 58 (variables -> VAR COMA variables .)


state 75

    (47) diccionario -> CADENA ASIGNACION MAYOR . valor
    (48) diccionario -> CADENA ASIGNACION MAYOR . valor COMA diccionario
    (49) valor -> . numero
    (50) valor -> . CADENA
    (41) numero -> . ENTERO
    (42) numero -> . FLOTANTE

    CADENA          shift and go to state 19
    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21

    valor                          shift and go to state 79
    numero                         shift and go to state 18

state 76

    (54) palabras -> CADENA . COMA palabras
    (55) palabras -> CADENA .

    COMA            shift and go to state 72
    RPAREN          reduce using rule 55 (palabras -> CADENA .)


state 77

    (54) palabras -> CADENA COMA palabras .

    RPAREN          reduce using rule 54 (palabras -> CADENA COMA palabras .)


state 78

    (56) numeros -> numero COMA numeros .

    RPAREN          reduce using rule 56 (numeros -> numero COMA numeros .)


state 79

    (47) diccionario -> CADENA ASIGNACION MAYOR valor .
    (48) diccionario -> CADENA ASIGNACION MAYOR valor . COMA diccionario

    RPAREN          reduce using rule 47 (diccionario -> CADENA ASIGNACION MAYOR valor .)
    COMA            shift and go to state 80


state 80

    (48) diccionario -> CADENA ASIGNACION MAYOR valor COMA . diccionario
    (47) diccionario -> . CADENA ASIGNACION MAYOR valor
    (48) diccionario -> . CADENA ASIGNACION MAYOR valor COMA diccionario

    CADENA          shift and go to state 81

    diccionario                    shift and go to state 82

state 81

    (47) diccionario -> CADENA . ASIGNACION MAYOR valor
    (48) diccionario -> CADENA . ASIGNACION MAYOR valor COMA diccionario

    ASIGNACION      shift and go to state 71


state 82

    (48) diccionario -> CADENA ASIGNACION MAYOR valor COMA diccionario .

    RPAREN          reduce using rule 48 (diccionario -> CADENA ASIGNACION MAYOR valor COMA diccionario .)

