Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNAR
    BREAK
    CASE
    COMILLA_DOBLE
    COMILLA_DOBLE_CADENA
    COMILLA_SIMPLE
    COMILLA_SIMPLE_CADENA
    CONTINUE
    DICT
    DIV_ASIGNAR
    DO
    DOSPUNTOS
    ENDWHILE
    FOREACH
    GLOBAL
    INDENT
    MAYOR_MENOR
    MENOR_MAYOR
    MODULO
    MULT_ASIGNAR
    POT_ASIGNAR
    PUNTO
    RESTA_ASIGNAR
    SET
    SUMA_ASIGNAR
    SWITCH
    TUPLE
    VARIABLE_OBJETO

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> asignacion
Rule 2     sentencia -> echo
Rule 3     sentencia -> estructuracontrol
Rule 4     sentencia -> comentario
Rule 5     sentencia -> declaracion_numeros
Rule 6     sentencia -> array
Rule 7     sentencia -> funcion
Rule 8     sentencia -> readline
Rule 9     sentencia -> ingreso_datos
Rule 10    sentencia -> objeto
Rule 11    sentencia -> expresionAritmetica
Rule 12    sentencia -> echo SALTO
Rule 13    asignacion -> VAR ASIGNACION valor EOL
Rule 14    echo -> ECHO valores EOL
Rule 15    echo -> ECHO valores EOL SALTO
Rule 16    valores -> valor
Rule 17    valores -> valor COMA valores
Rule 18    valor -> ENTERO
Rule 19    valor -> FLOTANTE
Rule 20    valor -> BOOLEANO
Rule 21    valor -> CADENA
Rule 22    valor -> VAR
Rule 23    valor -> VARIABLE_ARRAY
Rule 24    valor -> operacion
Rule 25    valor -> argumentologico
Rule 26    valor -> array_index
Rule 27    diccionario -> clave_dic ASIGNACION MAYOR valor_dic
Rule 28    diccionario -> clave_dic ASIGNACION MAYOR valor_dic COMA diccionario
Rule 29    clave_dic -> ENTERO
Rule 30    clave_dic -> CADENA
Rule 31    valor_dic -> numero
Rule 32    valor_dic -> CADENA
Rule 33    valor_dic -> VAR
Rule 34    valor_dic -> BOOLEANO
Rule 35    valor_dic -> array_l
Rule 36    array_index -> VAR multi_dimensiones
Rule 37    multi_dimensiones -> LBRACKET clave_dic RBRACKET
Rule 38    multi_dimensiones -> LBRACKET clave_dic RBRACKET multi_dimensiones
Rule 39    operacion -> ENTERO
Rule 40    operacion -> FLOTANTE
Rule 41    operacion -> ENTERO operador operacion
Rule 42    operacion -> FLOTANTE operador operacion
Rule 43    estructuracontrol -> while
Rule 44    estructuracontrol -> if
Rule 45    estructuracontrol -> for
Rule 46    while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
Rule 47    if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE
Rule 48    if -> if else
Rule 49    if -> if elseif else
Rule 50    if -> if elseif
Rule 51    elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE
Rule 52    elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif
Rule 53    else -> ELSE LBRACE lineas RBRACE
Rule 54    condicion -> argumentologico
Rule 55    condicion -> argumentologico conector_logico condicion
Rule 56    vacio -> EOL
Rule 57    conector_logico -> AND
Rule 58    conector_logico -> OR
Rule 59    valor_logico -> numero
Rule 60    valor_logico -> VAR
Rule 61    argumentologico -> VAR operador_logico VAR
Rule 62    argumentologico -> numero operador_logico numero
Rule 63    argumentologico -> VAR operador_logico numero
Rule 64    argumentologico -> VAR IGUAL BOOLEANO
Rule 65    argumentologico -> VAR IGUAL CADENA
Rule 66    argumentologico -> VAR DIFERENTE BOOLEANO
Rule 67    argumentologico -> VAR DIFERENTE CADENA
Rule 68    argumentologico -> numero operador_logico VAR
Rule 69    argumentologico -> BOOLEANO IGUAL VAR
Rule 70    argumentologico -> CADENA IGUAL VAR
Rule 71    argumentologico -> CADENA IGUAL CADENA
Rule 72    argumentologico -> CADENA DIFERENTE VAR
Rule 73    argumentologico -> CADENA DIFERENTE CADENA
Rule 74    argumentologico -> BOOLEANO
Rule 75    numero -> ENTERO
Rule 76    numero -> FLOTANTE
Rule 77    operador_logico -> IGUAL
Rule 78    operador_logico -> DIFERENTE
Rule 79    operador_logico -> MENOR
Rule 80    operador_logico -> MAYOR
Rule 81    operador_logico -> MENOR_IGUAL
Rule 82    operador_logico -> MAYOR_IGUAL
Rule 83    comentario -> COMNT
Rule 84    operador -> SUMA
Rule 85    operador -> RESTA
Rule 86    operador -> MULT
Rule 87    operador -> DIV
Rule 88    operador -> POT
Rule 89    declaracion_numeros -> VAR ASIGNACION numero EOL
Rule 90    array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
Rule 91    elementos -> lista
Rule 92    elementos -> diccionario
Rule 93    lista -> palabras
Rule 94    lista -> numeros
Rule 95    lista -> variables
Rule 96    lista -> array_l
Rule 97    lista -> bool
Rule 98    array_l -> ARRAY LPAREN elementos RPAREN
Rule 99    array_l -> ARRAY LPAREN elementos RPAREN COMA lista
Rule 100   palabras -> CADENA
Rule 101   palabras -> CADENA COMA lista
Rule 102   numeros -> numero
Rule 103   numeros -> numero COMA lista
Rule 104   variables -> VAR
Rule 105   variables -> VAR COMA lista
Rule 106   bool -> BOOLEANO
Rule 107   bool -> BOOLEANO COMA lista
Rule 108   funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE
Rule 109   tipo_funcion -> FUNCION
Rule 110   tipo_funcion -> VARIABLE_FUNCION
Rule 111   final_funcion -> RETURN VAR EOL
Rule 112   final_funcion -> lineas final_funcion
Rule 113   cuerpo_funcion -> declaracion_numeros final_funcion
Rule 114   cuerpo_funcion -> array final_funcion
Rule 115   cuerpo_funcion -> estructuracontrol final_funcion
Rule 116   readline -> READLINE LPAREN CADENA RPAREN EOL
Rule 117   ingreso_datos -> VAR ASIGNACION readline
Rule 118   objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
Rule 119   objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
Rule 120   cuerpo_objeto -> PUBLIC VAR EOL
Rule 121   cuerpo_objeto -> PUBLIC asignacion
Rule 122   cuerpo_objeto -> PUBLIC funcion
Rule 123   mas_objetos -> cuerpo_objeto
Rule 124   mas_objetos -> cuerpo_objeto mas_objetos
Rule 125   atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL
Rule 126   mas_atributos -> atributo
Rule 127   mas_atributos -> atributo mas_atributos
Rule 128   for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
Rule 129   for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
Rule 130   for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE
Rule 131   linea -> echo
Rule 132   linea -> ECHO CADENA EOL
Rule 133   linea -> ECHO VAR EOL
Rule 134   linea -> VAR ASIGNACION CADENA EOL
Rule 135   linea -> estructuracontrol
Rule 136   linea -> comentario
Rule 137   linea -> declaracion_numeros
Rule 138   linea -> array
Rule 139   lineas -> linea
Rule 140   lineas -> linea lineas
Rule 141   expresionAritmetica -> VAR ASIGNACION numero masTerminos EOL
Rule 142   expresionAritmetica -> VAR ASIGNACION VAR masTerminos EOL
Rule 143   termino -> operador numero
Rule 144   termino -> operador VAR
Rule 145   masTerminos -> termino
Rule 146   masTerminos -> termino masTerminos

Terminals, with rules where they appear

AND                  : 57
ARRAY                : 90 98 99
ASIGNACION           : 13 27 28 89 90 117 118 119 125 134 141 142
ASIGNAR              : 
BOOLEANO             : 20 34 64 66 69 74 106 107
BREAK                : 
CADENA               : 21 30 32 65 67 70 71 71 72 73 73 100 101 116 125 132 134
CASE                 : 
CLASE                : 118 119
COMA                 : 17 28 99 101 103 105 107
COMILLA_DOBLE        : 
COMILLA_DOBLE_CADENA : 
COMILLA_SIMPLE       : 
COMILLA_SIMPLE_CADENA : 
COMNT                : 83
CONTINUE             : 
DICT                 : 
DIFERENTE            : 66 67 72 73 78
DIV                  : 87
DIV_ASIGNAR          : 
DO                   : 
DOSPUNTOS            : 
ECHO                 : 14 15 132 133
ELSE                 : 53
ELSEIF               : 51 52
ENDWHILE             : 
ENTERO               : 18 29 39 41 75
EOL                  : 13 14 15 56 89 90 111 116 118 119 120 125 128 129 130 132 133 134 141 142
EXTENDS              : 119
FLOTANTE             : 19 40 42 76
FOR                  : 128 129 130
FOREACH              : 
FUNCION              : 109
FUNCTION             : 108
GLOBAL               : 
ID                   : 125
IF                   : 47
IGUAL                : 64 65 69 70 71 77
INDENT               : 
LBRACE               : 46 47 51 52 53 108 118 119 128 129 130
LBRACKET             : 37 38
LPAREN               : 46 47 51 52 90 98 99 116 118 119 128 129 130
MAYOR                : 27 28 80 125
MAYOR_IGUAL          : 82
MAYOR_MENOR          : 
MENOR                : 79
MENOR_IGUAL          : 81
MENOR_MAYOR          : 
MODULO               : 
MULT                 : 86
MULT_ASIGNAR         : 
NEW                  : 118 119
OBJETO               : 118 118 119 119 119
OR                   : 58
POT                  : 88
POT_ASIGNAR          : 
PUBLIC               : 120 121 122
PUNTO                : 
RBRACE               : 46 47 51 52 53 108 118 119 128 129 130
RBRACKET             : 37 38
READLINE             : 116
RESTA                : 85 125 129 129
RESTA_ASIGNAR        : 
RETURN               : 111
RPAREN               : 46 47 51 52 90 98 99 116 118 119 128 129 130
SALTO                : 12 15 130 130
SET                  : 
SUMA                 : 84 128 128 130 130
SUMA_ASIGNAR         : 
SWITCH               : 
TUPLE                : 
VAR                  : 13 22 33 36 60 61 61 63 64 65 66 67 68 69 70 72 89 90 104 105 111 117 118 119 120 125 128 129 130 133 134 141 142 142 144
VARIABLE_ARRAY       : 23
VARIABLE_FUNCION     : 110
VARIABLE_OBJETO      : 
WHILE                : 46
error                : 

Nonterminals, with rules where they appear

argumentologico      : 25 54 55 128 129 130
array                : 6 114 138
array_index          : 26
array_l              : 35 96
asignacion           : 1 121 128 129 130
atributo             : 126 127
bool                 : 97
clave_dic            : 27 28 37 38
comentario           : 4 136
condicion            : 46 47 51 52 55
conector_logico      : 55
cuerpo_funcion       : 
cuerpo_objeto        : 123 124
declaracion_numeros  : 5 113 137
diccionario          : 28 92
echo                 : 2 12 131
elementos            : 90 98 99
else                 : 48 49
elseif               : 49 50 52
estructuracontrol    : 3 115 135
expresionAritmetica  : 11
final_funcion        : 108 112 113 114 115
for                  : 45
funcion              : 7 122
if                   : 44 48 49 50
ingreso_datos        : 9
linea                : 139 140
lineas               : 46 47 51 52 53 112 128 129 130 140
lista                : 91 99 101 103 105 107
masTerminos          : 141 142 146
mas_atributos        : 118 119 127
mas_objetos          : 118 119 124
multi_dimensiones    : 36 38
numero               : 31 59 62 62 63 68 89 102 103 141 143
numeros              : 94
objeto               : 10
operacion            : 24 41 42
operador             : 41 42 143 144
operador_logico      : 61 62 63 68
palabras             : 93
readline             : 8 117
sentencia            : 0
termino              : 145 146
tipo_funcion         : 108
vacio                : 
valor                : 13 16 17
valor_dic            : 27 28
valor_logico         : 
valores              : 14 15 17
variables            : 95
while                : 43

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . asignacion
    (2) sentencia -> . echo
    (3) sentencia -> . estructuracontrol
    (4) sentencia -> . comentario
    (5) sentencia -> . declaracion_numeros
    (6) sentencia -> . array
    (7) sentencia -> . funcion
    (8) sentencia -> . readline
    (9) sentencia -> . ingreso_datos
    (10) sentencia -> . objeto
    (11) sentencia -> . expresionAritmetica
    (12) sentencia -> . echo SALTO
    (13) asignacion -> . VAR ASIGNACION valor EOL
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (43) estructuracontrol -> . while
    (44) estructuracontrol -> . if
    (45) estructuracontrol -> . for
    (83) comentario -> . COMNT
    (89) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (90) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (108) funcion -> . FUNCTION tipo_funcion LBRACE final_funcion RBRACE
    (116) readline -> . READLINE LPAREN CADENA RPAREN EOL
    (117) ingreso_datos -> . VAR ASIGNACION readline
    (118) objeto -> . CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
    (119) objeto -> . CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
    (141) expresionAritmetica -> . VAR ASIGNACION numero masTerminos EOL
    (142) expresionAritmetica -> . VAR ASIGNACION VAR masTerminos EOL
    (46) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (47) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (48) if -> . if else
    (49) if -> . if elseif else
    (50) if -> . if elseif
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    VAR             shift and go to state 13
    ECHO            shift and go to state 14
    COMNT           shift and go to state 18
    FUNCTION        shift and go to state 19
    READLINE        shift and go to state 20
    CLASE           shift and go to state 21
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    sentencia                      shift and go to state 1
    asignacion                     shift and go to state 2
    echo                           shift and go to state 3
    estructuracontrol              shift and go to state 4
    comentario                     shift and go to state 5
    declaracion_numeros            shift and go to state 6
    array                          shift and go to state 7
    funcion                        shift and go to state 8
    readline                       shift and go to state 9
    ingreso_datos                  shift and go to state 10
    objeto                         shift and go to state 11
    expresionAritmetica            shift and go to state 12
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> asignacion .

    $end            reduce using rule 1 (sentencia -> asignacion .)


state 3

    (2) sentencia -> echo .
    (12) sentencia -> echo . SALTO

    $end            reduce using rule 2 (sentencia -> echo .)
    SALTO           shift and go to state 25


state 4

    (3) sentencia -> estructuracontrol .

    $end            reduce using rule 3 (sentencia -> estructuracontrol .)


state 5

    (4) sentencia -> comentario .

    $end            reduce using rule 4 (sentencia -> comentario .)


state 6

    (5) sentencia -> declaracion_numeros .

    $end            reduce using rule 5 (sentencia -> declaracion_numeros .)


state 7

    (6) sentencia -> array .

    $end            reduce using rule 6 (sentencia -> array .)


state 8

    (7) sentencia -> funcion .

    $end            reduce using rule 7 (sentencia -> funcion .)


state 9

    (8) sentencia -> readline .

    $end            reduce using rule 8 (sentencia -> readline .)


state 10

    (9) sentencia -> ingreso_datos .

    $end            reduce using rule 9 (sentencia -> ingreso_datos .)


state 11

    (10) sentencia -> objeto .

    $end            reduce using rule 10 (sentencia -> objeto .)


state 12

    (11) sentencia -> expresionAritmetica .

    $end            reduce using rule 11 (sentencia -> expresionAritmetica .)


state 13

    (13) asignacion -> VAR . ASIGNACION valor EOL
    (89) declaracion_numeros -> VAR . ASIGNACION numero EOL
    (90) array -> VAR . ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (117) ingreso_datos -> VAR . ASIGNACION readline
    (141) expresionAritmetica -> VAR . ASIGNACION numero masTerminos EOL
    (142) expresionAritmetica -> VAR . ASIGNACION VAR masTerminos EOL

    ASIGNACION      shift and go to state 26


state 14

    (14) echo -> ECHO . valores EOL
    (15) echo -> ECHO . valores EOL SALTO
    (16) valores -> . valor
    (17) valores -> . valor COMA valores
    (18) valor -> . ENTERO
    (19) valor -> . FLOTANTE
    (20) valor -> . BOOLEANO
    (21) valor -> . CADENA
    (22) valor -> . VAR
    (23) valor -> . VARIABLE_ARRAY
    (24) valor -> . operacion
    (25) valor -> . argumentologico
    (26) valor -> . array_index
    (39) operacion -> . ENTERO
    (40) operacion -> . FLOTANTE
    (41) operacion -> . ENTERO operador operacion
    (42) operacion -> . FLOTANTE operador operacion
    (61) argumentologico -> . VAR operador_logico VAR
    (62) argumentologico -> . numero operador_logico numero
    (63) argumentologico -> . VAR operador_logico numero
    (64) argumentologico -> . VAR IGUAL BOOLEANO
    (65) argumentologico -> . VAR IGUAL CADENA
    (66) argumentologico -> . VAR DIFERENTE BOOLEANO
    (67) argumentologico -> . VAR DIFERENTE CADENA
    (68) argumentologico -> . numero operador_logico VAR
    (69) argumentologico -> . BOOLEANO IGUAL VAR
    (70) argumentologico -> . CADENA IGUAL VAR
    (71) argumentologico -> . CADENA IGUAL CADENA
    (72) argumentologico -> . CADENA DIFERENTE VAR
    (73) argumentologico -> . CADENA DIFERENTE CADENA
    (74) argumentologico -> . BOOLEANO
    (36) array_index -> . VAR multi_dimensiones
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    BOOLEANO        shift and go to state 31
    CADENA          shift and go to state 32
    VAR             shift and go to state 33
    VARIABLE_ARRAY  shift and go to state 34

    valores                        shift and go to state 27
    valor                          shift and go to state 28
    operacion                      shift and go to state 35
    argumentologico                shift and go to state 36
    array_index                    shift and go to state 37
    numero                         shift and go to state 38

state 15

    (43) estructuracontrol -> while .

    $end            reduce using rule 43 (estructuracontrol -> while .)
    ECHO            reduce using rule 43 (estructuracontrol -> while .)
    VAR             reduce using rule 43 (estructuracontrol -> while .)
    COMNT           reduce using rule 43 (estructuracontrol -> while .)
    WHILE           reduce using rule 43 (estructuracontrol -> while .)
    IF              reduce using rule 43 (estructuracontrol -> while .)
    FOR             reduce using rule 43 (estructuracontrol -> while .)
    RBRACE          reduce using rule 43 (estructuracontrol -> while .)
    RETURN          reduce using rule 43 (estructuracontrol -> while .)
    SALTO           reduce using rule 43 (estructuracontrol -> while .)


state 16

    (44) estructuracontrol -> if .
    (48) if -> if . else
    (49) if -> if . elseif else
    (50) if -> if . elseif
    (53) else -> . ELSE LBRACE lineas RBRACE
    (51) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (52) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif

    $end            reduce using rule 44 (estructuracontrol -> if .)
    ECHO            reduce using rule 44 (estructuracontrol -> if .)
    VAR             reduce using rule 44 (estructuracontrol -> if .)
    COMNT           reduce using rule 44 (estructuracontrol -> if .)
    WHILE           reduce using rule 44 (estructuracontrol -> if .)
    IF              reduce using rule 44 (estructuracontrol -> if .)
    FOR             reduce using rule 44 (estructuracontrol -> if .)
    RBRACE          reduce using rule 44 (estructuracontrol -> if .)
    RETURN          reduce using rule 44 (estructuracontrol -> if .)
    SALTO           reduce using rule 44 (estructuracontrol -> if .)
    ELSE            shift and go to state 41
    ELSEIF          shift and go to state 42

    else                           shift and go to state 39
    elseif                         shift and go to state 40

state 17

    (45) estructuracontrol -> for .

    $end            reduce using rule 45 (estructuracontrol -> for .)
    ECHO            reduce using rule 45 (estructuracontrol -> for .)
    VAR             reduce using rule 45 (estructuracontrol -> for .)
    COMNT           reduce using rule 45 (estructuracontrol -> for .)
    WHILE           reduce using rule 45 (estructuracontrol -> for .)
    IF              reduce using rule 45 (estructuracontrol -> for .)
    FOR             reduce using rule 45 (estructuracontrol -> for .)
    RBRACE          reduce using rule 45 (estructuracontrol -> for .)
    RETURN          reduce using rule 45 (estructuracontrol -> for .)
    SALTO           reduce using rule 45 (estructuracontrol -> for .)


state 18

    (83) comentario -> COMNT .

    $end            reduce using rule 83 (comentario -> COMNT .)
    ECHO            reduce using rule 83 (comentario -> COMNT .)
    VAR             reduce using rule 83 (comentario -> COMNT .)
    COMNT           reduce using rule 83 (comentario -> COMNT .)
    WHILE           reduce using rule 83 (comentario -> COMNT .)
    IF              reduce using rule 83 (comentario -> COMNT .)
    FOR             reduce using rule 83 (comentario -> COMNT .)
    RBRACE          reduce using rule 83 (comentario -> COMNT .)
    RETURN          reduce using rule 83 (comentario -> COMNT .)
    SALTO           reduce using rule 83 (comentario -> COMNT .)


state 19

    (108) funcion -> FUNCTION . tipo_funcion LBRACE final_funcion RBRACE
    (109) tipo_funcion -> . FUNCION
    (110) tipo_funcion -> . VARIABLE_FUNCION

    FUNCION         shift and go to state 44
    VARIABLE_FUNCION shift and go to state 45

    tipo_funcion                   shift and go to state 43

state 20

    (116) readline -> READLINE . LPAREN CADENA RPAREN EOL

    LPAREN          shift and go to state 46


state 21

    (118) objeto -> CLASE . OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
    (119) objeto -> CLASE . OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    OBJETO          shift and go to state 47


state 22

    (46) while -> WHILE . LPAREN condicion RPAREN LBRACE lineas RBRACE

    LPAREN          shift and go to state 48


state 23

    (47) if -> IF . LPAREN condicion RPAREN LBRACE lineas RBRACE

    LPAREN          shift and go to state 49


state 24

    (128) for -> FOR . LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> FOR . LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> FOR . LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    LPAREN          shift and go to state 50


state 25

    (12) sentencia -> echo SALTO .

    $end            reduce using rule 12 (sentencia -> echo SALTO .)


state 26

    (13) asignacion -> VAR ASIGNACION . valor EOL
    (89) declaracion_numeros -> VAR ASIGNACION . numero EOL
    (90) array -> VAR ASIGNACION . ARRAY LPAREN elementos RPAREN EOL
    (117) ingreso_datos -> VAR ASIGNACION . readline
    (141) expresionAritmetica -> VAR ASIGNACION . numero masTerminos EOL
    (142) expresionAritmetica -> VAR ASIGNACION . VAR masTerminos EOL
    (18) valor -> . ENTERO
    (19) valor -> . FLOTANTE
    (20) valor -> . BOOLEANO
    (21) valor -> . CADENA
    (22) valor -> . VAR
    (23) valor -> . VARIABLE_ARRAY
    (24) valor -> . operacion
    (25) valor -> . argumentologico
    (26) valor -> . array_index
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE
    (116) readline -> . READLINE LPAREN CADENA RPAREN EOL
    (39) operacion -> . ENTERO
    (40) operacion -> . FLOTANTE
    (41) operacion -> . ENTERO operador operacion
    (42) operacion -> . FLOTANTE operador operacion
    (61) argumentologico -> . VAR operador_logico VAR
    (62) argumentologico -> . numero operador_logico numero
    (63) argumentologico -> . VAR operador_logico numero
    (64) argumentologico -> . VAR IGUAL BOOLEANO
    (65) argumentologico -> . VAR IGUAL CADENA
    (66) argumentologico -> . VAR DIFERENTE BOOLEANO
    (67) argumentologico -> . VAR DIFERENTE CADENA
    (68) argumentologico -> . numero operador_logico VAR
    (69) argumentologico -> . BOOLEANO IGUAL VAR
    (70) argumentologico -> . CADENA IGUAL VAR
    (71) argumentologico -> . CADENA IGUAL CADENA
    (72) argumentologico -> . CADENA DIFERENTE VAR
    (73) argumentologico -> . CADENA DIFERENTE CADENA
    (74) argumentologico -> . BOOLEANO
    (36) array_index -> . VAR multi_dimensiones

    ARRAY           shift and go to state 54
    VAR             shift and go to state 51
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 31
    CADENA          shift and go to state 32
    VARIABLE_ARRAY  shift and go to state 34
    READLINE        shift and go to state 20

    valor                          shift and go to state 52
    numero                         shift and go to state 53
    readline                       shift and go to state 55
    operacion                      shift and go to state 35
    argumentologico                shift and go to state 36
    array_index                    shift and go to state 37

state 27

    (14) echo -> ECHO valores . EOL
    (15) echo -> ECHO valores . EOL SALTO

    EOL             shift and go to state 58


state 28

    (16) valores -> valor .
    (17) valores -> valor . COMA valores

    EOL             reduce using rule 16 (valores -> valor .)
    COMA            shift and go to state 59


state 29

    (18) valor -> ENTERO .
    (39) operacion -> ENTERO .
    (41) operacion -> ENTERO . operador operacion
    (75) numero -> ENTERO .
    (84) operador -> . SUMA
    (85) operador -> . RESTA
    (86) operador -> . MULT
    (87) operador -> . DIV
    (88) operador -> . POT

  ! reduce/reduce conflict for COMA resolved using rule 18 (valor -> ENTERO .)
  ! reduce/reduce conflict for EOL resolved using rule 18 (valor -> ENTERO .)
    COMA            reduce using rule 18 (valor -> ENTERO .)
    EOL             reduce using rule 18 (valor -> ENTERO .)
    IGUAL           reduce using rule 75 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 75 (numero -> ENTERO .)
    MENOR           reduce using rule 75 (numero -> ENTERO .)
    MAYOR           reduce using rule 75 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 75 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 75 (numero -> ENTERO .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

  ! COMA            [ reduce using rule 39 (operacion -> ENTERO .) ]
  ! EOL             [ reduce using rule 39 (operacion -> ENTERO .) ]

    operador                       shift and go to state 60

state 30

    (19) valor -> FLOTANTE .
    (40) operacion -> FLOTANTE .
    (42) operacion -> FLOTANTE . operador operacion
    (76) numero -> FLOTANTE .
    (84) operador -> . SUMA
    (85) operador -> . RESTA
    (86) operador -> . MULT
    (87) operador -> . DIV
    (88) operador -> . POT

  ! reduce/reduce conflict for COMA resolved using rule 19 (valor -> FLOTANTE .)
  ! reduce/reduce conflict for EOL resolved using rule 19 (valor -> FLOTANTE .)
    COMA            reduce using rule 19 (valor -> FLOTANTE .)
    EOL             reduce using rule 19 (valor -> FLOTANTE .)
    IGUAL           reduce using rule 76 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 76 (numero -> FLOTANTE .)
    MENOR           reduce using rule 76 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 76 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 76 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 76 (numero -> FLOTANTE .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

  ! COMA            [ reduce using rule 40 (operacion -> FLOTANTE .) ]
  ! EOL             [ reduce using rule 40 (operacion -> FLOTANTE .) ]

    operador                       shift and go to state 66

state 31

    (20) valor -> BOOLEANO .
    (69) argumentologico -> BOOLEANO . IGUAL VAR
    (74) argumentologico -> BOOLEANO .

  ! reduce/reduce conflict for COMA resolved using rule 20 (valor -> BOOLEANO .)
  ! reduce/reduce conflict for EOL resolved using rule 20 (valor -> BOOLEANO .)
    COMA            reduce using rule 20 (valor -> BOOLEANO .)
    EOL             reduce using rule 20 (valor -> BOOLEANO .)
    IGUAL           shift and go to state 67

  ! COMA            [ reduce using rule 74 (argumentologico -> BOOLEANO .) ]
  ! EOL             [ reduce using rule 74 (argumentologico -> BOOLEANO .) ]


state 32

    (21) valor -> CADENA .
    (70) argumentologico -> CADENA . IGUAL VAR
    (71) argumentologico -> CADENA . IGUAL CADENA
    (72) argumentologico -> CADENA . DIFERENTE VAR
    (73) argumentologico -> CADENA . DIFERENTE CADENA

    COMA            reduce using rule 21 (valor -> CADENA .)
    EOL             reduce using rule 21 (valor -> CADENA .)
    IGUAL           shift and go to state 68
    DIFERENTE       shift and go to state 69


state 33

    (22) valor -> VAR .
    (61) argumentologico -> VAR . operador_logico VAR
    (63) argumentologico -> VAR . operador_logico numero
    (64) argumentologico -> VAR . IGUAL BOOLEANO
    (65) argumentologico -> VAR . IGUAL CADENA
    (66) argumentologico -> VAR . DIFERENTE BOOLEANO
    (67) argumentologico -> VAR . DIFERENTE CADENA
    (36) array_index -> VAR . multi_dimensiones
    (77) operador_logico -> . IGUAL
    (78) operador_logico -> . DIFERENTE
    (79) operador_logico -> . MENOR
    (80) operador_logico -> . MAYOR
    (81) operador_logico -> . MENOR_IGUAL
    (82) operador_logico -> . MAYOR_IGUAL
    (37) multi_dimensiones -> . LBRACKET clave_dic RBRACKET
    (38) multi_dimensiones -> . LBRACKET clave_dic RBRACKET multi_dimensiones

    COMA            reduce using rule 22 (valor -> VAR .)
    EOL             reduce using rule 22 (valor -> VAR .)
    IGUAL           shift and go to state 71
    DIFERENTE       shift and go to state 72
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77
    LBRACKET        shift and go to state 78

    operador_logico                shift and go to state 70
    multi_dimensiones              shift and go to state 73

state 34

    (23) valor -> VARIABLE_ARRAY .

    COMA            reduce using rule 23 (valor -> VARIABLE_ARRAY .)
    EOL             reduce using rule 23 (valor -> VARIABLE_ARRAY .)


state 35

    (24) valor -> operacion .

    COMA            reduce using rule 24 (valor -> operacion .)
    EOL             reduce using rule 24 (valor -> operacion .)


state 36

    (25) valor -> argumentologico .

    COMA            reduce using rule 25 (valor -> argumentologico .)
    EOL             reduce using rule 25 (valor -> argumentologico .)


state 37

    (26) valor -> array_index .

    COMA            reduce using rule 26 (valor -> array_index .)
    EOL             reduce using rule 26 (valor -> array_index .)


state 38

    (62) argumentologico -> numero . operador_logico numero
    (68) argumentologico -> numero . operador_logico VAR
    (77) operador_logico -> . IGUAL
    (78) operador_logico -> . DIFERENTE
    (79) operador_logico -> . MENOR
    (80) operador_logico -> . MAYOR
    (81) operador_logico -> . MENOR_IGUAL
    (82) operador_logico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 80
    DIFERENTE       shift and go to state 81
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77

    operador_logico                shift and go to state 79

state 39

    (48) if -> if else .

    ELSE            reduce using rule 48 (if -> if else .)
    ELSEIF          reduce using rule 48 (if -> if else .)
    $end            reduce using rule 48 (if -> if else .)
    ECHO            reduce using rule 48 (if -> if else .)
    VAR             reduce using rule 48 (if -> if else .)
    COMNT           reduce using rule 48 (if -> if else .)
    WHILE           reduce using rule 48 (if -> if else .)
    IF              reduce using rule 48 (if -> if else .)
    FOR             reduce using rule 48 (if -> if else .)
    RBRACE          reduce using rule 48 (if -> if else .)
    RETURN          reduce using rule 48 (if -> if else .)
    SALTO           reduce using rule 48 (if -> if else .)


state 40

    (49) if -> if elseif . else
    (50) if -> if elseif .
    (53) else -> . ELSE LBRACE lineas RBRACE

  ! shift/reduce conflict for ELSE resolved as shift
    ELSEIF          reduce using rule 50 (if -> if elseif .)
    $end            reduce using rule 50 (if -> if elseif .)
    ECHO            reduce using rule 50 (if -> if elseif .)
    VAR             reduce using rule 50 (if -> if elseif .)
    COMNT           reduce using rule 50 (if -> if elseif .)
    WHILE           reduce using rule 50 (if -> if elseif .)
    IF              reduce using rule 50 (if -> if elseif .)
    FOR             reduce using rule 50 (if -> if elseif .)
    RBRACE          reduce using rule 50 (if -> if elseif .)
    RETURN          reduce using rule 50 (if -> if elseif .)
    SALTO           reduce using rule 50 (if -> if elseif .)
    ELSE            shift and go to state 41

  ! ELSE            [ reduce using rule 50 (if -> if elseif .) ]

    else                           shift and go to state 82

state 41

    (53) else -> ELSE . LBRACE lineas RBRACE

    LBRACE          shift and go to state 83


state 42

    (51) elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE lineas RBRACE
    (52) elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE lineas RBRACE elseif

    LPAREN          shift and go to state 84


state 43

    (108) funcion -> FUNCTION tipo_funcion . LBRACE final_funcion RBRACE

    LBRACE          shift and go to state 85


state 44

    (109) tipo_funcion -> FUNCION .

    LBRACE          reduce using rule 109 (tipo_funcion -> FUNCION .)


state 45

    (110) tipo_funcion -> VARIABLE_FUNCION .

    LBRACE          reduce using rule 110 (tipo_funcion -> VARIABLE_FUNCION .)


state 46

    (116) readline -> READLINE LPAREN . CADENA RPAREN EOL

    CADENA          shift and go to state 86


state 47

    (118) objeto -> CLASE OBJETO . LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
    (119) objeto -> CLASE OBJETO . EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    LBRACE          shift and go to state 87
    EXTENDS         shift and go to state 88


state 48

    (46) while -> WHILE LPAREN . condicion RPAREN LBRACE lineas RBRACE
    (54) condicion -> . argumentologico
    (55) condicion -> . argumentologico conector_logico condicion
    (61) argumentologico -> . VAR operador_logico VAR
    (62) argumentologico -> . numero operador_logico numero
    (63) argumentologico -> . VAR operador_logico numero
    (64) argumentologico -> . VAR IGUAL BOOLEANO
    (65) argumentologico -> . VAR IGUAL CADENA
    (66) argumentologico -> . VAR DIFERENTE BOOLEANO
    (67) argumentologico -> . VAR DIFERENTE CADENA
    (68) argumentologico -> . numero operador_logico VAR
    (69) argumentologico -> . BOOLEANO IGUAL VAR
    (70) argumentologico -> . CADENA IGUAL VAR
    (71) argumentologico -> . CADENA IGUAL CADENA
    (72) argumentologico -> . CADENA DIFERENTE VAR
    (73) argumentologico -> . CADENA DIFERENTE CADENA
    (74) argumentologico -> . BOOLEANO
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    VAR             shift and go to state 91
    BOOLEANO        shift and go to state 92
    CADENA          shift and go to state 93
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    condicion                      shift and go to state 89
    argumentologico                shift and go to state 90
    numero                         shift and go to state 38

state 49

    (47) if -> IF LPAREN . condicion RPAREN LBRACE lineas RBRACE
    (54) condicion -> . argumentologico
    (55) condicion -> . argumentologico conector_logico condicion
    (61) argumentologico -> . VAR operador_logico VAR
    (62) argumentologico -> . numero operador_logico numero
    (63) argumentologico -> . VAR operador_logico numero
    (64) argumentologico -> . VAR IGUAL BOOLEANO
    (65) argumentologico -> . VAR IGUAL CADENA
    (66) argumentologico -> . VAR DIFERENTE BOOLEANO
    (67) argumentologico -> . VAR DIFERENTE CADENA
    (68) argumentologico -> . numero operador_logico VAR
    (69) argumentologico -> . BOOLEANO IGUAL VAR
    (70) argumentologico -> . CADENA IGUAL VAR
    (71) argumentologico -> . CADENA IGUAL CADENA
    (72) argumentologico -> . CADENA DIFERENTE VAR
    (73) argumentologico -> . CADENA DIFERENTE CADENA
    (74) argumentologico -> . BOOLEANO
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    VAR             shift and go to state 91
    BOOLEANO        shift and go to state 92
    CADENA          shift and go to state 93
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    condicion                      shift and go to state 96
    argumentologico                shift and go to state 90
    numero                         shift and go to state 38

state 50

    (128) for -> FOR LPAREN . asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> FOR LPAREN . asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> FOR LPAREN . asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE
    (13) asignacion -> . VAR ASIGNACION valor EOL

    VAR             shift and go to state 98

    asignacion                     shift and go to state 97

state 51

    (142) expresionAritmetica -> VAR ASIGNACION VAR . masTerminos EOL
    (22) valor -> VAR .
    (61) argumentologico -> VAR . operador_logico VAR
    (63) argumentologico -> VAR . operador_logico numero
    (64) argumentologico -> VAR . IGUAL BOOLEANO
    (65) argumentologico -> VAR . IGUAL CADENA
    (66) argumentologico -> VAR . DIFERENTE BOOLEANO
    (67) argumentologico -> VAR . DIFERENTE CADENA
    (36) array_index -> VAR . multi_dimensiones
    (145) masTerminos -> . termino
    (146) masTerminos -> . termino masTerminos
    (77) operador_logico -> . IGUAL
    (78) operador_logico -> . DIFERENTE
    (79) operador_logico -> . MENOR
    (80) operador_logico -> . MAYOR
    (81) operador_logico -> . MENOR_IGUAL
    (82) operador_logico -> . MAYOR_IGUAL
    (37) multi_dimensiones -> . LBRACKET clave_dic RBRACKET
    (38) multi_dimensiones -> . LBRACKET clave_dic RBRACKET multi_dimensiones
    (143) termino -> . operador numero
    (144) termino -> . operador VAR
    (84) operador -> . SUMA
    (85) operador -> . RESTA
    (86) operador -> . MULT
    (87) operador -> . DIV
    (88) operador -> . POT

    EOL             reduce using rule 22 (valor -> VAR .)
    IGUAL           shift and go to state 71
    DIFERENTE       shift and go to state 72
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77
    LBRACKET        shift and go to state 78
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

    masTerminos                    shift and go to state 99
    operador_logico                shift and go to state 70
    multi_dimensiones              shift and go to state 73
    termino                        shift and go to state 100
    operador                       shift and go to state 101

state 52

    (13) asignacion -> VAR ASIGNACION valor . EOL

    EOL             shift and go to state 102


state 53

    (89) declaracion_numeros -> VAR ASIGNACION numero . EOL
    (141) expresionAritmetica -> VAR ASIGNACION numero . masTerminos EOL
    (62) argumentologico -> numero . operador_logico numero
    (68) argumentologico -> numero . operador_logico VAR
    (145) masTerminos -> . termino
    (146) masTerminos -> . termino masTerminos
    (77) operador_logico -> . IGUAL
    (78) operador_logico -> . DIFERENTE
    (79) operador_logico -> . MENOR
    (80) operador_logico -> . MAYOR
    (81) operador_logico -> . MENOR_IGUAL
    (82) operador_logico -> . MAYOR_IGUAL
    (143) termino -> . operador numero
    (144) termino -> . operador VAR
    (84) operador -> . SUMA
    (85) operador -> . RESTA
    (86) operador -> . MULT
    (87) operador -> . DIV
    (88) operador -> . POT

    EOL             shift and go to state 103
    IGUAL           shift and go to state 80
    DIFERENTE       shift and go to state 81
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

    masTerminos                    shift and go to state 104
    operador_logico                shift and go to state 79
    termino                        shift and go to state 100
    operador                       shift and go to state 101

state 54

    (90) array -> VAR ASIGNACION ARRAY . LPAREN elementos RPAREN EOL

    LPAREN          shift and go to state 105


state 55

    (117) ingreso_datos -> VAR ASIGNACION readline .

    $end            reduce using rule 117 (ingreso_datos -> VAR ASIGNACION readline .)


state 56

    (18) valor -> ENTERO .
    (75) numero -> ENTERO .
    (39) operacion -> ENTERO .
    (41) operacion -> ENTERO . operador operacion
    (84) operador -> . SUMA
    (85) operador -> . RESTA
    (86) operador -> . MULT
    (87) operador -> . DIV
    (88) operador -> . POT

  ! reduce/reduce conflict for EOL resolved using rule 18 (valor -> ENTERO .)
  ! reduce/reduce conflict for EOL resolved using rule 18 (valor -> ENTERO .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
    EOL             reduce using rule 18 (valor -> ENTERO .)
    IGUAL           reduce using rule 75 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 75 (numero -> ENTERO .)
    MENOR           reduce using rule 75 (numero -> ENTERO .)
    MAYOR           reduce using rule 75 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 75 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 75 (numero -> ENTERO .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

  ! EOL             [ reduce using rule 75 (numero -> ENTERO .) ]
  ! SUMA            [ reduce using rule 75 (numero -> ENTERO .) ]
  ! RESTA           [ reduce using rule 75 (numero -> ENTERO .) ]
  ! MULT            [ reduce using rule 75 (numero -> ENTERO .) ]
  ! DIV             [ reduce using rule 75 (numero -> ENTERO .) ]
  ! POT             [ reduce using rule 75 (numero -> ENTERO .) ]
  ! EOL             [ reduce using rule 39 (operacion -> ENTERO .) ]

    operador                       shift and go to state 60

state 57

    (19) valor -> FLOTANTE .
    (76) numero -> FLOTANTE .
    (40) operacion -> FLOTANTE .
    (42) operacion -> FLOTANTE . operador operacion
    (84) operador -> . SUMA
    (85) operador -> . RESTA
    (86) operador -> . MULT
    (87) operador -> . DIV
    (88) operador -> . POT

  ! reduce/reduce conflict for EOL resolved using rule 19 (valor -> FLOTANTE .)
  ! reduce/reduce conflict for EOL resolved using rule 19 (valor -> FLOTANTE .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
    EOL             reduce using rule 19 (valor -> FLOTANTE .)
    IGUAL           reduce using rule 76 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 76 (numero -> FLOTANTE .)
    MENOR           reduce using rule 76 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 76 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 76 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 76 (numero -> FLOTANTE .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

  ! EOL             [ reduce using rule 76 (numero -> FLOTANTE .) ]
  ! SUMA            [ reduce using rule 76 (numero -> FLOTANTE .) ]
  ! RESTA           [ reduce using rule 76 (numero -> FLOTANTE .) ]
  ! MULT            [ reduce using rule 76 (numero -> FLOTANTE .) ]
  ! DIV             [ reduce using rule 76 (numero -> FLOTANTE .) ]
  ! POT             [ reduce using rule 76 (numero -> FLOTANTE .) ]
  ! EOL             [ reduce using rule 40 (operacion -> FLOTANTE .) ]

    operador                       shift and go to state 66

state 58

    (14) echo -> ECHO valores EOL .
    (15) echo -> ECHO valores EOL . SALTO

  ! shift/reduce conflict for SALTO resolved as shift
    $end            reduce using rule 14 (echo -> ECHO valores EOL .)
    ECHO            reduce using rule 14 (echo -> ECHO valores EOL .)
    VAR             reduce using rule 14 (echo -> ECHO valores EOL .)
    COMNT           reduce using rule 14 (echo -> ECHO valores EOL .)
    WHILE           reduce using rule 14 (echo -> ECHO valores EOL .)
    IF              reduce using rule 14 (echo -> ECHO valores EOL .)
    FOR             reduce using rule 14 (echo -> ECHO valores EOL .)
    RBRACE          reduce using rule 14 (echo -> ECHO valores EOL .)
    RETURN          reduce using rule 14 (echo -> ECHO valores EOL .)
    SALTO           shift and go to state 106

  ! SALTO           [ reduce using rule 14 (echo -> ECHO valores EOL .) ]


state 59

    (17) valores -> valor COMA . valores
    (16) valores -> . valor
    (17) valores -> . valor COMA valores
    (18) valor -> . ENTERO
    (19) valor -> . FLOTANTE
    (20) valor -> . BOOLEANO
    (21) valor -> . CADENA
    (22) valor -> . VAR
    (23) valor -> . VARIABLE_ARRAY
    (24) valor -> . operacion
    (25) valor -> . argumentologico
    (26) valor -> . array_index
    (39) operacion -> . ENTERO
    (40) operacion -> . FLOTANTE
    (41) operacion -> . ENTERO operador operacion
    (42) operacion -> . FLOTANTE operador operacion
    (61) argumentologico -> . VAR operador_logico VAR
    (62) argumentologico -> . numero operador_logico numero
    (63) argumentologico -> . VAR operador_logico numero
    (64) argumentologico -> . VAR IGUAL BOOLEANO
    (65) argumentologico -> . VAR IGUAL CADENA
    (66) argumentologico -> . VAR DIFERENTE BOOLEANO
    (67) argumentologico -> . VAR DIFERENTE CADENA
    (68) argumentologico -> . numero operador_logico VAR
    (69) argumentologico -> . BOOLEANO IGUAL VAR
    (70) argumentologico -> . CADENA IGUAL VAR
    (71) argumentologico -> . CADENA IGUAL CADENA
    (72) argumentologico -> . CADENA DIFERENTE VAR
    (73) argumentologico -> . CADENA DIFERENTE CADENA
    (74) argumentologico -> . BOOLEANO
    (36) array_index -> . VAR multi_dimensiones
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    BOOLEANO        shift and go to state 31
    CADENA          shift and go to state 32
    VAR             shift and go to state 33
    VARIABLE_ARRAY  shift and go to state 34

    valor                          shift and go to state 28
    valores                        shift and go to state 107
    operacion                      shift and go to state 35
    argumentologico                shift and go to state 36
    array_index                    shift and go to state 37
    numero                         shift and go to state 38

state 60

    (41) operacion -> ENTERO operador . operacion
    (39) operacion -> . ENTERO
    (40) operacion -> . FLOTANTE
    (41) operacion -> . ENTERO operador operacion
    (42) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 108
    FLOTANTE        shift and go to state 110

    operacion                      shift and go to state 109

state 61

    (84) operador -> SUMA .

    ENTERO          reduce using rule 84 (operador -> SUMA .)
    FLOTANTE        reduce using rule 84 (operador -> SUMA .)
    VAR             reduce using rule 84 (operador -> SUMA .)


state 62

    (85) operador -> RESTA .

    ENTERO          reduce using rule 85 (operador -> RESTA .)
    FLOTANTE        reduce using rule 85 (operador -> RESTA .)
    VAR             reduce using rule 85 (operador -> RESTA .)


state 63

    (86) operador -> MULT .

    ENTERO          reduce using rule 86 (operador -> MULT .)
    FLOTANTE        reduce using rule 86 (operador -> MULT .)
    VAR             reduce using rule 86 (operador -> MULT .)


state 64

    (87) operador -> DIV .

    ENTERO          reduce using rule 87 (operador -> DIV .)
    FLOTANTE        reduce using rule 87 (operador -> DIV .)
    VAR             reduce using rule 87 (operador -> DIV .)


state 65

    (88) operador -> POT .

    ENTERO          reduce using rule 88 (operador -> POT .)
    FLOTANTE        reduce using rule 88 (operador -> POT .)
    VAR             reduce using rule 88 (operador -> POT .)


state 66

    (42) operacion -> FLOTANTE operador . operacion
    (39) operacion -> . ENTERO
    (40) operacion -> . FLOTANTE
    (41) operacion -> . ENTERO operador operacion
    (42) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 108
    FLOTANTE        shift and go to state 110

    operacion                      shift and go to state 111

state 67

    (69) argumentologico -> BOOLEANO IGUAL . VAR

    VAR             shift and go to state 112


state 68

    (70) argumentologico -> CADENA IGUAL . VAR
    (71) argumentologico -> CADENA IGUAL . CADENA

    VAR             shift and go to state 114
    CADENA          shift and go to state 113


state 69

    (72) argumentologico -> CADENA DIFERENTE . VAR
    (73) argumentologico -> CADENA DIFERENTE . CADENA

    VAR             shift and go to state 116
    CADENA          shift and go to state 115


state 70

    (61) argumentologico -> VAR operador_logico . VAR
    (63) argumentologico -> VAR operador_logico . numero
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    VAR             shift and go to state 117
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    numero                         shift and go to state 118

state 71

    (64) argumentologico -> VAR IGUAL . BOOLEANO
    (65) argumentologico -> VAR IGUAL . CADENA
    (77) operador_logico -> IGUAL .

    BOOLEANO        shift and go to state 119
    CADENA          shift and go to state 120
    VAR             reduce using rule 77 (operador_logico -> IGUAL .)
    ENTERO          reduce using rule 77 (operador_logico -> IGUAL .)
    FLOTANTE        reduce using rule 77 (operador_logico -> IGUAL .)


state 72

    (66) argumentologico -> VAR DIFERENTE . BOOLEANO
    (67) argumentologico -> VAR DIFERENTE . CADENA
    (78) operador_logico -> DIFERENTE .

    BOOLEANO        shift and go to state 121
    CADENA          shift and go to state 122
    VAR             reduce using rule 78 (operador_logico -> DIFERENTE .)
    ENTERO          reduce using rule 78 (operador_logico -> DIFERENTE .)
    FLOTANTE        reduce using rule 78 (operador_logico -> DIFERENTE .)


state 73

    (36) array_index -> VAR multi_dimensiones .

    COMA            reduce using rule 36 (array_index -> VAR multi_dimensiones .)
    EOL             reduce using rule 36 (array_index -> VAR multi_dimensiones .)


state 74

    (79) operador_logico -> MENOR .

    VAR             reduce using rule 79 (operador_logico -> MENOR .)
    ENTERO          reduce using rule 79 (operador_logico -> MENOR .)
    FLOTANTE        reduce using rule 79 (operador_logico -> MENOR .)


state 75

    (80) operador_logico -> MAYOR .

    VAR             reduce using rule 80 (operador_logico -> MAYOR .)
    ENTERO          reduce using rule 80 (operador_logico -> MAYOR .)
    FLOTANTE        reduce using rule 80 (operador_logico -> MAYOR .)


state 76

    (81) operador_logico -> MENOR_IGUAL .

    VAR             reduce using rule 81 (operador_logico -> MENOR_IGUAL .)
    ENTERO          reduce using rule 81 (operador_logico -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 81 (operador_logico -> MENOR_IGUAL .)


state 77

    (82) operador_logico -> MAYOR_IGUAL .

    VAR             reduce using rule 82 (operador_logico -> MAYOR_IGUAL .)
    ENTERO          reduce using rule 82 (operador_logico -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 82 (operador_logico -> MAYOR_IGUAL .)


state 78

    (37) multi_dimensiones -> LBRACKET . clave_dic RBRACKET
    (38) multi_dimensiones -> LBRACKET . clave_dic RBRACKET multi_dimensiones
    (29) clave_dic -> . ENTERO
    (30) clave_dic -> . CADENA

    ENTERO          shift and go to state 124
    CADENA          shift and go to state 125

    clave_dic                      shift and go to state 123

state 79

    (62) argumentologico -> numero operador_logico . numero
    (68) argumentologico -> numero operador_logico . VAR
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    VAR             shift and go to state 127
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    numero                         shift and go to state 126

state 80

    (77) operador_logico -> IGUAL .

    VAR             reduce using rule 77 (operador_logico -> IGUAL .)
    ENTERO          reduce using rule 77 (operador_logico -> IGUAL .)
    FLOTANTE        reduce using rule 77 (operador_logico -> IGUAL .)


state 81

    (78) operador_logico -> DIFERENTE .

    VAR             reduce using rule 78 (operador_logico -> DIFERENTE .)
    ENTERO          reduce using rule 78 (operador_logico -> DIFERENTE .)
    FLOTANTE        reduce using rule 78 (operador_logico -> DIFERENTE .)


state 82

    (49) if -> if elseif else .

    ELSE            reduce using rule 49 (if -> if elseif else .)
    ELSEIF          reduce using rule 49 (if -> if elseif else .)
    $end            reduce using rule 49 (if -> if elseif else .)
    ECHO            reduce using rule 49 (if -> if elseif else .)
    VAR             reduce using rule 49 (if -> if elseif else .)
    COMNT           reduce using rule 49 (if -> if elseif else .)
    WHILE           reduce using rule 49 (if -> if elseif else .)
    IF              reduce using rule 49 (if -> if elseif else .)
    FOR             reduce using rule 49 (if -> if elseif else .)
    RBRACE          reduce using rule 49 (if -> if elseif else .)
    RETURN          reduce using rule 49 (if -> if elseif else .)
    SALTO           reduce using rule 49 (if -> if elseif else .)


state 83

    (53) else -> ELSE LBRACE . lineas RBRACE
    (139) lineas -> . linea
    (140) lineas -> . linea lineas
    (131) linea -> . echo
    (132) linea -> . ECHO CADENA EOL
    (133) linea -> . ECHO VAR EOL
    (134) linea -> . VAR ASIGNACION CADENA EOL
    (135) linea -> . estructuracontrol
    (136) linea -> . comentario
    (137) linea -> . declaracion_numeros
    (138) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (43) estructuracontrol -> . while
    (44) estructuracontrol -> . if
    (45) estructuracontrol -> . for
    (83) comentario -> . COMNT
    (89) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (90) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (46) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (47) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (48) if -> . if else
    (49) if -> . if elseif else
    (50) if -> . if elseif
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 131
    VAR             shift and go to state 132
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 128
    linea                          shift and go to state 129
    echo                           shift and go to state 130
    estructuracontrol              shift and go to state 133
    comentario                     shift and go to state 134
    declaracion_numeros            shift and go to state 135
    array                          shift and go to state 136
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 84

    (51) elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE lineas RBRACE
    (52) elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE lineas RBRACE elseif
    (54) condicion -> . argumentologico
    (55) condicion -> . argumentologico conector_logico condicion
    (61) argumentologico -> . VAR operador_logico VAR
    (62) argumentologico -> . numero operador_logico numero
    (63) argumentologico -> . VAR operador_logico numero
    (64) argumentologico -> . VAR IGUAL BOOLEANO
    (65) argumentologico -> . VAR IGUAL CADENA
    (66) argumentologico -> . VAR DIFERENTE BOOLEANO
    (67) argumentologico -> . VAR DIFERENTE CADENA
    (68) argumentologico -> . numero operador_logico VAR
    (69) argumentologico -> . BOOLEANO IGUAL VAR
    (70) argumentologico -> . CADENA IGUAL VAR
    (71) argumentologico -> . CADENA IGUAL CADENA
    (72) argumentologico -> . CADENA DIFERENTE VAR
    (73) argumentologico -> . CADENA DIFERENTE CADENA
    (74) argumentologico -> . BOOLEANO
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    VAR             shift and go to state 91
    BOOLEANO        shift and go to state 92
    CADENA          shift and go to state 93
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    condicion                      shift and go to state 137
    argumentologico                shift and go to state 90
    numero                         shift and go to state 38

state 85

    (108) funcion -> FUNCTION tipo_funcion LBRACE . final_funcion RBRACE
    (111) final_funcion -> . RETURN VAR EOL
    (112) final_funcion -> . lineas final_funcion
    (139) lineas -> . linea
    (140) lineas -> . linea lineas
    (131) linea -> . echo
    (132) linea -> . ECHO CADENA EOL
    (133) linea -> . ECHO VAR EOL
    (134) linea -> . VAR ASIGNACION CADENA EOL
    (135) linea -> . estructuracontrol
    (136) linea -> . comentario
    (137) linea -> . declaracion_numeros
    (138) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (43) estructuracontrol -> . while
    (44) estructuracontrol -> . if
    (45) estructuracontrol -> . for
    (83) comentario -> . COMNT
    (89) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (90) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (46) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (47) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (48) if -> . if else
    (49) if -> . if elseif else
    (50) if -> . if elseif
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    RETURN          shift and go to state 139
    ECHO            shift and go to state 131
    VAR             shift and go to state 132
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    final_funcion                  shift and go to state 138
    lineas                         shift and go to state 140
    linea                          shift and go to state 129
    echo                           shift and go to state 130
    estructuracontrol              shift and go to state 133
    comentario                     shift and go to state 134
    declaracion_numeros            shift and go to state 135
    array                          shift and go to state 136
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 86

    (116) readline -> READLINE LPAREN CADENA . RPAREN EOL

    RPAREN          shift and go to state 141


state 87

    (118) objeto -> CLASE OBJETO LBRACE . mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
    (123) mas_objetos -> . cuerpo_objeto
    (124) mas_objetos -> . cuerpo_objeto mas_objetos
    (120) cuerpo_objeto -> . PUBLIC VAR EOL
    (121) cuerpo_objeto -> . PUBLIC asignacion
    (122) cuerpo_objeto -> . PUBLIC funcion

    PUBLIC          shift and go to state 144

    mas_objetos                    shift and go to state 142
    cuerpo_objeto                  shift and go to state 143

state 88

    (119) objeto -> CLASE OBJETO EXTENDS . OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    OBJETO          shift and go to state 145


state 89

    (46) while -> WHILE LPAREN condicion . RPAREN LBRACE lineas RBRACE

    RPAREN          shift and go to state 146


state 90

    (54) condicion -> argumentologico .
    (55) condicion -> argumentologico . conector_logico condicion
    (57) conector_logico -> . AND
    (58) conector_logico -> . OR

    RPAREN          reduce using rule 54 (condicion -> argumentologico .)
    AND             shift and go to state 148
    OR              shift and go to state 149

    conector_logico                shift and go to state 147

state 91

    (61) argumentologico -> VAR . operador_logico VAR
    (63) argumentologico -> VAR . operador_logico numero
    (64) argumentologico -> VAR . IGUAL BOOLEANO
    (65) argumentologico -> VAR . IGUAL CADENA
    (66) argumentologico -> VAR . DIFERENTE BOOLEANO
    (67) argumentologico -> VAR . DIFERENTE CADENA
    (77) operador_logico -> . IGUAL
    (78) operador_logico -> . DIFERENTE
    (79) operador_logico -> . MENOR
    (80) operador_logico -> . MAYOR
    (81) operador_logico -> . MENOR_IGUAL
    (82) operador_logico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 71
    DIFERENTE       shift and go to state 72
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77

    operador_logico                shift and go to state 70

state 92

    (69) argumentologico -> BOOLEANO . IGUAL VAR
    (74) argumentologico -> BOOLEANO .

    IGUAL           shift and go to state 67
    AND             reduce using rule 74 (argumentologico -> BOOLEANO .)
    OR              reduce using rule 74 (argumentologico -> BOOLEANO .)
    RPAREN          reduce using rule 74 (argumentologico -> BOOLEANO .)
    EOL             reduce using rule 74 (argumentologico -> BOOLEANO .)


state 93

    (70) argumentologico -> CADENA . IGUAL VAR
    (71) argumentologico -> CADENA . IGUAL CADENA
    (72) argumentologico -> CADENA . DIFERENTE VAR
    (73) argumentologico -> CADENA . DIFERENTE CADENA

    IGUAL           shift and go to state 68
    DIFERENTE       shift and go to state 69


state 94

    (75) numero -> ENTERO .

    IGUAL           reduce using rule 75 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 75 (numero -> ENTERO .)
    MENOR           reduce using rule 75 (numero -> ENTERO .)
    MAYOR           reduce using rule 75 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 75 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 75 (numero -> ENTERO .)
    COMA            reduce using rule 75 (numero -> ENTERO .)
    EOL             reduce using rule 75 (numero -> ENTERO .)
    AND             reduce using rule 75 (numero -> ENTERO .)
    OR              reduce using rule 75 (numero -> ENTERO .)
    RPAREN          reduce using rule 75 (numero -> ENTERO .)
    SUMA            reduce using rule 75 (numero -> ENTERO .)
    RESTA           reduce using rule 75 (numero -> ENTERO .)
    MULT            reduce using rule 75 (numero -> ENTERO .)
    DIV             reduce using rule 75 (numero -> ENTERO .)
    POT             reduce using rule 75 (numero -> ENTERO .)


state 95

    (76) numero -> FLOTANTE .

    IGUAL           reduce using rule 76 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 76 (numero -> FLOTANTE .)
    MENOR           reduce using rule 76 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 76 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 76 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 76 (numero -> FLOTANTE .)
    COMA            reduce using rule 76 (numero -> FLOTANTE .)
    EOL             reduce using rule 76 (numero -> FLOTANTE .)
    AND             reduce using rule 76 (numero -> FLOTANTE .)
    OR              reduce using rule 76 (numero -> FLOTANTE .)
    RPAREN          reduce using rule 76 (numero -> FLOTANTE .)
    SUMA            reduce using rule 76 (numero -> FLOTANTE .)
    RESTA           reduce using rule 76 (numero -> FLOTANTE .)
    MULT            reduce using rule 76 (numero -> FLOTANTE .)
    DIV             reduce using rule 76 (numero -> FLOTANTE .)
    POT             reduce using rule 76 (numero -> FLOTANTE .)


state 96

    (47) if -> IF LPAREN condicion . RPAREN LBRACE lineas RBRACE

    RPAREN          shift and go to state 150


state 97

    (128) for -> FOR LPAREN asignacion . argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> FOR LPAREN asignacion . argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> FOR LPAREN asignacion . argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE
    (61) argumentologico -> . VAR operador_logico VAR
    (62) argumentologico -> . numero operador_logico numero
    (63) argumentologico -> . VAR operador_logico numero
    (64) argumentologico -> . VAR IGUAL BOOLEANO
    (65) argumentologico -> . VAR IGUAL CADENA
    (66) argumentologico -> . VAR DIFERENTE BOOLEANO
    (67) argumentologico -> . VAR DIFERENTE CADENA
    (68) argumentologico -> . numero operador_logico VAR
    (69) argumentologico -> . BOOLEANO IGUAL VAR
    (70) argumentologico -> . CADENA IGUAL VAR
    (71) argumentologico -> . CADENA IGUAL CADENA
    (72) argumentologico -> . CADENA DIFERENTE VAR
    (73) argumentologico -> . CADENA DIFERENTE CADENA
    (74) argumentologico -> . BOOLEANO
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    VAR             shift and go to state 91
    BOOLEANO        shift and go to state 92
    CADENA          shift and go to state 93
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    argumentologico                shift and go to state 151
    numero                         shift and go to state 38

state 98

    (13) asignacion -> VAR . ASIGNACION valor EOL

    ASIGNACION      shift and go to state 152


state 99

    (142) expresionAritmetica -> VAR ASIGNACION VAR masTerminos . EOL

    EOL             shift and go to state 153


state 100

    (145) masTerminos -> termino .
    (146) masTerminos -> termino . masTerminos
    (145) masTerminos -> . termino
    (146) masTerminos -> . termino masTerminos
    (143) termino -> . operador numero
    (144) termino -> . operador VAR
    (84) operador -> . SUMA
    (85) operador -> . RESTA
    (86) operador -> . MULT
    (87) operador -> . DIV
    (88) operador -> . POT

    EOL             reduce using rule 145 (masTerminos -> termino .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

    termino                        shift and go to state 100
    masTerminos                    shift and go to state 154
    operador                       shift and go to state 101

state 101

    (143) termino -> operador . numero
    (144) termino -> operador . VAR
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    VAR             shift and go to state 156
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    numero                         shift and go to state 155

state 102

    (13) asignacion -> VAR ASIGNACION valor EOL .

    $end            reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    VAR             reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    BOOLEANO        reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    CADENA          reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    ENTERO          reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    FLOTANTE        reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    PUBLIC          reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    RBRACE          reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)


state 103

    (89) declaracion_numeros -> VAR ASIGNACION numero EOL .

    $end            reduce using rule 89 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    ECHO            reduce using rule 89 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    VAR             reduce using rule 89 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    COMNT           reduce using rule 89 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    WHILE           reduce using rule 89 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    IF              reduce using rule 89 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    FOR             reduce using rule 89 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    RBRACE          reduce using rule 89 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    RETURN          reduce using rule 89 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    SALTO           reduce using rule 89 (declaracion_numeros -> VAR ASIGNACION numero EOL .)


state 104

    (141) expresionAritmetica -> VAR ASIGNACION numero masTerminos . EOL

    EOL             shift and go to state 157


state 105

    (90) array -> VAR ASIGNACION ARRAY LPAREN . elementos RPAREN EOL
    (91) elementos -> . lista
    (92) elementos -> . diccionario
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (27) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic
    (28) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic COMA diccionario
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (29) clave_dic -> . ENTERO
    (30) clave_dic -> . CADENA
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    CADENA          shift and go to state 169
    VAR             shift and go to state 158
    ARRAY           shift and go to state 159
    BOOLEANO        shift and go to state 171
    ENTERO          shift and go to state 172
    FLOTANTE        shift and go to state 95

    elementos                      shift and go to state 160
    lista                          shift and go to state 161
    diccionario                    shift and go to state 162
    palabras                       shift and go to state 163
    numeros                        shift and go to state 164
    variables                      shift and go to state 165
    array_l                        shift and go to state 166
    bool                           shift and go to state 167
    clave_dic                      shift and go to state 168
    numero                         shift and go to state 170

state 106

    (15) echo -> ECHO valores EOL SALTO .

    SALTO           reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    $end            reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    ECHO            reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    VAR             reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    COMNT           reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    WHILE           reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    IF              reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    FOR             reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    RBRACE          reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    RETURN          reduce using rule 15 (echo -> ECHO valores EOL SALTO .)


state 107

    (17) valores -> valor COMA valores .

    EOL             reduce using rule 17 (valores -> valor COMA valores .)


state 108

    (39) operacion -> ENTERO .
    (41) operacion -> ENTERO . operador operacion
    (84) operador -> . SUMA
    (85) operador -> . RESTA
    (86) operador -> . MULT
    (87) operador -> . DIV
    (88) operador -> . POT

    COMA            reduce using rule 39 (operacion -> ENTERO .)
    EOL             reduce using rule 39 (operacion -> ENTERO .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

    operador                       shift and go to state 60

state 109

    (41) operacion -> ENTERO operador operacion .

    COMA            reduce using rule 41 (operacion -> ENTERO operador operacion .)
    EOL             reduce using rule 41 (operacion -> ENTERO operador operacion .)


state 110

    (40) operacion -> FLOTANTE .
    (42) operacion -> FLOTANTE . operador operacion
    (84) operador -> . SUMA
    (85) operador -> . RESTA
    (86) operador -> . MULT
    (87) operador -> . DIV
    (88) operador -> . POT

    COMA            reduce using rule 40 (operacion -> FLOTANTE .)
    EOL             reduce using rule 40 (operacion -> FLOTANTE .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

    operador                       shift and go to state 66

state 111

    (42) operacion -> FLOTANTE operador operacion .

    COMA            reduce using rule 42 (operacion -> FLOTANTE operador operacion .)
    EOL             reduce using rule 42 (operacion -> FLOTANTE operador operacion .)


state 112

    (69) argumentologico -> BOOLEANO IGUAL VAR .

    COMA            reduce using rule 69 (argumentologico -> BOOLEANO IGUAL VAR .)
    EOL             reduce using rule 69 (argumentologico -> BOOLEANO IGUAL VAR .)
    AND             reduce using rule 69 (argumentologico -> BOOLEANO IGUAL VAR .)
    OR              reduce using rule 69 (argumentologico -> BOOLEANO IGUAL VAR .)
    RPAREN          reduce using rule 69 (argumentologico -> BOOLEANO IGUAL VAR .)


state 113

    (71) argumentologico -> CADENA IGUAL CADENA .

    COMA            reduce using rule 71 (argumentologico -> CADENA IGUAL CADENA .)
    EOL             reduce using rule 71 (argumentologico -> CADENA IGUAL CADENA .)
    AND             reduce using rule 71 (argumentologico -> CADENA IGUAL CADENA .)
    OR              reduce using rule 71 (argumentologico -> CADENA IGUAL CADENA .)
    RPAREN          reduce using rule 71 (argumentologico -> CADENA IGUAL CADENA .)


state 114

    (70) argumentologico -> CADENA IGUAL VAR .

    COMA            reduce using rule 70 (argumentologico -> CADENA IGUAL VAR .)
    EOL             reduce using rule 70 (argumentologico -> CADENA IGUAL VAR .)
    AND             reduce using rule 70 (argumentologico -> CADENA IGUAL VAR .)
    OR              reduce using rule 70 (argumentologico -> CADENA IGUAL VAR .)
    RPAREN          reduce using rule 70 (argumentologico -> CADENA IGUAL VAR .)


state 115

    (73) argumentologico -> CADENA DIFERENTE CADENA .

    COMA            reduce using rule 73 (argumentologico -> CADENA DIFERENTE CADENA .)
    EOL             reduce using rule 73 (argumentologico -> CADENA DIFERENTE CADENA .)
    AND             reduce using rule 73 (argumentologico -> CADENA DIFERENTE CADENA .)
    OR              reduce using rule 73 (argumentologico -> CADENA DIFERENTE CADENA .)
    RPAREN          reduce using rule 73 (argumentologico -> CADENA DIFERENTE CADENA .)


state 116

    (72) argumentologico -> CADENA DIFERENTE VAR .

    COMA            reduce using rule 72 (argumentologico -> CADENA DIFERENTE VAR .)
    EOL             reduce using rule 72 (argumentologico -> CADENA DIFERENTE VAR .)
    AND             reduce using rule 72 (argumentologico -> CADENA DIFERENTE VAR .)
    OR              reduce using rule 72 (argumentologico -> CADENA DIFERENTE VAR .)
    RPAREN          reduce using rule 72 (argumentologico -> CADENA DIFERENTE VAR .)


state 117

    (61) argumentologico -> VAR operador_logico VAR .

    COMA            reduce using rule 61 (argumentologico -> VAR operador_logico VAR .)
    EOL             reduce using rule 61 (argumentologico -> VAR operador_logico VAR .)
    AND             reduce using rule 61 (argumentologico -> VAR operador_logico VAR .)
    OR              reduce using rule 61 (argumentologico -> VAR operador_logico VAR .)
    RPAREN          reduce using rule 61 (argumentologico -> VAR operador_logico VAR .)


state 118

    (63) argumentologico -> VAR operador_logico numero .

    COMA            reduce using rule 63 (argumentologico -> VAR operador_logico numero .)
    EOL             reduce using rule 63 (argumentologico -> VAR operador_logico numero .)
    AND             reduce using rule 63 (argumentologico -> VAR operador_logico numero .)
    OR              reduce using rule 63 (argumentologico -> VAR operador_logico numero .)
    RPAREN          reduce using rule 63 (argumentologico -> VAR operador_logico numero .)


state 119

    (64) argumentologico -> VAR IGUAL BOOLEANO .

    COMA            reduce using rule 64 (argumentologico -> VAR IGUAL BOOLEANO .)
    EOL             reduce using rule 64 (argumentologico -> VAR IGUAL BOOLEANO .)
    AND             reduce using rule 64 (argumentologico -> VAR IGUAL BOOLEANO .)
    OR              reduce using rule 64 (argumentologico -> VAR IGUAL BOOLEANO .)
    RPAREN          reduce using rule 64 (argumentologico -> VAR IGUAL BOOLEANO .)


state 120

    (65) argumentologico -> VAR IGUAL CADENA .

    COMA            reduce using rule 65 (argumentologico -> VAR IGUAL CADENA .)
    EOL             reduce using rule 65 (argumentologico -> VAR IGUAL CADENA .)
    AND             reduce using rule 65 (argumentologico -> VAR IGUAL CADENA .)
    OR              reduce using rule 65 (argumentologico -> VAR IGUAL CADENA .)
    RPAREN          reduce using rule 65 (argumentologico -> VAR IGUAL CADENA .)


state 121

    (66) argumentologico -> VAR DIFERENTE BOOLEANO .

    COMA            reduce using rule 66 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    EOL             reduce using rule 66 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    AND             reduce using rule 66 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    OR              reduce using rule 66 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    RPAREN          reduce using rule 66 (argumentologico -> VAR DIFERENTE BOOLEANO .)


state 122

    (67) argumentologico -> VAR DIFERENTE CADENA .

    COMA            reduce using rule 67 (argumentologico -> VAR DIFERENTE CADENA .)
    EOL             reduce using rule 67 (argumentologico -> VAR DIFERENTE CADENA .)
    AND             reduce using rule 67 (argumentologico -> VAR DIFERENTE CADENA .)
    OR              reduce using rule 67 (argumentologico -> VAR DIFERENTE CADENA .)
    RPAREN          reduce using rule 67 (argumentologico -> VAR DIFERENTE CADENA .)


state 123

    (37) multi_dimensiones -> LBRACKET clave_dic . RBRACKET
    (38) multi_dimensiones -> LBRACKET clave_dic . RBRACKET multi_dimensiones

    RBRACKET        shift and go to state 173


state 124

    (29) clave_dic -> ENTERO .

    RBRACKET        reduce using rule 29 (clave_dic -> ENTERO .)
    ASIGNACION      reduce using rule 29 (clave_dic -> ENTERO .)


state 125

    (30) clave_dic -> CADENA .

    RBRACKET        reduce using rule 30 (clave_dic -> CADENA .)
    ASIGNACION      reduce using rule 30 (clave_dic -> CADENA .)


state 126

    (62) argumentologico -> numero operador_logico numero .

    COMA            reduce using rule 62 (argumentologico -> numero operador_logico numero .)
    EOL             reduce using rule 62 (argumentologico -> numero operador_logico numero .)
    AND             reduce using rule 62 (argumentologico -> numero operador_logico numero .)
    OR              reduce using rule 62 (argumentologico -> numero operador_logico numero .)
    RPAREN          reduce using rule 62 (argumentologico -> numero operador_logico numero .)


state 127

    (68) argumentologico -> numero operador_logico VAR .

    COMA            reduce using rule 68 (argumentologico -> numero operador_logico VAR .)
    EOL             reduce using rule 68 (argumentologico -> numero operador_logico VAR .)
    AND             reduce using rule 68 (argumentologico -> numero operador_logico VAR .)
    OR              reduce using rule 68 (argumentologico -> numero operador_logico VAR .)
    RPAREN          reduce using rule 68 (argumentologico -> numero operador_logico VAR .)


state 128

    (53) else -> ELSE LBRACE lineas . RBRACE

    RBRACE          shift and go to state 174


state 129

    (139) lineas -> linea .
    (140) lineas -> linea . lineas
    (139) lineas -> . linea
    (140) lineas -> . linea lineas
    (131) linea -> . echo
    (132) linea -> . ECHO CADENA EOL
    (133) linea -> . ECHO VAR EOL
    (134) linea -> . VAR ASIGNACION CADENA EOL
    (135) linea -> . estructuracontrol
    (136) linea -> . comentario
    (137) linea -> . declaracion_numeros
    (138) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (43) estructuracontrol -> . while
    (44) estructuracontrol -> . if
    (45) estructuracontrol -> . for
    (83) comentario -> . COMNT
    (89) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (90) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (46) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (47) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (48) if -> . if else
    (49) if -> . if elseif else
    (50) if -> . if elseif
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for COMNT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RBRACE          reduce using rule 139 (lineas -> linea .)
    RETURN          reduce using rule 139 (lineas -> linea .)
    SALTO           reduce using rule 139 (lineas -> linea .)
    ECHO            shift and go to state 131
    VAR             shift and go to state 132
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

  ! ECHO            [ reduce using rule 139 (lineas -> linea .) ]
  ! VAR             [ reduce using rule 139 (lineas -> linea .) ]
  ! COMNT           [ reduce using rule 139 (lineas -> linea .) ]
  ! WHILE           [ reduce using rule 139 (lineas -> linea .) ]
  ! IF              [ reduce using rule 139 (lineas -> linea .) ]
  ! FOR             [ reduce using rule 139 (lineas -> linea .) ]

    linea                          shift and go to state 129
    lineas                         shift and go to state 175
    echo                           shift and go to state 130
    estructuracontrol              shift and go to state 133
    comentario                     shift and go to state 134
    declaracion_numeros            shift and go to state 135
    array                          shift and go to state 136
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 130

    (131) linea -> echo .

    ECHO            reduce using rule 131 (linea -> echo .)
    VAR             reduce using rule 131 (linea -> echo .)
    COMNT           reduce using rule 131 (linea -> echo .)
    WHILE           reduce using rule 131 (linea -> echo .)
    IF              reduce using rule 131 (linea -> echo .)
    FOR             reduce using rule 131 (linea -> echo .)
    RBRACE          reduce using rule 131 (linea -> echo .)
    RETURN          reduce using rule 131 (linea -> echo .)
    SALTO           reduce using rule 131 (linea -> echo .)


state 131

    (132) linea -> ECHO . CADENA EOL
    (133) linea -> ECHO . VAR EOL
    (14) echo -> ECHO . valores EOL
    (15) echo -> ECHO . valores EOL SALTO
    (16) valores -> . valor
    (17) valores -> . valor COMA valores
    (18) valor -> . ENTERO
    (19) valor -> . FLOTANTE
    (20) valor -> . BOOLEANO
    (21) valor -> . CADENA
    (22) valor -> . VAR
    (23) valor -> . VARIABLE_ARRAY
    (24) valor -> . operacion
    (25) valor -> . argumentologico
    (26) valor -> . array_index
    (39) operacion -> . ENTERO
    (40) operacion -> . FLOTANTE
    (41) operacion -> . ENTERO operador operacion
    (42) operacion -> . FLOTANTE operador operacion
    (61) argumentologico -> . VAR operador_logico VAR
    (62) argumentologico -> . numero operador_logico numero
    (63) argumentologico -> . VAR operador_logico numero
    (64) argumentologico -> . VAR IGUAL BOOLEANO
    (65) argumentologico -> . VAR IGUAL CADENA
    (66) argumentologico -> . VAR DIFERENTE BOOLEANO
    (67) argumentologico -> . VAR DIFERENTE CADENA
    (68) argumentologico -> . numero operador_logico VAR
    (69) argumentologico -> . BOOLEANO IGUAL VAR
    (70) argumentologico -> . CADENA IGUAL VAR
    (71) argumentologico -> . CADENA IGUAL CADENA
    (72) argumentologico -> . CADENA DIFERENTE VAR
    (73) argumentologico -> . CADENA DIFERENTE CADENA
    (74) argumentologico -> . BOOLEANO
    (36) array_index -> . VAR multi_dimensiones
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    CADENA          shift and go to state 176
    VAR             shift and go to state 177
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    BOOLEANO        shift and go to state 31
    VARIABLE_ARRAY  shift and go to state 34

    valores                        shift and go to state 27
    valor                          shift and go to state 28
    operacion                      shift and go to state 35
    argumentologico                shift and go to state 36
    array_index                    shift and go to state 37
    numero                         shift and go to state 38

state 132

    (134) linea -> VAR . ASIGNACION CADENA EOL
    (89) declaracion_numeros -> VAR . ASIGNACION numero EOL
    (90) array -> VAR . ASIGNACION ARRAY LPAREN elementos RPAREN EOL

    ASIGNACION      shift and go to state 178


state 133

    (135) linea -> estructuracontrol .

    ECHO            reduce using rule 135 (linea -> estructuracontrol .)
    VAR             reduce using rule 135 (linea -> estructuracontrol .)
    COMNT           reduce using rule 135 (linea -> estructuracontrol .)
    WHILE           reduce using rule 135 (linea -> estructuracontrol .)
    IF              reduce using rule 135 (linea -> estructuracontrol .)
    FOR             reduce using rule 135 (linea -> estructuracontrol .)
    RBRACE          reduce using rule 135 (linea -> estructuracontrol .)
    RETURN          reduce using rule 135 (linea -> estructuracontrol .)
    SALTO           reduce using rule 135 (linea -> estructuracontrol .)


state 134

    (136) linea -> comentario .

    ECHO            reduce using rule 136 (linea -> comentario .)
    VAR             reduce using rule 136 (linea -> comentario .)
    COMNT           reduce using rule 136 (linea -> comentario .)
    WHILE           reduce using rule 136 (linea -> comentario .)
    IF              reduce using rule 136 (linea -> comentario .)
    FOR             reduce using rule 136 (linea -> comentario .)
    RBRACE          reduce using rule 136 (linea -> comentario .)
    RETURN          reduce using rule 136 (linea -> comentario .)
    SALTO           reduce using rule 136 (linea -> comentario .)


state 135

    (137) linea -> declaracion_numeros .

    ECHO            reduce using rule 137 (linea -> declaracion_numeros .)
    VAR             reduce using rule 137 (linea -> declaracion_numeros .)
    COMNT           reduce using rule 137 (linea -> declaracion_numeros .)
    WHILE           reduce using rule 137 (linea -> declaracion_numeros .)
    IF              reduce using rule 137 (linea -> declaracion_numeros .)
    FOR             reduce using rule 137 (linea -> declaracion_numeros .)
    RBRACE          reduce using rule 137 (linea -> declaracion_numeros .)
    RETURN          reduce using rule 137 (linea -> declaracion_numeros .)
    SALTO           reduce using rule 137 (linea -> declaracion_numeros .)


state 136

    (138) linea -> array .

    ECHO            reduce using rule 138 (linea -> array .)
    VAR             reduce using rule 138 (linea -> array .)
    COMNT           reduce using rule 138 (linea -> array .)
    WHILE           reduce using rule 138 (linea -> array .)
    IF              reduce using rule 138 (linea -> array .)
    FOR             reduce using rule 138 (linea -> array .)
    RBRACE          reduce using rule 138 (linea -> array .)
    RETURN          reduce using rule 138 (linea -> array .)
    SALTO           reduce using rule 138 (linea -> array .)


state 137

    (51) elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE lineas RBRACE
    (52) elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE lineas RBRACE elseif

    RPAREN          shift and go to state 179


state 138

    (108) funcion -> FUNCTION tipo_funcion LBRACE final_funcion . RBRACE

    RBRACE          shift and go to state 180


state 139

    (111) final_funcion -> RETURN . VAR EOL

    VAR             shift and go to state 181


state 140

    (112) final_funcion -> lineas . final_funcion
    (111) final_funcion -> . RETURN VAR EOL
    (112) final_funcion -> . lineas final_funcion
    (139) lineas -> . linea
    (140) lineas -> . linea lineas
    (131) linea -> . echo
    (132) linea -> . ECHO CADENA EOL
    (133) linea -> . ECHO VAR EOL
    (134) linea -> . VAR ASIGNACION CADENA EOL
    (135) linea -> . estructuracontrol
    (136) linea -> . comentario
    (137) linea -> . declaracion_numeros
    (138) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (43) estructuracontrol -> . while
    (44) estructuracontrol -> . if
    (45) estructuracontrol -> . for
    (83) comentario -> . COMNT
    (89) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (90) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (46) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (47) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (48) if -> . if else
    (49) if -> . if elseif else
    (50) if -> . if elseif
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    RETURN          shift and go to state 139
    ECHO            shift and go to state 131
    VAR             shift and go to state 132
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 140
    final_funcion                  shift and go to state 182
    linea                          shift and go to state 129
    echo                           shift and go to state 130
    estructuracontrol              shift and go to state 133
    comentario                     shift and go to state 134
    declaracion_numeros            shift and go to state 135
    array                          shift and go to state 136
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 141

    (116) readline -> READLINE LPAREN CADENA RPAREN . EOL

    EOL             shift and go to state 183


state 142

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos . RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    RBRACE          shift and go to state 184


state 143

    (123) mas_objetos -> cuerpo_objeto .
    (124) mas_objetos -> cuerpo_objeto . mas_objetos
    (123) mas_objetos -> . cuerpo_objeto
    (124) mas_objetos -> . cuerpo_objeto mas_objetos
    (120) cuerpo_objeto -> . PUBLIC VAR EOL
    (121) cuerpo_objeto -> . PUBLIC asignacion
    (122) cuerpo_objeto -> . PUBLIC funcion

    RBRACE          reduce using rule 123 (mas_objetos -> cuerpo_objeto .)
    PUBLIC          shift and go to state 144

    cuerpo_objeto                  shift and go to state 143
    mas_objetos                    shift and go to state 185

state 144

    (120) cuerpo_objeto -> PUBLIC . VAR EOL
    (121) cuerpo_objeto -> PUBLIC . asignacion
    (122) cuerpo_objeto -> PUBLIC . funcion
    (13) asignacion -> . VAR ASIGNACION valor EOL
    (108) funcion -> . FUNCTION tipo_funcion LBRACE final_funcion RBRACE

    VAR             shift and go to state 186
    FUNCTION        shift and go to state 19

    asignacion                     shift and go to state 187
    funcion                        shift and go to state 188

state 145

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO . LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    LBRACE          shift and go to state 189


state 146

    (46) while -> WHILE LPAREN condicion RPAREN . LBRACE lineas RBRACE

    LBRACE          shift and go to state 190


state 147

    (55) condicion -> argumentologico conector_logico . condicion
    (54) condicion -> . argumentologico
    (55) condicion -> . argumentologico conector_logico condicion
    (61) argumentologico -> . VAR operador_logico VAR
    (62) argumentologico -> . numero operador_logico numero
    (63) argumentologico -> . VAR operador_logico numero
    (64) argumentologico -> . VAR IGUAL BOOLEANO
    (65) argumentologico -> . VAR IGUAL CADENA
    (66) argumentologico -> . VAR DIFERENTE BOOLEANO
    (67) argumentologico -> . VAR DIFERENTE CADENA
    (68) argumentologico -> . numero operador_logico VAR
    (69) argumentologico -> . BOOLEANO IGUAL VAR
    (70) argumentologico -> . CADENA IGUAL VAR
    (71) argumentologico -> . CADENA IGUAL CADENA
    (72) argumentologico -> . CADENA DIFERENTE VAR
    (73) argumentologico -> . CADENA DIFERENTE CADENA
    (74) argumentologico -> . BOOLEANO
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    VAR             shift and go to state 91
    BOOLEANO        shift and go to state 92
    CADENA          shift and go to state 93
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    argumentologico                shift and go to state 90
    condicion                      shift and go to state 191
    numero                         shift and go to state 38

state 148

    (57) conector_logico -> AND .

    VAR             reduce using rule 57 (conector_logico -> AND .)
    BOOLEANO        reduce using rule 57 (conector_logico -> AND .)
    CADENA          reduce using rule 57 (conector_logico -> AND .)
    ENTERO          reduce using rule 57 (conector_logico -> AND .)
    FLOTANTE        reduce using rule 57 (conector_logico -> AND .)


state 149

    (58) conector_logico -> OR .

    VAR             reduce using rule 58 (conector_logico -> OR .)
    BOOLEANO        reduce using rule 58 (conector_logico -> OR .)
    CADENA          reduce using rule 58 (conector_logico -> OR .)
    ENTERO          reduce using rule 58 (conector_logico -> OR .)
    FLOTANTE        reduce using rule 58 (conector_logico -> OR .)


state 150

    (47) if -> IF LPAREN condicion RPAREN . LBRACE lineas RBRACE

    LBRACE          shift and go to state 192


state 151

    (128) for -> FOR LPAREN asignacion argumentologico . EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> FOR LPAREN asignacion argumentologico . EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> FOR LPAREN asignacion argumentologico . EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    EOL             shift and go to state 193


state 152

    (13) asignacion -> VAR ASIGNACION . valor EOL
    (18) valor -> . ENTERO
    (19) valor -> . FLOTANTE
    (20) valor -> . BOOLEANO
    (21) valor -> . CADENA
    (22) valor -> . VAR
    (23) valor -> . VARIABLE_ARRAY
    (24) valor -> . operacion
    (25) valor -> . argumentologico
    (26) valor -> . array_index
    (39) operacion -> . ENTERO
    (40) operacion -> . FLOTANTE
    (41) operacion -> . ENTERO operador operacion
    (42) operacion -> . FLOTANTE operador operacion
    (61) argumentologico -> . VAR operador_logico VAR
    (62) argumentologico -> . numero operador_logico numero
    (63) argumentologico -> . VAR operador_logico numero
    (64) argumentologico -> . VAR IGUAL BOOLEANO
    (65) argumentologico -> . VAR IGUAL CADENA
    (66) argumentologico -> . VAR DIFERENTE BOOLEANO
    (67) argumentologico -> . VAR DIFERENTE CADENA
    (68) argumentologico -> . numero operador_logico VAR
    (69) argumentologico -> . BOOLEANO IGUAL VAR
    (70) argumentologico -> . CADENA IGUAL VAR
    (71) argumentologico -> . CADENA IGUAL CADENA
    (72) argumentologico -> . CADENA DIFERENTE VAR
    (73) argumentologico -> . CADENA DIFERENTE CADENA
    (74) argumentologico -> . BOOLEANO
    (36) array_index -> . VAR multi_dimensiones
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    BOOLEANO        shift and go to state 31
    CADENA          shift and go to state 32
    VAR             shift and go to state 33
    VARIABLE_ARRAY  shift and go to state 34

    valor                          shift and go to state 52
    operacion                      shift and go to state 35
    argumentologico                shift and go to state 36
    array_index                    shift and go to state 37
    numero                         shift and go to state 38

state 153

    (142) expresionAritmetica -> VAR ASIGNACION VAR masTerminos EOL .

    $end            reduce using rule 142 (expresionAritmetica -> VAR ASIGNACION VAR masTerminos EOL .)


state 154

    (146) masTerminos -> termino masTerminos .

    EOL             reduce using rule 146 (masTerminos -> termino masTerminos .)


state 155

    (143) termino -> operador numero .

    SUMA            reduce using rule 143 (termino -> operador numero .)
    RESTA           reduce using rule 143 (termino -> operador numero .)
    MULT            reduce using rule 143 (termino -> operador numero .)
    DIV             reduce using rule 143 (termino -> operador numero .)
    POT             reduce using rule 143 (termino -> operador numero .)
    EOL             reduce using rule 143 (termino -> operador numero .)


state 156

    (144) termino -> operador VAR .

    SUMA            reduce using rule 144 (termino -> operador VAR .)
    RESTA           reduce using rule 144 (termino -> operador VAR .)
    MULT            reduce using rule 144 (termino -> operador VAR .)
    DIV             reduce using rule 144 (termino -> operador VAR .)
    POT             reduce using rule 144 (termino -> operador VAR .)
    EOL             reduce using rule 144 (termino -> operador VAR .)


state 157

    (141) expresionAritmetica -> VAR ASIGNACION numero masTerminos EOL .

    $end            reduce using rule 141 (expresionAritmetica -> VAR ASIGNACION numero masTerminos EOL .)


state 158

    (104) variables -> VAR .
    (105) variables -> VAR . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 104 (variables -> VAR .)
    COMA            shift and go to state 194

  ! COMA            [ reduce using rule 104 (variables -> VAR .) ]


state 159

    (98) array_l -> ARRAY . LPAREN elementos RPAREN
    (99) array_l -> ARRAY . LPAREN elementos RPAREN COMA lista

    LPAREN          shift and go to state 195


state 160

    (90) array -> VAR ASIGNACION ARRAY LPAREN elementos . RPAREN EOL

    RPAREN          shift and go to state 196


state 161

    (91) elementos -> lista .

    RPAREN          reduce using rule 91 (elementos -> lista .)


state 162

    (92) elementos -> diccionario .

    RPAREN          reduce using rule 92 (elementos -> diccionario .)


state 163

    (93) lista -> palabras .

    RPAREN          reduce using rule 93 (lista -> palabras .)
    COMA            reduce using rule 93 (lista -> palabras .)


state 164

    (94) lista -> numeros .

    RPAREN          reduce using rule 94 (lista -> numeros .)
    COMA            reduce using rule 94 (lista -> numeros .)


state 165

    (95) lista -> variables .

    RPAREN          reduce using rule 95 (lista -> variables .)
    COMA            reduce using rule 95 (lista -> variables .)


state 166

    (96) lista -> array_l .

    RPAREN          reduce using rule 96 (lista -> array_l .)
    COMA            reduce using rule 96 (lista -> array_l .)


state 167

    (97) lista -> bool .

    RPAREN          reduce using rule 97 (lista -> bool .)
    COMA            reduce using rule 97 (lista -> bool .)


state 168

    (27) diccionario -> clave_dic . ASIGNACION MAYOR valor_dic
    (28) diccionario -> clave_dic . ASIGNACION MAYOR valor_dic COMA diccionario

    ASIGNACION      shift and go to state 197


state 169

    (100) palabras -> CADENA .
    (101) palabras -> CADENA . COMA lista
    (30) clave_dic -> CADENA .

    RPAREN          reduce using rule 100 (palabras -> CADENA .)
    COMA            shift and go to state 198
    ASIGNACION      reduce using rule 30 (clave_dic -> CADENA .)


state 170

    (102) numeros -> numero .
    (103) numeros -> numero . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 102 (numeros -> numero .)
    COMA            shift and go to state 199

  ! COMA            [ reduce using rule 102 (numeros -> numero .) ]


state 171

    (106) bool -> BOOLEANO .
    (107) bool -> BOOLEANO . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 106 (bool -> BOOLEANO .)
    COMA            shift and go to state 200

  ! COMA            [ reduce using rule 106 (bool -> BOOLEANO .) ]


state 172

    (29) clave_dic -> ENTERO .
    (75) numero -> ENTERO .

    ASIGNACION      reduce using rule 29 (clave_dic -> ENTERO .)
    COMA            reduce using rule 75 (numero -> ENTERO .)
    RPAREN          reduce using rule 75 (numero -> ENTERO .)


state 173

    (37) multi_dimensiones -> LBRACKET clave_dic RBRACKET .
    (38) multi_dimensiones -> LBRACKET clave_dic RBRACKET . multi_dimensiones
    (37) multi_dimensiones -> . LBRACKET clave_dic RBRACKET
    (38) multi_dimensiones -> . LBRACKET clave_dic RBRACKET multi_dimensiones

    COMA            reduce using rule 37 (multi_dimensiones -> LBRACKET clave_dic RBRACKET .)
    EOL             reduce using rule 37 (multi_dimensiones -> LBRACKET clave_dic RBRACKET .)
    LBRACKET        shift and go to state 78

    multi_dimensiones              shift and go to state 201

state 174

    (53) else -> ELSE LBRACE lineas RBRACE .

    ELSE            reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)
    ELSEIF          reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)
    $end            reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)
    ECHO            reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)
    VAR             reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)
    COMNT           reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)
    WHILE           reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)
    IF              reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)
    FOR             reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)
    RETURN          reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)
    SALTO           reduce using rule 53 (else -> ELSE LBRACE lineas RBRACE .)


state 175

    (140) lineas -> linea lineas .

    RBRACE          reduce using rule 140 (lineas -> linea lineas .)
    RETURN          reduce using rule 140 (lineas -> linea lineas .)
    ECHO            reduce using rule 140 (lineas -> linea lineas .)
    VAR             reduce using rule 140 (lineas -> linea lineas .)
    COMNT           reduce using rule 140 (lineas -> linea lineas .)
    WHILE           reduce using rule 140 (lineas -> linea lineas .)
    IF              reduce using rule 140 (lineas -> linea lineas .)
    FOR             reduce using rule 140 (lineas -> linea lineas .)
    SALTO           reduce using rule 140 (lineas -> linea lineas .)


state 176

    (132) linea -> ECHO CADENA . EOL
    (21) valor -> CADENA .
    (70) argumentologico -> CADENA . IGUAL VAR
    (71) argumentologico -> CADENA . IGUAL CADENA
    (72) argumentologico -> CADENA . DIFERENTE VAR
    (73) argumentologico -> CADENA . DIFERENTE CADENA

  ! shift/reduce conflict for EOL resolved as shift
    EOL             shift and go to state 202
    COMA            reduce using rule 21 (valor -> CADENA .)
    IGUAL           shift and go to state 68
    DIFERENTE       shift and go to state 69

  ! EOL             [ reduce using rule 21 (valor -> CADENA .) ]


state 177

    (133) linea -> ECHO VAR . EOL
    (22) valor -> VAR .
    (61) argumentologico -> VAR . operador_logico VAR
    (63) argumentologico -> VAR . operador_logico numero
    (64) argumentologico -> VAR . IGUAL BOOLEANO
    (65) argumentologico -> VAR . IGUAL CADENA
    (66) argumentologico -> VAR . DIFERENTE BOOLEANO
    (67) argumentologico -> VAR . DIFERENTE CADENA
    (36) array_index -> VAR . multi_dimensiones
    (77) operador_logico -> . IGUAL
    (78) operador_logico -> . DIFERENTE
    (79) operador_logico -> . MENOR
    (80) operador_logico -> . MAYOR
    (81) operador_logico -> . MENOR_IGUAL
    (82) operador_logico -> . MAYOR_IGUAL
    (37) multi_dimensiones -> . LBRACKET clave_dic RBRACKET
    (38) multi_dimensiones -> . LBRACKET clave_dic RBRACKET multi_dimensiones

  ! shift/reduce conflict for EOL resolved as shift
    EOL             shift and go to state 203
    COMA            reduce using rule 22 (valor -> VAR .)
    IGUAL           shift and go to state 71
    DIFERENTE       shift and go to state 72
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77
    LBRACKET        shift and go to state 78

  ! EOL             [ reduce using rule 22 (valor -> VAR .) ]

    operador_logico                shift and go to state 70
    multi_dimensiones              shift and go to state 73

state 178

    (134) linea -> VAR ASIGNACION . CADENA EOL
    (89) declaracion_numeros -> VAR ASIGNACION . numero EOL
    (90) array -> VAR ASIGNACION . ARRAY LPAREN elementos RPAREN EOL
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    CADENA          shift and go to state 204
    ARRAY           shift and go to state 54
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    numero                         shift and go to state 205

state 179

    (51) elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE lineas RBRACE
    (52) elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE lineas RBRACE elseif

    LBRACE          shift and go to state 206


state 180

    (108) funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE .

    $end            reduce using rule 108 (funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE .)
    PUBLIC          reduce using rule 108 (funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE .)
    RBRACE          reduce using rule 108 (funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE .)


state 181

    (111) final_funcion -> RETURN VAR . EOL

    EOL             shift and go to state 207


state 182

    (112) final_funcion -> lineas final_funcion .

    RBRACE          reduce using rule 112 (final_funcion -> lineas final_funcion .)


state 183

    (116) readline -> READLINE LPAREN CADENA RPAREN EOL .

    $end            reduce using rule 116 (readline -> READLINE LPAREN CADENA RPAREN EOL .)


state 184

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE . VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    VAR             shift and go to state 208


state 185

    (124) mas_objetos -> cuerpo_objeto mas_objetos .

    RBRACE          reduce using rule 124 (mas_objetos -> cuerpo_objeto mas_objetos .)


state 186

    (120) cuerpo_objeto -> PUBLIC VAR . EOL
    (13) asignacion -> VAR . ASIGNACION valor EOL

    EOL             shift and go to state 209
    ASIGNACION      shift and go to state 152


state 187

    (121) cuerpo_objeto -> PUBLIC asignacion .

    PUBLIC          reduce using rule 121 (cuerpo_objeto -> PUBLIC asignacion .)
    RBRACE          reduce using rule 121 (cuerpo_objeto -> PUBLIC asignacion .)


state 188

    (122) cuerpo_objeto -> PUBLIC funcion .

    PUBLIC          reduce using rule 122 (cuerpo_objeto -> PUBLIC funcion .)
    RBRACE          reduce using rule 122 (cuerpo_objeto -> PUBLIC funcion .)


state 189

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE . mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
    (123) mas_objetos -> . cuerpo_objeto
    (124) mas_objetos -> . cuerpo_objeto mas_objetos
    (120) cuerpo_objeto -> . PUBLIC VAR EOL
    (121) cuerpo_objeto -> . PUBLIC asignacion
    (122) cuerpo_objeto -> . PUBLIC funcion

    PUBLIC          shift and go to state 144

    mas_objetos                    shift and go to state 210
    cuerpo_objeto                  shift and go to state 143

state 190

    (46) while -> WHILE LPAREN condicion RPAREN LBRACE . lineas RBRACE
    (139) lineas -> . linea
    (140) lineas -> . linea lineas
    (131) linea -> . echo
    (132) linea -> . ECHO CADENA EOL
    (133) linea -> . ECHO VAR EOL
    (134) linea -> . VAR ASIGNACION CADENA EOL
    (135) linea -> . estructuracontrol
    (136) linea -> . comentario
    (137) linea -> . declaracion_numeros
    (138) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (43) estructuracontrol -> . while
    (44) estructuracontrol -> . if
    (45) estructuracontrol -> . for
    (83) comentario -> . COMNT
    (89) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (90) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (46) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (47) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (48) if -> . if else
    (49) if -> . if elseif else
    (50) if -> . if elseif
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 131
    VAR             shift and go to state 132
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 211
    linea                          shift and go to state 129
    echo                           shift and go to state 130
    estructuracontrol              shift and go to state 133
    comentario                     shift and go to state 134
    declaracion_numeros            shift and go to state 135
    array                          shift and go to state 136
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 191

    (55) condicion -> argumentologico conector_logico condicion .

    RPAREN          reduce using rule 55 (condicion -> argumentologico conector_logico condicion .)


state 192

    (47) if -> IF LPAREN condicion RPAREN LBRACE . lineas RBRACE
    (139) lineas -> . linea
    (140) lineas -> . linea lineas
    (131) linea -> . echo
    (132) linea -> . ECHO CADENA EOL
    (133) linea -> . ECHO VAR EOL
    (134) linea -> . VAR ASIGNACION CADENA EOL
    (135) linea -> . estructuracontrol
    (136) linea -> . comentario
    (137) linea -> . declaracion_numeros
    (138) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (43) estructuracontrol -> . while
    (44) estructuracontrol -> . if
    (45) estructuracontrol -> . for
    (83) comentario -> . COMNT
    (89) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (90) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (46) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (47) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (48) if -> . if else
    (49) if -> . if elseif else
    (50) if -> . if elseif
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 131
    VAR             shift and go to state 132
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 212
    linea                          shift and go to state 129
    echo                           shift and go to state 130
    estructuracontrol              shift and go to state 133
    comentario                     shift and go to state 134
    declaracion_numeros            shift and go to state 135
    array                          shift and go to state 136
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 193

    (128) for -> FOR LPAREN asignacion argumentologico EOL . VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> FOR LPAREN asignacion argumentologico EOL . VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> FOR LPAREN asignacion argumentologico EOL . VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    VAR             shift and go to state 213


state 194

    (105) variables -> VAR COMA . lista
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    CADENA          shift and go to state 215
    VAR             shift and go to state 158
    ARRAY           shift and go to state 159
    BOOLEANO        shift and go to state 171
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    lista                          shift and go to state 214
    palabras                       shift and go to state 163
    numeros                        shift and go to state 164
    variables                      shift and go to state 165
    array_l                        shift and go to state 166
    bool                           shift and go to state 167
    numero                         shift and go to state 170

state 195

    (98) array_l -> ARRAY LPAREN . elementos RPAREN
    (99) array_l -> ARRAY LPAREN . elementos RPAREN COMA lista
    (91) elementos -> . lista
    (92) elementos -> . diccionario
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (27) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic
    (28) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic COMA diccionario
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (29) clave_dic -> . ENTERO
    (30) clave_dic -> . CADENA
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    CADENA          shift and go to state 169
    VAR             shift and go to state 158
    ARRAY           shift and go to state 159
    BOOLEANO        shift and go to state 171
    ENTERO          shift and go to state 172
    FLOTANTE        shift and go to state 95

    elementos                      shift and go to state 216
    lista                          shift and go to state 161
    diccionario                    shift and go to state 162
    palabras                       shift and go to state 163
    numeros                        shift and go to state 164
    variables                      shift and go to state 165
    array_l                        shift and go to state 166
    bool                           shift and go to state 167
    clave_dic                      shift and go to state 168
    numero                         shift and go to state 170

state 196

    (90) array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN . EOL

    EOL             shift and go to state 217


state 197

    (27) diccionario -> clave_dic ASIGNACION . MAYOR valor_dic
    (28) diccionario -> clave_dic ASIGNACION . MAYOR valor_dic COMA diccionario

    MAYOR           shift and go to state 218


state 198

    (101) palabras -> CADENA COMA . lista
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    CADENA          shift and go to state 215
    VAR             shift and go to state 158
    ARRAY           shift and go to state 159
    BOOLEANO        shift and go to state 171
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    lista                          shift and go to state 219
    palabras                       shift and go to state 163
    numeros                        shift and go to state 164
    variables                      shift and go to state 165
    array_l                        shift and go to state 166
    bool                           shift and go to state 167
    numero                         shift and go to state 170

state 199

    (103) numeros -> numero COMA . lista
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    CADENA          shift and go to state 215
    VAR             shift and go to state 158
    ARRAY           shift and go to state 159
    BOOLEANO        shift and go to state 171
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    numero                         shift and go to state 170
    lista                          shift and go to state 220
    palabras                       shift and go to state 163
    numeros                        shift and go to state 164
    variables                      shift and go to state 165
    array_l                        shift and go to state 166
    bool                           shift and go to state 167

state 200

    (107) bool -> BOOLEANO COMA . lista
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    CADENA          shift and go to state 215
    VAR             shift and go to state 158
    ARRAY           shift and go to state 159
    BOOLEANO        shift and go to state 171
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    lista                          shift and go to state 221
    palabras                       shift and go to state 163
    numeros                        shift and go to state 164
    variables                      shift and go to state 165
    array_l                        shift and go to state 166
    bool                           shift and go to state 167
    numero                         shift and go to state 170

state 201

    (38) multi_dimensiones -> LBRACKET clave_dic RBRACKET multi_dimensiones .

    COMA            reduce using rule 38 (multi_dimensiones -> LBRACKET clave_dic RBRACKET multi_dimensiones .)
    EOL             reduce using rule 38 (multi_dimensiones -> LBRACKET clave_dic RBRACKET multi_dimensiones .)


state 202

    (132) linea -> ECHO CADENA EOL .

    ECHO            reduce using rule 132 (linea -> ECHO CADENA EOL .)
    VAR             reduce using rule 132 (linea -> ECHO CADENA EOL .)
    COMNT           reduce using rule 132 (linea -> ECHO CADENA EOL .)
    WHILE           reduce using rule 132 (linea -> ECHO CADENA EOL .)
    IF              reduce using rule 132 (linea -> ECHO CADENA EOL .)
    FOR             reduce using rule 132 (linea -> ECHO CADENA EOL .)
    RBRACE          reduce using rule 132 (linea -> ECHO CADENA EOL .)
    RETURN          reduce using rule 132 (linea -> ECHO CADENA EOL .)
    SALTO           reduce using rule 132 (linea -> ECHO CADENA EOL .)


state 203

    (133) linea -> ECHO VAR EOL .

    ECHO            reduce using rule 133 (linea -> ECHO VAR EOL .)
    VAR             reduce using rule 133 (linea -> ECHO VAR EOL .)
    COMNT           reduce using rule 133 (linea -> ECHO VAR EOL .)
    WHILE           reduce using rule 133 (linea -> ECHO VAR EOL .)
    IF              reduce using rule 133 (linea -> ECHO VAR EOL .)
    FOR             reduce using rule 133 (linea -> ECHO VAR EOL .)
    RBRACE          reduce using rule 133 (linea -> ECHO VAR EOL .)
    RETURN          reduce using rule 133 (linea -> ECHO VAR EOL .)
    SALTO           reduce using rule 133 (linea -> ECHO VAR EOL .)


state 204

    (134) linea -> VAR ASIGNACION CADENA . EOL

    EOL             shift and go to state 222


state 205

    (89) declaracion_numeros -> VAR ASIGNACION numero . EOL

    EOL             shift and go to state 103


state 206

    (51) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . lineas RBRACE
    (52) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . lineas RBRACE elseif
    (139) lineas -> . linea
    (140) lineas -> . linea lineas
    (131) linea -> . echo
    (132) linea -> . ECHO CADENA EOL
    (133) linea -> . ECHO VAR EOL
    (134) linea -> . VAR ASIGNACION CADENA EOL
    (135) linea -> . estructuracontrol
    (136) linea -> . comentario
    (137) linea -> . declaracion_numeros
    (138) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (43) estructuracontrol -> . while
    (44) estructuracontrol -> . if
    (45) estructuracontrol -> . for
    (83) comentario -> . COMNT
    (89) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (90) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (46) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (47) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (48) if -> . if else
    (49) if -> . if elseif else
    (50) if -> . if elseif
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 131
    VAR             shift and go to state 132
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 223
    linea                          shift and go to state 129
    echo                           shift and go to state 130
    estructuracontrol              shift and go to state 133
    comentario                     shift and go to state 134
    declaracion_numeros            shift and go to state 135
    array                          shift and go to state 136
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 207

    (111) final_funcion -> RETURN VAR EOL .

    RBRACE          reduce using rule 111 (final_funcion -> RETURN VAR EOL .)


state 208

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR . ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    ASIGNACION      shift and go to state 224


state 209

    (120) cuerpo_objeto -> PUBLIC VAR EOL .

    PUBLIC          reduce using rule 120 (cuerpo_objeto -> PUBLIC VAR EOL .)
    RBRACE          reduce using rule 120 (cuerpo_objeto -> PUBLIC VAR EOL .)


state 210

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos . RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    RBRACE          shift and go to state 225


state 211

    (46) while -> WHILE LPAREN condicion RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 226


state 212

    (47) if -> IF LPAREN condicion RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 227


state 213

    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR . SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> FOR LPAREN asignacion argumentologico EOL VAR . RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> FOR LPAREN asignacion argumentologico EOL VAR . SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    SUMA            shift and go to state 228
    RESTA           shift and go to state 229


state 214

    (105) variables -> VAR COMA lista .

    RPAREN          reduce using rule 105 (variables -> VAR COMA lista .)
    COMA            reduce using rule 105 (variables -> VAR COMA lista .)


state 215

    (100) palabras -> CADENA .
    (101) palabras -> CADENA . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 100 (palabras -> CADENA .)
    COMA            shift and go to state 198

  ! COMA            [ reduce using rule 100 (palabras -> CADENA .) ]


state 216

    (98) array_l -> ARRAY LPAREN elementos . RPAREN
    (99) array_l -> ARRAY LPAREN elementos . RPAREN COMA lista

    RPAREN          shift and go to state 230


state 217

    (90) array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .

    $end            reduce using rule 90 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    ECHO            reduce using rule 90 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    VAR             reduce using rule 90 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    COMNT           reduce using rule 90 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    WHILE           reduce using rule 90 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    IF              reduce using rule 90 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    FOR             reduce using rule 90 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    RBRACE          reduce using rule 90 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    RETURN          reduce using rule 90 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    SALTO           reduce using rule 90 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)


state 218

    (27) diccionario -> clave_dic ASIGNACION MAYOR . valor_dic
    (28) diccionario -> clave_dic ASIGNACION MAYOR . valor_dic COMA diccionario
    (31) valor_dic -> . numero
    (32) valor_dic -> . CADENA
    (33) valor_dic -> . VAR
    (34) valor_dic -> . BOOLEANO
    (35) valor_dic -> . array_l
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista

    CADENA          shift and go to state 233
    VAR             shift and go to state 234
    BOOLEANO        shift and go to state 235
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95
    ARRAY           shift and go to state 159

    valor_dic                      shift and go to state 231
    numero                         shift and go to state 232
    array_l                        shift and go to state 236

state 219

    (101) palabras -> CADENA COMA lista .

    RPAREN          reduce using rule 101 (palabras -> CADENA COMA lista .)
    COMA            reduce using rule 101 (palabras -> CADENA COMA lista .)


state 220

    (103) numeros -> numero COMA lista .

    RPAREN          reduce using rule 103 (numeros -> numero COMA lista .)
    COMA            reduce using rule 103 (numeros -> numero COMA lista .)


state 221

    (107) bool -> BOOLEANO COMA lista .

    RPAREN          reduce using rule 107 (bool -> BOOLEANO COMA lista .)
    COMA            reduce using rule 107 (bool -> BOOLEANO COMA lista .)


state 222

    (134) linea -> VAR ASIGNACION CADENA EOL .

    ECHO            reduce using rule 134 (linea -> VAR ASIGNACION CADENA EOL .)
    VAR             reduce using rule 134 (linea -> VAR ASIGNACION CADENA EOL .)
    COMNT           reduce using rule 134 (linea -> VAR ASIGNACION CADENA EOL .)
    WHILE           reduce using rule 134 (linea -> VAR ASIGNACION CADENA EOL .)
    IF              reduce using rule 134 (linea -> VAR ASIGNACION CADENA EOL .)
    FOR             reduce using rule 134 (linea -> VAR ASIGNACION CADENA EOL .)
    RBRACE          reduce using rule 134 (linea -> VAR ASIGNACION CADENA EOL .)
    RETURN          reduce using rule 134 (linea -> VAR ASIGNACION CADENA EOL .)
    SALTO           reduce using rule 134 (linea -> VAR ASIGNACION CADENA EOL .)


state 223

    (51) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas . RBRACE
    (52) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas . RBRACE elseif

    RBRACE          shift and go to state 237


state 224

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION . NEW OBJETO LPAREN RPAREN EOL mas_atributos

    NEW             shift and go to state 238


state 225

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE . VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    VAR             shift and go to state 239


state 226

    (46) while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .

    $end            reduce using rule 46 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 46 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 46 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 46 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 46 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 46 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 46 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 46 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 46 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    SALTO           reduce using rule 46 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)


state 227

    (47) if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .

    ELSE            reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ELSEIF          reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    $end            reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    SALTO           reduce using rule 47 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)


state 228

    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA . SUMA RPAREN LBRACE lineas RBRACE
    (130) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA . SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    SUMA            shift and go to state 240


state 229

    (129) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA . RESTA RPAREN LBRACE lineas RBRACE

    RESTA           shift and go to state 241


state 230

    (98) array_l -> ARRAY LPAREN elementos RPAREN .
    (99) array_l -> ARRAY LPAREN elementos RPAREN . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 98 (array_l -> ARRAY LPAREN elementos RPAREN .)
    COMA            shift and go to state 242

  ! COMA            [ reduce using rule 98 (array_l -> ARRAY LPAREN elementos RPAREN .) ]


state 231

    (27) diccionario -> clave_dic ASIGNACION MAYOR valor_dic .
    (28) diccionario -> clave_dic ASIGNACION MAYOR valor_dic . COMA diccionario

    RPAREN          reduce using rule 27 (diccionario -> clave_dic ASIGNACION MAYOR valor_dic .)
    COMA            shift and go to state 243


state 232

    (31) valor_dic -> numero .

    COMA            reduce using rule 31 (valor_dic -> numero .)
    RPAREN          reduce using rule 31 (valor_dic -> numero .)


state 233

    (32) valor_dic -> CADENA .

    COMA            reduce using rule 32 (valor_dic -> CADENA .)
    RPAREN          reduce using rule 32 (valor_dic -> CADENA .)


state 234

    (33) valor_dic -> VAR .

    COMA            reduce using rule 33 (valor_dic -> VAR .)
    RPAREN          reduce using rule 33 (valor_dic -> VAR .)


state 235

    (34) valor_dic -> BOOLEANO .

    COMA            reduce using rule 34 (valor_dic -> BOOLEANO .)
    RPAREN          reduce using rule 34 (valor_dic -> BOOLEANO .)


state 236

    (35) valor_dic -> array_l .

    COMA            reduce using rule 35 (valor_dic -> array_l .)
    RPAREN          reduce using rule 35 (valor_dic -> array_l .)


state 237

    (51) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .
    (52) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE . elseif
    (51) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (52) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif

  ! shift/reduce conflict for ELSEIF resolved as shift
    ELSE            reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    $end            reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    SALTO           reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ELSEIF          shift and go to state 42

  ! ELSEIF          [ reduce using rule 51 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .) ]

    elseif                         shift and go to state 244

state 238

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW . OBJETO LPAREN RPAREN EOL mas_atributos

    OBJETO          shift and go to state 245


state 239

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR . ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    ASIGNACION      shift and go to state 246


state 240

    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA . RPAREN LBRACE lineas RBRACE
    (130) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA . RPAREN LBRACE SALTO lineas SALTO RBRACE

    RPAREN          shift and go to state 247


state 241

    (129) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA . RPAREN LBRACE lineas RBRACE

    RPAREN          shift and go to state 248


state 242

    (99) array_l -> ARRAY LPAREN elementos RPAREN COMA . lista
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (75) numero -> . ENTERO
    (76) numero -> . FLOTANTE

    CADENA          shift and go to state 215
    VAR             shift and go to state 158
    ARRAY           shift and go to state 159
    BOOLEANO        shift and go to state 171
    ENTERO          shift and go to state 94
    FLOTANTE        shift and go to state 95

    lista                          shift and go to state 249
    palabras                       shift and go to state 163
    numeros                        shift and go to state 164
    variables                      shift and go to state 165
    array_l                        shift and go to state 166
    bool                           shift and go to state 167
    numero                         shift and go to state 170

state 243

    (28) diccionario -> clave_dic ASIGNACION MAYOR valor_dic COMA . diccionario
    (27) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic
    (28) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic COMA diccionario
    (29) clave_dic -> . ENTERO
    (30) clave_dic -> . CADENA

    ENTERO          shift and go to state 124
    CADENA          shift and go to state 125

    clave_dic                      shift and go to state 168
    diccionario                    shift and go to state 250

state 244

    (52) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .

    ELSE            reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    ELSEIF          reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    $end            reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    ECHO            reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    VAR             reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    COMNT           reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    WHILE           reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    IF              reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    FOR             reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    RBRACE          reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    RETURN          reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    SALTO           reduce using rule 52 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)


state 245

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO . LPAREN RPAREN EOL mas_atributos

    LPAREN          shift and go to state 251


state 246

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION . NEW OBJETO LPAREN RPAREN EOL mas_atributos

    NEW             shift and go to state 252


state 247

    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN . LBRACE lineas RBRACE
    (130) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN . LBRACE SALTO lineas SALTO RBRACE

    LBRACE          shift and go to state 253


state 248

    (129) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN . LBRACE lineas RBRACE

    LBRACE          shift and go to state 254


state 249

    (99) array_l -> ARRAY LPAREN elementos RPAREN COMA lista .

    RPAREN          reduce using rule 99 (array_l -> ARRAY LPAREN elementos RPAREN COMA lista .)
    COMA            reduce using rule 99 (array_l -> ARRAY LPAREN elementos RPAREN COMA lista .)


state 250

    (28) diccionario -> clave_dic ASIGNACION MAYOR valor_dic COMA diccionario .

    RPAREN          reduce using rule 28 (diccionario -> clave_dic ASIGNACION MAYOR valor_dic COMA diccionario .)


state 251

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN . RPAREN EOL mas_atributos

    RPAREN          shift and go to state 255


state 252

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW . OBJETO LPAREN RPAREN EOL mas_atributos

    OBJETO          shift and go to state 256


state 253

    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE . lineas RBRACE
    (130) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE . SALTO lineas SALTO RBRACE
    (139) lineas -> . linea
    (140) lineas -> . linea lineas
    (131) linea -> . echo
    (132) linea -> . ECHO CADENA EOL
    (133) linea -> . ECHO VAR EOL
    (134) linea -> . VAR ASIGNACION CADENA EOL
    (135) linea -> . estructuracontrol
    (136) linea -> . comentario
    (137) linea -> . declaracion_numeros
    (138) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (43) estructuracontrol -> . while
    (44) estructuracontrol -> . if
    (45) estructuracontrol -> . for
    (83) comentario -> . COMNT
    (89) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (90) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (46) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (47) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (48) if -> . if else
    (49) if -> . if elseif else
    (50) if -> . if elseif
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    SALTO           shift and go to state 258
    ECHO            shift and go to state 131
    VAR             shift and go to state 132
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 257
    linea                          shift and go to state 129
    echo                           shift and go to state 130
    estructuracontrol              shift and go to state 133
    comentario                     shift and go to state 134
    declaracion_numeros            shift and go to state 135
    array                          shift and go to state 136
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 254

    (129) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE . lineas RBRACE
    (139) lineas -> . linea
    (140) lineas -> . linea lineas
    (131) linea -> . echo
    (132) linea -> . ECHO CADENA EOL
    (133) linea -> . ECHO VAR EOL
    (134) linea -> . VAR ASIGNACION CADENA EOL
    (135) linea -> . estructuracontrol
    (136) linea -> . comentario
    (137) linea -> . declaracion_numeros
    (138) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (43) estructuracontrol -> . while
    (44) estructuracontrol -> . if
    (45) estructuracontrol -> . for
    (83) comentario -> . COMNT
    (89) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (90) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (46) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (47) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (48) if -> . if else
    (49) if -> . if elseif else
    (50) if -> . if elseif
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 131
    VAR             shift and go to state 132
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 259
    linea                          shift and go to state 129
    echo                           shift and go to state 130
    estructuracontrol              shift and go to state 133
    comentario                     shift and go to state 134
    declaracion_numeros            shift and go to state 135
    array                          shift and go to state 136
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 255

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN . EOL mas_atributos

    EOL             shift and go to state 260


state 256

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO . LPAREN RPAREN EOL mas_atributos

    LPAREN          shift and go to state 261


state 257

    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 262


state 258

    (130) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO . lineas SALTO RBRACE
    (139) lineas -> . linea
    (140) lineas -> . linea lineas
    (131) linea -> . echo
    (132) linea -> . ECHO CADENA EOL
    (133) linea -> . ECHO VAR EOL
    (134) linea -> . VAR ASIGNACION CADENA EOL
    (135) linea -> . estructuracontrol
    (136) linea -> . comentario
    (137) linea -> . declaracion_numeros
    (138) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (43) estructuracontrol -> . while
    (44) estructuracontrol -> . if
    (45) estructuracontrol -> . for
    (83) comentario -> . COMNT
    (89) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (90) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (46) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (47) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (48) if -> . if else
    (49) if -> . if elseif else
    (50) if -> . if elseif
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (129) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (130) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 131
    VAR             shift and go to state 132
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 263
    linea                          shift and go to state 129
    echo                           shift and go to state 130
    estructuracontrol              shift and go to state 133
    comentario                     shift and go to state 134
    declaracion_numeros            shift and go to state 135
    array                          shift and go to state 136
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 259

    (129) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 264


state 260

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL . mas_atributos
    (126) mas_atributos -> . atributo
    (127) mas_atributos -> . atributo mas_atributos
    (125) atributo -> . VAR RESTA MAYOR ID ASIGNACION CADENA EOL

    VAR             shift and go to state 265

    mas_atributos                  shift and go to state 266
    atributo                       shift and go to state 267

state 261

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN . RPAREN EOL mas_atributos

    RPAREN          shift and go to state 268


state 262

    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .

    $end            reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    SALTO           reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)


state 263

    (130) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas . SALTO RBRACE

    SALTO           shift and go to state 269


state 264

    (129) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .

    $end            reduce using rule 129 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 129 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 129 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 129 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 129 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 129 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 129 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 129 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 129 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    SALTO           reduce using rule 129 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)


state 265

    (125) atributo -> VAR . RESTA MAYOR ID ASIGNACION CADENA EOL

    RESTA           shift and go to state 270


state 266

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos .

    $end            reduce using rule 118 (objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos .)


state 267

    (126) mas_atributos -> atributo .
    (127) mas_atributos -> atributo . mas_atributos
    (126) mas_atributos -> . atributo
    (127) mas_atributos -> . atributo mas_atributos
    (125) atributo -> . VAR RESTA MAYOR ID ASIGNACION CADENA EOL

    $end            reduce using rule 126 (mas_atributos -> atributo .)
    VAR             shift and go to state 265

    atributo                       shift and go to state 267
    mas_atributos                  shift and go to state 271

state 268

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN . EOL mas_atributos

    EOL             shift and go to state 272


state 269

    (130) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO . RBRACE

    RBRACE          shift and go to state 273


state 270

    (125) atributo -> VAR RESTA . MAYOR ID ASIGNACION CADENA EOL

    MAYOR           shift and go to state 274


state 271

    (127) mas_atributos -> atributo mas_atributos .

    $end            reduce using rule 127 (mas_atributos -> atributo mas_atributos .)


state 272

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL . mas_atributos
    (126) mas_atributos -> . atributo
    (127) mas_atributos -> . atributo mas_atributos
    (125) atributo -> . VAR RESTA MAYOR ID ASIGNACION CADENA EOL

    VAR             shift and go to state 265

    mas_atributos                  shift and go to state 275
    atributo                       shift and go to state 267

state 273

    (130) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .

    $end            reduce using rule 130 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    ECHO            reduce using rule 130 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    VAR             reduce using rule 130 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    COMNT           reduce using rule 130 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    WHILE           reduce using rule 130 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    IF              reduce using rule 130 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    FOR             reduce using rule 130 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    RBRACE          reduce using rule 130 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    RETURN          reduce using rule 130 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    SALTO           reduce using rule 130 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)


state 274

    (125) atributo -> VAR RESTA MAYOR . ID ASIGNACION CADENA EOL

    ID              shift and go to state 276


state 275

    (119) objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos .

    $end            reduce using rule 119 (objeto -> CLASE OBJETO EXTENDS OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos .)


state 276

    (125) atributo -> VAR RESTA MAYOR ID . ASIGNACION CADENA EOL

    ASIGNACION      shift and go to state 277


state 277

    (125) atributo -> VAR RESTA MAYOR ID ASIGNACION . CADENA EOL

    CADENA          shift and go to state 278


state 278

    (125) atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA . EOL

    EOL             shift and go to state 279


state 279

    (125) atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL .

    VAR             reduce using rule 125 (atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL .)
    $end            reduce using rule 125 (atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 40 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 56 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 56 resolved as shift
WARNING: shift/reduce conflict for MULT in state 56 resolved as shift
WARNING: shift/reduce conflict for DIV in state 56 resolved as shift
WARNING: shift/reduce conflict for POT in state 56 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 57 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 57 resolved as shift
WARNING: shift/reduce conflict for MULT in state 57 resolved as shift
WARNING: shift/reduce conflict for DIV in state 57 resolved as shift
WARNING: shift/reduce conflict for POT in state 57 resolved as shift
WARNING: shift/reduce conflict for SALTO in state 58 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 129 resolved as shift
WARNING: shift/reduce conflict for VAR in state 129 resolved as shift
WARNING: shift/reduce conflict for COMNT in state 129 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 129 resolved as shift
WARNING: shift/reduce conflict for IF in state 129 resolved as shift
WARNING: shift/reduce conflict for FOR in state 129 resolved as shift
WARNING: shift/reduce conflict for COMA in state 158 resolved as shift
WARNING: shift/reduce conflict for COMA in state 170 resolved as shift
WARNING: shift/reduce conflict for COMA in state 171 resolved as shift
WARNING: shift/reduce conflict for EOL in state 176 resolved as shift
WARNING: shift/reduce conflict for EOL in state 177 resolved as shift
WARNING: shift/reduce conflict for COMA in state 215 resolved as shift
WARNING: shift/reduce conflict for COMA in state 230 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 237 resolved as shift
WARNING: reduce/reduce conflict in state 29 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (operacion -> ENTERO) in state 29
WARNING: reduce/reduce conflict in state 30 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (operacion -> FLOTANTE) in state 30
WARNING: reduce/reduce conflict in state 31 resolved using rule (valor -> BOOLEANO)
WARNING: rejected rule (argumentologico -> BOOLEANO) in state 31
WARNING: reduce/reduce conflict in state 56 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (numero -> ENTERO) in state 56
WARNING: reduce/reduce conflict in state 56 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (operacion -> ENTERO) in state 56
WARNING: reduce/reduce conflict in state 57 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (numero -> FLOTANTE) in state 57
WARNING: reduce/reduce conflict in state 57 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (operacion -> FLOTANTE) in state 57
