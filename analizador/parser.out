Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNAR
    BREAK
    CASE
    COMILLA_DOBLE
    COMILLA_DOBLE_CADENA
    COMILLA_SIMPLE
    COMILLA_SIMPLE_CADENA
    CONTINUE
    DICT
    DIV_ASIGNAR
    DO
    DOSPUNTOS
    ENDWHILE
    FOREACH
    GLOBAL
    INDENT
    MAYOR_MENOR
    MENOR_MAYOR
    MODULO
    MULT_ASIGNAR
    POT_ASIGNAR
    PUNTO
    RESTA_ASIGNAR
    SET
    SUMA_ASIGNAR
    SWITCH
    TUPLE
    VARIABLE_OBJETO

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> asignacion
Rule 2     sentencia -> echo
Rule 3     sentencia -> estructuracontrol
Rule 4     sentencia -> comentario
Rule 5     sentencia -> declaracion_numeros
Rule 6     sentencia -> array
Rule 7     sentencia -> funcion
Rule 8     sentencia -> readline
Rule 9     sentencia -> ingreso_datos
Rule 10    sentencia -> objeto
Rule 11    sentencia -> expresionAritmetica
Rule 12    sentencia -> echo SALTO
Rule 13    asignacion -> VAR ASIGNACION valor EOL
Rule 14    echo -> ECHO valores EOL
Rule 15    echo -> ECHO valores EOL SALTO
Rule 16    valores -> valor
Rule 17    valores -> valor COMA valores
Rule 18    valor -> ENTERO
Rule 19    valor -> FLOTANTE
Rule 20    valor -> BOOLEANO
Rule 21    valor -> CADENA
Rule 22    valor -> VAR
Rule 23    valor -> VARIABLE_ARRAY
Rule 24    valor -> operacion
Rule 25    valor -> argumentologico
Rule 26    valor -> array_index
Rule 27    array_index -> VAR multi_dimensiones
Rule 28    multi_dimensiones -> LBRACKET clave_dic RBRACKET
Rule 29    multi_dimensiones -> LBRACKET clave_dic RBRACKET multi_dimensiones
Rule 30    operacion -> ENTERO
Rule 31    operacion -> FLOTANTE
Rule 32    operacion -> ENTERO operador operacion
Rule 33    operacion -> FLOTANTE operador operacion
Rule 34    estructuracontrol -> while
Rule 35    estructuracontrol -> if
Rule 36    estructuracontrol -> for
Rule 37    while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
Rule 38    if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE
Rule 39    if -> if else
Rule 40    if -> if elseif else
Rule 41    if -> if elseif
Rule 42    elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE
Rule 43    elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif
Rule 44    else -> ELSE LBRACE lineas RBRACE
Rule 45    condicion -> argumentologico
Rule 46    condicion -> argumentologico conector_logico condicion
Rule 47    vacio -> EOL
Rule 48    conector_logico -> AND
Rule 49    conector_logico -> OR
Rule 50    valor_logico -> numero
Rule 51    valor_logico -> VAR
Rule 52    argumentologico -> VAR operador_logico VAR
Rule 53    argumentologico -> numero operador_logico numero
Rule 54    argumentologico -> VAR operador_logico numero
Rule 55    argumentologico -> VAR IGUAL BOOLEANO
Rule 56    argumentologico -> VAR IGUAL CADENA
Rule 57    argumentologico -> VAR DIFERENTE BOOLEANO
Rule 58    argumentologico -> VAR DIFERENTE CADENA
Rule 59    argumentologico -> numero operador_logico VAR
Rule 60    argumentologico -> BOOLEANO IGUAL VAR
Rule 61    argumentologico -> CADENA IGUAL VAR
Rule 62    argumentologico -> CADENA IGUAL CADENA
Rule 63    argumentologico -> CADENA DIFERENTE VAR
Rule 64    argumentologico -> CADENA DIFERENTE CADENA
Rule 65    argumentologico -> BOOLEANO
Rule 66    numero -> ENTERO
Rule 67    numero -> FLOTANTE
Rule 68    operador_logico -> IGUAL
Rule 69    operador_logico -> DIFERENTE
Rule 70    operador_logico -> MENOR
Rule 71    operador_logico -> MAYOR
Rule 72    operador_logico -> MENOR_IGUAL
Rule 73    operador_logico -> MAYOR_IGUAL
Rule 74    comentario -> COMNT
Rule 75    operador -> SUMA
Rule 76    operador -> RESTA
Rule 77    operador -> MULT
Rule 78    operador -> DIV
Rule 79    operador -> POT
Rule 80    declaracion_numeros -> VAR ASIGNACION numero EOL
Rule 81    array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
Rule 82    elementos -> lista
Rule 83    elementos -> diccionario
Rule 84    diccionario -> clave_dic ASIGNACION MAYOR valor_dic
Rule 85    diccionario -> clave_dic ASIGNACION MAYOR valor_dic COMA diccionario
Rule 86    clave_dic -> ENTERO
Rule 87    clave_dic -> CADENA
Rule 88    valor_dic -> numero
Rule 89    valor_dic -> CADENA
Rule 90    valor_dic -> VAR
Rule 91    valor_dic -> BOOLEANO
Rule 92    valor_dic -> array_l
Rule 93    lista -> palabras
Rule 94    lista -> numeros
Rule 95    lista -> variables
Rule 96    lista -> array_l
Rule 97    lista -> bool
Rule 98    array_l -> ARRAY LPAREN elementos RPAREN
Rule 99    array_l -> ARRAY LPAREN elementos RPAREN COMA lista
Rule 100   palabras -> CADENA
Rule 101   palabras -> CADENA COMA lista
Rule 102   numeros -> numero
Rule 103   numeros -> numero COMA lista
Rule 104   variables -> VAR
Rule 105   variables -> VAR COMA lista
Rule 106   bool -> BOOLEANO
Rule 107   bool -> BOOLEANO COMA lista
Rule 108   funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE
Rule 109   tipo_funcion -> FUNCION
Rule 110   tipo_funcion -> VARIABLE_FUNCION
Rule 111   final_funcion -> RETURN VAR EOL
Rule 112   final_funcion -> lineas final_funcion
Rule 113   cuerpo_funcion -> declaracion_numeros final_funcion
Rule 114   cuerpo_funcion -> array final_funcion
Rule 115   cuerpo_funcion -> estructuracontrol final_funcion
Rule 116   readline -> READLINE LPAREN CADENA RPAREN EOL
Rule 117   ingreso_datos -> VAR ASIGNACION readline
Rule 118   objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
Rule 119   cuerpo_objeto -> PUBLIC VAR EOL
Rule 120   cuerpo_objeto -> PUBLIC asignacion
Rule 121   mas_objetos -> cuerpo_objeto
Rule 122   mas_objetos -> cuerpo_objeto mas_objetos
Rule 123   atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL
Rule 124   mas_atributos -> atributo
Rule 125   mas_atributos -> atributo mas_atributos
Rule 126   for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
Rule 127   for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
Rule 128   for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE
Rule 129   linea -> echo
Rule 130   linea -> ECHO CADENA EOL
Rule 131   linea -> ECHO VAR EOL
Rule 132   linea -> VAR ASIGNACION CADENA EOL
Rule 133   linea -> estructuracontrol
Rule 134   linea -> comentario
Rule 135   linea -> declaracion_numeros
Rule 136   linea -> array
Rule 137   lineas -> linea
Rule 138   lineas -> linea lineas
Rule 139   expresionAritmetica -> VAR ASIGNACION numero masTerminos EOL
Rule 140   expresionAritmetica -> VAR ASIGNACION VAR masTerminos EOL
Rule 141   termino -> operador numero
Rule 142   termino -> operador VAR
Rule 143   masTerminos -> termino
Rule 144   masTerminos -> termino masTerminos

Terminals, with rules where they appear

AND                  : 48
ARRAY                : 81 98 99
ASIGNACION           : 13 80 81 84 85 117 118 123 132 139 140
ASIGNAR              : 
BOOLEANO             : 20 55 57 60 65 91 106 107
BREAK                : 
CADENA               : 21 56 58 61 62 62 63 64 64 87 89 100 101 116 123 130 132
CASE                 : 
CLASE                : 118
COMA                 : 17 85 99 101 103 105 107
COMILLA_DOBLE        : 
COMILLA_DOBLE_CADENA : 
COMILLA_SIMPLE       : 
COMILLA_SIMPLE_CADENA : 
COMNT                : 74
CONTINUE             : 
DICT                 : 
DIFERENTE            : 57 58 63 64 69
DIV                  : 78
DIV_ASIGNAR          : 
DO                   : 
DOSPUNTOS            : 
ECHO                 : 14 15 130 131
ELSE                 : 44
ELSEIF               : 42 43
ENDWHILE             : 
ENTERO               : 18 30 32 66 86
EOL                  : 13 14 15 47 80 81 111 116 118 119 123 126 127 128 130 131 132 139 140
FLOTANTE             : 19 31 33 67
FOR                  : 126 127 128
FOREACH              : 
FUNCION              : 109
FUNCTION             : 108
GLOBAL               : 
ID                   : 123
IF                   : 38
IGUAL                : 55 56 60 61 62 68
INDENT               : 
LBRACE               : 37 38 42 43 44 108 118 126 127 128
LBRACKET             : 28 29
LPAREN               : 37 38 42 43 81 98 99 116 118 126 127 128
MAYOR                : 71 84 85 123
MAYOR_IGUAL          : 73
MAYOR_MENOR          : 
MENOR                : 70
MENOR_IGUAL          : 72
MENOR_MAYOR          : 
MODULO               : 
MULT                 : 77
MULT_ASIGNAR         : 
NEW                  : 118
OBJETO               : 118 118
OR                   : 49
POT                  : 79
POT_ASIGNAR          : 
PUBLIC               : 119 120
PUNTO                : 
RBRACE               : 37 38 42 43 44 108 118 126 127 128
RBRACKET             : 28 29
READLINE             : 116
RESTA                : 76 123 127 127
RESTA_ASIGNAR        : 
RETURN               : 111
RPAREN               : 37 38 42 43 81 98 99 116 118 126 127 128
SALTO                : 12 15 128 128
SET                  : 
SUMA                 : 75 126 126 128 128
SUMA_ASIGNAR         : 
SWITCH               : 
TUPLE                : 
VAR                  : 13 22 27 51 52 52 54 55 56 57 58 59 60 61 63 80 81 90 104 105 111 117 118 119 123 126 127 128 131 132 139 140 140 142
VARIABLE_ARRAY       : 23
VARIABLE_FUNCION     : 110
VARIABLE_OBJETO      : 
WHILE                : 37
error                : 

Nonterminals, with rules where they appear

argumentologico      : 25 45 46 126 127 128
array                : 6 114 136
array_index          : 26
array_l              : 92 96
asignacion           : 1 120 126 127 128
atributo             : 124 125
bool                 : 97
clave_dic            : 28 29 84 85
comentario           : 4 134
condicion            : 37 38 42 43 46
conector_logico      : 46
cuerpo_funcion       : 
cuerpo_objeto        : 121 122
declaracion_numeros  : 5 113 135
diccionario          : 83 85
echo                 : 2 12 129
elementos            : 81 98 99
else                 : 39 40
elseif               : 40 41 43
estructuracontrol    : 3 115 133
expresionAritmetica  : 11
final_funcion        : 108 112 113 114 115
for                  : 36
funcion              : 7
if                   : 35 39 40 41
ingreso_datos        : 9
linea                : 137 138
lineas               : 37 38 42 43 44 112 126 127 128 138
lista                : 82 99 101 103 105 107
masTerminos          : 139 140 144
mas_atributos        : 118 125
mas_objetos          : 118 122
multi_dimensiones    : 27 29
numero               : 50 53 53 54 59 80 88 102 103 139 141
numeros              : 94
objeto               : 10
operacion            : 24 32 33
operador             : 32 33 141 142
operador_logico      : 52 53 54 59
palabras             : 93
readline             : 8 117
sentencia            : 0
termino              : 143 144
tipo_funcion         : 108
vacio                : 
valor                : 13 16 17
valor_dic            : 84 85
valor_logico         : 
valores              : 14 15 17
variables            : 95
while                : 34

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . asignacion
    (2) sentencia -> . echo
    (3) sentencia -> . estructuracontrol
    (4) sentencia -> . comentario
    (5) sentencia -> . declaracion_numeros
    (6) sentencia -> . array
    (7) sentencia -> . funcion
    (8) sentencia -> . readline
    (9) sentencia -> . ingreso_datos
    (10) sentencia -> . objeto
    (11) sentencia -> . expresionAritmetica
    (12) sentencia -> . echo SALTO
    (13) asignacion -> . VAR ASIGNACION valor EOL
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (34) estructuracontrol -> . while
    (35) estructuracontrol -> . if
    (36) estructuracontrol -> . for
    (74) comentario -> . COMNT
    (80) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (81) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (108) funcion -> . FUNCTION tipo_funcion LBRACE final_funcion RBRACE
    (116) readline -> . READLINE LPAREN CADENA RPAREN EOL
    (117) ingreso_datos -> . VAR ASIGNACION readline
    (118) objeto -> . CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
    (139) expresionAritmetica -> . VAR ASIGNACION numero masTerminos EOL
    (140) expresionAritmetica -> . VAR ASIGNACION VAR masTerminos EOL
    (37) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (38) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (39) if -> . if else
    (40) if -> . if elseif else
    (41) if -> . if elseif
    (126) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    VAR             shift and go to state 13
    ECHO            shift and go to state 14
    COMNT           shift and go to state 18
    FUNCTION        shift and go to state 19
    READLINE        shift and go to state 20
    CLASE           shift and go to state 21
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    sentencia                      shift and go to state 1
    asignacion                     shift and go to state 2
    echo                           shift and go to state 3
    estructuracontrol              shift and go to state 4
    comentario                     shift and go to state 5
    declaracion_numeros            shift and go to state 6
    array                          shift and go to state 7
    funcion                        shift and go to state 8
    readline                       shift and go to state 9
    ingreso_datos                  shift and go to state 10
    objeto                         shift and go to state 11
    expresionAritmetica            shift and go to state 12
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> asignacion .

    $end            reduce using rule 1 (sentencia -> asignacion .)


state 3

    (2) sentencia -> echo .
    (12) sentencia -> echo . SALTO

    $end            reduce using rule 2 (sentencia -> echo .)
    SALTO           shift and go to state 25


state 4

    (3) sentencia -> estructuracontrol .

    $end            reduce using rule 3 (sentencia -> estructuracontrol .)


state 5

    (4) sentencia -> comentario .

    $end            reduce using rule 4 (sentencia -> comentario .)


state 6

    (5) sentencia -> declaracion_numeros .

    $end            reduce using rule 5 (sentencia -> declaracion_numeros .)


state 7

    (6) sentencia -> array .

    $end            reduce using rule 6 (sentencia -> array .)


state 8

    (7) sentencia -> funcion .

    $end            reduce using rule 7 (sentencia -> funcion .)


state 9

    (8) sentencia -> readline .

    $end            reduce using rule 8 (sentencia -> readline .)


state 10

    (9) sentencia -> ingreso_datos .

    $end            reduce using rule 9 (sentencia -> ingreso_datos .)


state 11

    (10) sentencia -> objeto .

    $end            reduce using rule 10 (sentencia -> objeto .)


state 12

    (11) sentencia -> expresionAritmetica .

    $end            reduce using rule 11 (sentencia -> expresionAritmetica .)


state 13

    (13) asignacion -> VAR . ASIGNACION valor EOL
    (80) declaracion_numeros -> VAR . ASIGNACION numero EOL
    (81) array -> VAR . ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (117) ingreso_datos -> VAR . ASIGNACION readline
    (139) expresionAritmetica -> VAR . ASIGNACION numero masTerminos EOL
    (140) expresionAritmetica -> VAR . ASIGNACION VAR masTerminos EOL

    ASIGNACION      shift and go to state 26


state 14

    (14) echo -> ECHO . valores EOL
    (15) echo -> ECHO . valores EOL SALTO
    (16) valores -> . valor
    (17) valores -> . valor COMA valores
    (18) valor -> . ENTERO
    (19) valor -> . FLOTANTE
    (20) valor -> . BOOLEANO
    (21) valor -> . CADENA
    (22) valor -> . VAR
    (23) valor -> . VARIABLE_ARRAY
    (24) valor -> . operacion
    (25) valor -> . argumentologico
    (26) valor -> . array_index
    (30) operacion -> . ENTERO
    (31) operacion -> . FLOTANTE
    (32) operacion -> . ENTERO operador operacion
    (33) operacion -> . FLOTANTE operador operacion
    (52) argumentologico -> . VAR operador_logico VAR
    (53) argumentologico -> . numero operador_logico numero
    (54) argumentologico -> . VAR operador_logico numero
    (55) argumentologico -> . VAR IGUAL BOOLEANO
    (56) argumentologico -> . VAR IGUAL CADENA
    (57) argumentologico -> . VAR DIFERENTE BOOLEANO
    (58) argumentologico -> . VAR DIFERENTE CADENA
    (59) argumentologico -> . numero operador_logico VAR
    (60) argumentologico -> . BOOLEANO IGUAL VAR
    (61) argumentologico -> . CADENA IGUAL VAR
    (62) argumentologico -> . CADENA IGUAL CADENA
    (63) argumentologico -> . CADENA DIFERENTE VAR
    (64) argumentologico -> . CADENA DIFERENTE CADENA
    (65) argumentologico -> . BOOLEANO
    (27) array_index -> . VAR multi_dimensiones
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    BOOLEANO        shift and go to state 31
    CADENA          shift and go to state 32
    VAR             shift and go to state 33
    VARIABLE_ARRAY  shift and go to state 34

    valores                        shift and go to state 27
    valor                          shift and go to state 28
    operacion                      shift and go to state 35
    argumentologico                shift and go to state 36
    array_index                    shift and go to state 37
    numero                         shift and go to state 38

state 15

    (34) estructuracontrol -> while .

    $end            reduce using rule 34 (estructuracontrol -> while .)
    ECHO            reduce using rule 34 (estructuracontrol -> while .)
    VAR             reduce using rule 34 (estructuracontrol -> while .)
    COMNT           reduce using rule 34 (estructuracontrol -> while .)
    WHILE           reduce using rule 34 (estructuracontrol -> while .)
    IF              reduce using rule 34 (estructuracontrol -> while .)
    FOR             reduce using rule 34 (estructuracontrol -> while .)
    RBRACE          reduce using rule 34 (estructuracontrol -> while .)
    RETURN          reduce using rule 34 (estructuracontrol -> while .)
    SALTO           reduce using rule 34 (estructuracontrol -> while .)


state 16

    (35) estructuracontrol -> if .
    (39) if -> if . else
    (40) if -> if . elseif else
    (41) if -> if . elseif
    (44) else -> . ELSE LBRACE lineas RBRACE
    (42) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (43) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif

    $end            reduce using rule 35 (estructuracontrol -> if .)
    ECHO            reduce using rule 35 (estructuracontrol -> if .)
    VAR             reduce using rule 35 (estructuracontrol -> if .)
    COMNT           reduce using rule 35 (estructuracontrol -> if .)
    WHILE           reduce using rule 35 (estructuracontrol -> if .)
    IF              reduce using rule 35 (estructuracontrol -> if .)
    FOR             reduce using rule 35 (estructuracontrol -> if .)
    RBRACE          reduce using rule 35 (estructuracontrol -> if .)
    RETURN          reduce using rule 35 (estructuracontrol -> if .)
    SALTO           reduce using rule 35 (estructuracontrol -> if .)
    ELSE            shift and go to state 41
    ELSEIF          shift and go to state 42

    else                           shift and go to state 39
    elseif                         shift and go to state 40

state 17

    (36) estructuracontrol -> for .

    $end            reduce using rule 36 (estructuracontrol -> for .)
    ECHO            reduce using rule 36 (estructuracontrol -> for .)
    VAR             reduce using rule 36 (estructuracontrol -> for .)
    COMNT           reduce using rule 36 (estructuracontrol -> for .)
    WHILE           reduce using rule 36 (estructuracontrol -> for .)
    IF              reduce using rule 36 (estructuracontrol -> for .)
    FOR             reduce using rule 36 (estructuracontrol -> for .)
    RBRACE          reduce using rule 36 (estructuracontrol -> for .)
    RETURN          reduce using rule 36 (estructuracontrol -> for .)
    SALTO           reduce using rule 36 (estructuracontrol -> for .)


state 18

    (74) comentario -> COMNT .

    $end            reduce using rule 74 (comentario -> COMNT .)
    ECHO            reduce using rule 74 (comentario -> COMNT .)
    VAR             reduce using rule 74 (comentario -> COMNT .)
    COMNT           reduce using rule 74 (comentario -> COMNT .)
    WHILE           reduce using rule 74 (comentario -> COMNT .)
    IF              reduce using rule 74 (comentario -> COMNT .)
    FOR             reduce using rule 74 (comentario -> COMNT .)
    RBRACE          reduce using rule 74 (comentario -> COMNT .)
    RETURN          reduce using rule 74 (comentario -> COMNT .)
    SALTO           reduce using rule 74 (comentario -> COMNT .)


state 19

    (108) funcion -> FUNCTION . tipo_funcion LBRACE final_funcion RBRACE
    (109) tipo_funcion -> . FUNCION
    (110) tipo_funcion -> . VARIABLE_FUNCION

    FUNCION         shift and go to state 44
    VARIABLE_FUNCION shift and go to state 45

    tipo_funcion                   shift and go to state 43

state 20

    (116) readline -> READLINE . LPAREN CADENA RPAREN EOL

    LPAREN          shift and go to state 46


state 21

    (118) objeto -> CLASE . OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    OBJETO          shift and go to state 47


state 22

    (37) while -> WHILE . LPAREN condicion RPAREN LBRACE lineas RBRACE

    LPAREN          shift and go to state 48


state 23

    (38) if -> IF . LPAREN condicion RPAREN LBRACE lineas RBRACE

    LPAREN          shift and go to state 49


state 24

    (126) for -> FOR . LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> FOR . LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> FOR . LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    LPAREN          shift and go to state 50


state 25

    (12) sentencia -> echo SALTO .

    $end            reduce using rule 12 (sentencia -> echo SALTO .)


state 26

    (13) asignacion -> VAR ASIGNACION . valor EOL
    (80) declaracion_numeros -> VAR ASIGNACION . numero EOL
    (81) array -> VAR ASIGNACION . ARRAY LPAREN elementos RPAREN EOL
    (117) ingreso_datos -> VAR ASIGNACION . readline
    (139) expresionAritmetica -> VAR ASIGNACION . numero masTerminos EOL
    (140) expresionAritmetica -> VAR ASIGNACION . VAR masTerminos EOL
    (18) valor -> . ENTERO
    (19) valor -> . FLOTANTE
    (20) valor -> . BOOLEANO
    (21) valor -> . CADENA
    (22) valor -> . VAR
    (23) valor -> . VARIABLE_ARRAY
    (24) valor -> . operacion
    (25) valor -> . argumentologico
    (26) valor -> . array_index
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE
    (116) readline -> . READLINE LPAREN CADENA RPAREN EOL
    (30) operacion -> . ENTERO
    (31) operacion -> . FLOTANTE
    (32) operacion -> . ENTERO operador operacion
    (33) operacion -> . FLOTANTE operador operacion
    (52) argumentologico -> . VAR operador_logico VAR
    (53) argumentologico -> . numero operador_logico numero
    (54) argumentologico -> . VAR operador_logico numero
    (55) argumentologico -> . VAR IGUAL BOOLEANO
    (56) argumentologico -> . VAR IGUAL CADENA
    (57) argumentologico -> . VAR DIFERENTE BOOLEANO
    (58) argumentologico -> . VAR DIFERENTE CADENA
    (59) argumentologico -> . numero operador_logico VAR
    (60) argumentologico -> . BOOLEANO IGUAL VAR
    (61) argumentologico -> . CADENA IGUAL VAR
    (62) argumentologico -> . CADENA IGUAL CADENA
    (63) argumentologico -> . CADENA DIFERENTE VAR
    (64) argumentologico -> . CADENA DIFERENTE CADENA
    (65) argumentologico -> . BOOLEANO
    (27) array_index -> . VAR multi_dimensiones

    ARRAY           shift and go to state 54
    VAR             shift and go to state 51
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEANO        shift and go to state 31
    CADENA          shift and go to state 32
    VARIABLE_ARRAY  shift and go to state 34
    READLINE        shift and go to state 20

    valor                          shift and go to state 52
    numero                         shift and go to state 53
    readline                       shift and go to state 55
    operacion                      shift and go to state 35
    argumentologico                shift and go to state 36
    array_index                    shift and go to state 37

state 27

    (14) echo -> ECHO valores . EOL
    (15) echo -> ECHO valores . EOL SALTO

    EOL             shift and go to state 58


state 28

    (16) valores -> valor .
    (17) valores -> valor . COMA valores

    EOL             reduce using rule 16 (valores -> valor .)
    COMA            shift and go to state 59


state 29

    (18) valor -> ENTERO .
    (30) operacion -> ENTERO .
    (32) operacion -> ENTERO . operador operacion
    (66) numero -> ENTERO .
    (75) operador -> . SUMA
    (76) operador -> . RESTA
    (77) operador -> . MULT
    (78) operador -> . DIV
    (79) operador -> . POT

  ! reduce/reduce conflict for COMA resolved using rule 18 (valor -> ENTERO .)
  ! reduce/reduce conflict for EOL resolved using rule 18 (valor -> ENTERO .)
    COMA            reduce using rule 18 (valor -> ENTERO .)
    EOL             reduce using rule 18 (valor -> ENTERO .)
    IGUAL           reduce using rule 66 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 66 (numero -> ENTERO .)
    MENOR           reduce using rule 66 (numero -> ENTERO .)
    MAYOR           reduce using rule 66 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 66 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 66 (numero -> ENTERO .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

  ! COMA            [ reduce using rule 30 (operacion -> ENTERO .) ]
  ! EOL             [ reduce using rule 30 (operacion -> ENTERO .) ]

    operador                       shift and go to state 60

state 30

    (19) valor -> FLOTANTE .
    (31) operacion -> FLOTANTE .
    (33) operacion -> FLOTANTE . operador operacion
    (67) numero -> FLOTANTE .
    (75) operador -> . SUMA
    (76) operador -> . RESTA
    (77) operador -> . MULT
    (78) operador -> . DIV
    (79) operador -> . POT

  ! reduce/reduce conflict for COMA resolved using rule 19 (valor -> FLOTANTE .)
  ! reduce/reduce conflict for EOL resolved using rule 19 (valor -> FLOTANTE .)
    COMA            reduce using rule 19 (valor -> FLOTANTE .)
    EOL             reduce using rule 19 (valor -> FLOTANTE .)
    IGUAL           reduce using rule 67 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 67 (numero -> FLOTANTE .)
    MENOR           reduce using rule 67 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 67 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 67 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 67 (numero -> FLOTANTE .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

  ! COMA            [ reduce using rule 31 (operacion -> FLOTANTE .) ]
  ! EOL             [ reduce using rule 31 (operacion -> FLOTANTE .) ]

    operador                       shift and go to state 66

state 31

    (20) valor -> BOOLEANO .
    (60) argumentologico -> BOOLEANO . IGUAL VAR
    (65) argumentologico -> BOOLEANO .

  ! reduce/reduce conflict for COMA resolved using rule 20 (valor -> BOOLEANO .)
  ! reduce/reduce conflict for EOL resolved using rule 20 (valor -> BOOLEANO .)
    COMA            reduce using rule 20 (valor -> BOOLEANO .)
    EOL             reduce using rule 20 (valor -> BOOLEANO .)
    IGUAL           shift and go to state 67

  ! COMA            [ reduce using rule 65 (argumentologico -> BOOLEANO .) ]
  ! EOL             [ reduce using rule 65 (argumentologico -> BOOLEANO .) ]


state 32

    (21) valor -> CADENA .
    (61) argumentologico -> CADENA . IGUAL VAR
    (62) argumentologico -> CADENA . IGUAL CADENA
    (63) argumentologico -> CADENA . DIFERENTE VAR
    (64) argumentologico -> CADENA . DIFERENTE CADENA

    COMA            reduce using rule 21 (valor -> CADENA .)
    EOL             reduce using rule 21 (valor -> CADENA .)
    IGUAL           shift and go to state 68
    DIFERENTE       shift and go to state 69


state 33

    (22) valor -> VAR .
    (52) argumentologico -> VAR . operador_logico VAR
    (54) argumentologico -> VAR . operador_logico numero
    (55) argumentologico -> VAR . IGUAL BOOLEANO
    (56) argumentologico -> VAR . IGUAL CADENA
    (57) argumentologico -> VAR . DIFERENTE BOOLEANO
    (58) argumentologico -> VAR . DIFERENTE CADENA
    (27) array_index -> VAR . multi_dimensiones
    (68) operador_logico -> . IGUAL
    (69) operador_logico -> . DIFERENTE
    (70) operador_logico -> . MENOR
    (71) operador_logico -> . MAYOR
    (72) operador_logico -> . MENOR_IGUAL
    (73) operador_logico -> . MAYOR_IGUAL
    (28) multi_dimensiones -> . LBRACKET clave_dic RBRACKET
    (29) multi_dimensiones -> . LBRACKET clave_dic RBRACKET multi_dimensiones

    COMA            reduce using rule 22 (valor -> VAR .)
    EOL             reduce using rule 22 (valor -> VAR .)
    IGUAL           shift and go to state 71
    DIFERENTE       shift and go to state 72
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77
    LBRACKET        shift and go to state 78

    operador_logico                shift and go to state 70
    multi_dimensiones              shift and go to state 73

state 34

    (23) valor -> VARIABLE_ARRAY .

    COMA            reduce using rule 23 (valor -> VARIABLE_ARRAY .)
    EOL             reduce using rule 23 (valor -> VARIABLE_ARRAY .)


state 35

    (24) valor -> operacion .

    COMA            reduce using rule 24 (valor -> operacion .)
    EOL             reduce using rule 24 (valor -> operacion .)


state 36

    (25) valor -> argumentologico .

    COMA            reduce using rule 25 (valor -> argumentologico .)
    EOL             reduce using rule 25 (valor -> argumentologico .)


state 37

    (26) valor -> array_index .

    COMA            reduce using rule 26 (valor -> array_index .)
    EOL             reduce using rule 26 (valor -> array_index .)


state 38

    (53) argumentologico -> numero . operador_logico numero
    (59) argumentologico -> numero . operador_logico VAR
    (68) operador_logico -> . IGUAL
    (69) operador_logico -> . DIFERENTE
    (70) operador_logico -> . MENOR
    (71) operador_logico -> . MAYOR
    (72) operador_logico -> . MENOR_IGUAL
    (73) operador_logico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 80
    DIFERENTE       shift and go to state 81
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77

    operador_logico                shift and go to state 79

state 39

    (39) if -> if else .

    ELSE            reduce using rule 39 (if -> if else .)
    ELSEIF          reduce using rule 39 (if -> if else .)
    $end            reduce using rule 39 (if -> if else .)
    ECHO            reduce using rule 39 (if -> if else .)
    VAR             reduce using rule 39 (if -> if else .)
    COMNT           reduce using rule 39 (if -> if else .)
    WHILE           reduce using rule 39 (if -> if else .)
    IF              reduce using rule 39 (if -> if else .)
    FOR             reduce using rule 39 (if -> if else .)
    RBRACE          reduce using rule 39 (if -> if else .)
    RETURN          reduce using rule 39 (if -> if else .)
    SALTO           reduce using rule 39 (if -> if else .)


state 40

    (40) if -> if elseif . else
    (41) if -> if elseif .
    (44) else -> . ELSE LBRACE lineas RBRACE

  ! shift/reduce conflict for ELSE resolved as shift
    ELSEIF          reduce using rule 41 (if -> if elseif .)
    $end            reduce using rule 41 (if -> if elseif .)
    ECHO            reduce using rule 41 (if -> if elseif .)
    VAR             reduce using rule 41 (if -> if elseif .)
    COMNT           reduce using rule 41 (if -> if elseif .)
    WHILE           reduce using rule 41 (if -> if elseif .)
    IF              reduce using rule 41 (if -> if elseif .)
    FOR             reduce using rule 41 (if -> if elseif .)
    RBRACE          reduce using rule 41 (if -> if elseif .)
    RETURN          reduce using rule 41 (if -> if elseif .)
    SALTO           reduce using rule 41 (if -> if elseif .)
    ELSE            shift and go to state 41

  ! ELSE            [ reduce using rule 41 (if -> if elseif .) ]

    else                           shift and go to state 82

state 41

    (44) else -> ELSE . LBRACE lineas RBRACE

    LBRACE          shift and go to state 83


state 42

    (42) elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE lineas RBRACE
    (43) elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE lineas RBRACE elseif

    LPAREN          shift and go to state 84


state 43

    (108) funcion -> FUNCTION tipo_funcion . LBRACE final_funcion RBRACE

    LBRACE          shift and go to state 85


state 44

    (109) tipo_funcion -> FUNCION .

    LBRACE          reduce using rule 109 (tipo_funcion -> FUNCION .)


state 45

    (110) tipo_funcion -> VARIABLE_FUNCION .

    LBRACE          reduce using rule 110 (tipo_funcion -> VARIABLE_FUNCION .)


state 46

    (116) readline -> READLINE LPAREN . CADENA RPAREN EOL

    CADENA          shift and go to state 86


state 47

    (118) objeto -> CLASE OBJETO . LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    LBRACE          shift and go to state 87


state 48

    (37) while -> WHILE LPAREN . condicion RPAREN LBRACE lineas RBRACE
    (45) condicion -> . argumentologico
    (46) condicion -> . argumentologico conector_logico condicion
    (52) argumentologico -> . VAR operador_logico VAR
    (53) argumentologico -> . numero operador_logico numero
    (54) argumentologico -> . VAR operador_logico numero
    (55) argumentologico -> . VAR IGUAL BOOLEANO
    (56) argumentologico -> . VAR IGUAL CADENA
    (57) argumentologico -> . VAR DIFERENTE BOOLEANO
    (58) argumentologico -> . VAR DIFERENTE CADENA
    (59) argumentologico -> . numero operador_logico VAR
    (60) argumentologico -> . BOOLEANO IGUAL VAR
    (61) argumentologico -> . CADENA IGUAL VAR
    (62) argumentologico -> . CADENA IGUAL CADENA
    (63) argumentologico -> . CADENA DIFERENTE VAR
    (64) argumentologico -> . CADENA DIFERENTE CADENA
    (65) argumentologico -> . BOOLEANO
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    VAR             shift and go to state 90
    BOOLEANO        shift and go to state 91
    CADENA          shift and go to state 92
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    condicion                      shift and go to state 88
    argumentologico                shift and go to state 89
    numero                         shift and go to state 38

state 49

    (38) if -> IF LPAREN . condicion RPAREN LBRACE lineas RBRACE
    (45) condicion -> . argumentologico
    (46) condicion -> . argumentologico conector_logico condicion
    (52) argumentologico -> . VAR operador_logico VAR
    (53) argumentologico -> . numero operador_logico numero
    (54) argumentologico -> . VAR operador_logico numero
    (55) argumentologico -> . VAR IGUAL BOOLEANO
    (56) argumentologico -> . VAR IGUAL CADENA
    (57) argumentologico -> . VAR DIFERENTE BOOLEANO
    (58) argumentologico -> . VAR DIFERENTE CADENA
    (59) argumentologico -> . numero operador_logico VAR
    (60) argumentologico -> . BOOLEANO IGUAL VAR
    (61) argumentologico -> . CADENA IGUAL VAR
    (62) argumentologico -> . CADENA IGUAL CADENA
    (63) argumentologico -> . CADENA DIFERENTE VAR
    (64) argumentologico -> . CADENA DIFERENTE CADENA
    (65) argumentologico -> . BOOLEANO
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    VAR             shift and go to state 90
    BOOLEANO        shift and go to state 91
    CADENA          shift and go to state 92
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    condicion                      shift and go to state 95
    argumentologico                shift and go to state 89
    numero                         shift and go to state 38

state 50

    (126) for -> FOR LPAREN . asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> FOR LPAREN . asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> FOR LPAREN . asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE
    (13) asignacion -> . VAR ASIGNACION valor EOL

    VAR             shift and go to state 97

    asignacion                     shift and go to state 96

state 51

    (140) expresionAritmetica -> VAR ASIGNACION VAR . masTerminos EOL
    (22) valor -> VAR .
    (52) argumentologico -> VAR . operador_logico VAR
    (54) argumentologico -> VAR . operador_logico numero
    (55) argumentologico -> VAR . IGUAL BOOLEANO
    (56) argumentologico -> VAR . IGUAL CADENA
    (57) argumentologico -> VAR . DIFERENTE BOOLEANO
    (58) argumentologico -> VAR . DIFERENTE CADENA
    (27) array_index -> VAR . multi_dimensiones
    (143) masTerminos -> . termino
    (144) masTerminos -> . termino masTerminos
    (68) operador_logico -> . IGUAL
    (69) operador_logico -> . DIFERENTE
    (70) operador_logico -> . MENOR
    (71) operador_logico -> . MAYOR
    (72) operador_logico -> . MENOR_IGUAL
    (73) operador_logico -> . MAYOR_IGUAL
    (28) multi_dimensiones -> . LBRACKET clave_dic RBRACKET
    (29) multi_dimensiones -> . LBRACKET clave_dic RBRACKET multi_dimensiones
    (141) termino -> . operador numero
    (142) termino -> . operador VAR
    (75) operador -> . SUMA
    (76) operador -> . RESTA
    (77) operador -> . MULT
    (78) operador -> . DIV
    (79) operador -> . POT

    EOL             reduce using rule 22 (valor -> VAR .)
    IGUAL           shift and go to state 71
    DIFERENTE       shift and go to state 72
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77
    LBRACKET        shift and go to state 78
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

    masTerminos                    shift and go to state 98
    operador_logico                shift and go to state 70
    multi_dimensiones              shift and go to state 73
    termino                        shift and go to state 99
    operador                       shift and go to state 100

state 52

    (13) asignacion -> VAR ASIGNACION valor . EOL

    EOL             shift and go to state 101


state 53

    (80) declaracion_numeros -> VAR ASIGNACION numero . EOL
    (139) expresionAritmetica -> VAR ASIGNACION numero . masTerminos EOL
    (53) argumentologico -> numero . operador_logico numero
    (59) argumentologico -> numero . operador_logico VAR
    (143) masTerminos -> . termino
    (144) masTerminos -> . termino masTerminos
    (68) operador_logico -> . IGUAL
    (69) operador_logico -> . DIFERENTE
    (70) operador_logico -> . MENOR
    (71) operador_logico -> . MAYOR
    (72) operador_logico -> . MENOR_IGUAL
    (73) operador_logico -> . MAYOR_IGUAL
    (141) termino -> . operador numero
    (142) termino -> . operador VAR
    (75) operador -> . SUMA
    (76) operador -> . RESTA
    (77) operador -> . MULT
    (78) operador -> . DIV
    (79) operador -> . POT

    EOL             shift and go to state 102
    IGUAL           shift and go to state 80
    DIFERENTE       shift and go to state 81
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

    masTerminos                    shift and go to state 103
    operador_logico                shift and go to state 79
    termino                        shift and go to state 99
    operador                       shift and go to state 100

state 54

    (81) array -> VAR ASIGNACION ARRAY . LPAREN elementos RPAREN EOL

    LPAREN          shift and go to state 104


state 55

    (117) ingreso_datos -> VAR ASIGNACION readline .

    $end            reduce using rule 117 (ingreso_datos -> VAR ASIGNACION readline .)


state 56

    (18) valor -> ENTERO .
    (66) numero -> ENTERO .
    (30) operacion -> ENTERO .
    (32) operacion -> ENTERO . operador operacion
    (75) operador -> . SUMA
    (76) operador -> . RESTA
    (77) operador -> . MULT
    (78) operador -> . DIV
    (79) operador -> . POT

  ! reduce/reduce conflict for EOL resolved using rule 18 (valor -> ENTERO .)
  ! reduce/reduce conflict for EOL resolved using rule 18 (valor -> ENTERO .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
    EOL             reduce using rule 18 (valor -> ENTERO .)
    IGUAL           reduce using rule 66 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 66 (numero -> ENTERO .)
    MENOR           reduce using rule 66 (numero -> ENTERO .)
    MAYOR           reduce using rule 66 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 66 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 66 (numero -> ENTERO .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

  ! EOL             [ reduce using rule 66 (numero -> ENTERO .) ]
  ! SUMA            [ reduce using rule 66 (numero -> ENTERO .) ]
  ! RESTA           [ reduce using rule 66 (numero -> ENTERO .) ]
  ! MULT            [ reduce using rule 66 (numero -> ENTERO .) ]
  ! DIV             [ reduce using rule 66 (numero -> ENTERO .) ]
  ! POT             [ reduce using rule 66 (numero -> ENTERO .) ]
  ! EOL             [ reduce using rule 30 (operacion -> ENTERO .) ]

    operador                       shift and go to state 60

state 57

    (19) valor -> FLOTANTE .
    (67) numero -> FLOTANTE .
    (31) operacion -> FLOTANTE .
    (33) operacion -> FLOTANTE . operador operacion
    (75) operador -> . SUMA
    (76) operador -> . RESTA
    (77) operador -> . MULT
    (78) operador -> . DIV
    (79) operador -> . POT

  ! reduce/reduce conflict for EOL resolved using rule 19 (valor -> FLOTANTE .)
  ! reduce/reduce conflict for EOL resolved using rule 19 (valor -> FLOTANTE .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
    EOL             reduce using rule 19 (valor -> FLOTANTE .)
    IGUAL           reduce using rule 67 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 67 (numero -> FLOTANTE .)
    MENOR           reduce using rule 67 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 67 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 67 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 67 (numero -> FLOTANTE .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

  ! EOL             [ reduce using rule 67 (numero -> FLOTANTE .) ]
  ! SUMA            [ reduce using rule 67 (numero -> FLOTANTE .) ]
  ! RESTA           [ reduce using rule 67 (numero -> FLOTANTE .) ]
  ! MULT            [ reduce using rule 67 (numero -> FLOTANTE .) ]
  ! DIV             [ reduce using rule 67 (numero -> FLOTANTE .) ]
  ! POT             [ reduce using rule 67 (numero -> FLOTANTE .) ]
  ! EOL             [ reduce using rule 31 (operacion -> FLOTANTE .) ]

    operador                       shift and go to state 66

state 58

    (14) echo -> ECHO valores EOL .
    (15) echo -> ECHO valores EOL . SALTO

  ! shift/reduce conflict for SALTO resolved as shift
    $end            reduce using rule 14 (echo -> ECHO valores EOL .)
    ECHO            reduce using rule 14 (echo -> ECHO valores EOL .)
    VAR             reduce using rule 14 (echo -> ECHO valores EOL .)
    COMNT           reduce using rule 14 (echo -> ECHO valores EOL .)
    WHILE           reduce using rule 14 (echo -> ECHO valores EOL .)
    IF              reduce using rule 14 (echo -> ECHO valores EOL .)
    FOR             reduce using rule 14 (echo -> ECHO valores EOL .)
    RBRACE          reduce using rule 14 (echo -> ECHO valores EOL .)
    RETURN          reduce using rule 14 (echo -> ECHO valores EOL .)
    SALTO           shift and go to state 105

  ! SALTO           [ reduce using rule 14 (echo -> ECHO valores EOL .) ]


state 59

    (17) valores -> valor COMA . valores
    (16) valores -> . valor
    (17) valores -> . valor COMA valores
    (18) valor -> . ENTERO
    (19) valor -> . FLOTANTE
    (20) valor -> . BOOLEANO
    (21) valor -> . CADENA
    (22) valor -> . VAR
    (23) valor -> . VARIABLE_ARRAY
    (24) valor -> . operacion
    (25) valor -> . argumentologico
    (26) valor -> . array_index
    (30) operacion -> . ENTERO
    (31) operacion -> . FLOTANTE
    (32) operacion -> . ENTERO operador operacion
    (33) operacion -> . FLOTANTE operador operacion
    (52) argumentologico -> . VAR operador_logico VAR
    (53) argumentologico -> . numero operador_logico numero
    (54) argumentologico -> . VAR operador_logico numero
    (55) argumentologico -> . VAR IGUAL BOOLEANO
    (56) argumentologico -> . VAR IGUAL CADENA
    (57) argumentologico -> . VAR DIFERENTE BOOLEANO
    (58) argumentologico -> . VAR DIFERENTE CADENA
    (59) argumentologico -> . numero operador_logico VAR
    (60) argumentologico -> . BOOLEANO IGUAL VAR
    (61) argumentologico -> . CADENA IGUAL VAR
    (62) argumentologico -> . CADENA IGUAL CADENA
    (63) argumentologico -> . CADENA DIFERENTE VAR
    (64) argumentologico -> . CADENA DIFERENTE CADENA
    (65) argumentologico -> . BOOLEANO
    (27) array_index -> . VAR multi_dimensiones
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    BOOLEANO        shift and go to state 31
    CADENA          shift and go to state 32
    VAR             shift and go to state 33
    VARIABLE_ARRAY  shift and go to state 34

    valor                          shift and go to state 28
    valores                        shift and go to state 106
    operacion                      shift and go to state 35
    argumentologico                shift and go to state 36
    array_index                    shift and go to state 37
    numero                         shift and go to state 38

state 60

    (32) operacion -> ENTERO operador . operacion
    (30) operacion -> . ENTERO
    (31) operacion -> . FLOTANTE
    (32) operacion -> . ENTERO operador operacion
    (33) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 107
    FLOTANTE        shift and go to state 109

    operacion                      shift and go to state 108

state 61

    (75) operador -> SUMA .

    ENTERO          reduce using rule 75 (operador -> SUMA .)
    FLOTANTE        reduce using rule 75 (operador -> SUMA .)
    VAR             reduce using rule 75 (operador -> SUMA .)


state 62

    (76) operador -> RESTA .

    ENTERO          reduce using rule 76 (operador -> RESTA .)
    FLOTANTE        reduce using rule 76 (operador -> RESTA .)
    VAR             reduce using rule 76 (operador -> RESTA .)


state 63

    (77) operador -> MULT .

    ENTERO          reduce using rule 77 (operador -> MULT .)
    FLOTANTE        reduce using rule 77 (operador -> MULT .)
    VAR             reduce using rule 77 (operador -> MULT .)


state 64

    (78) operador -> DIV .

    ENTERO          reduce using rule 78 (operador -> DIV .)
    FLOTANTE        reduce using rule 78 (operador -> DIV .)
    VAR             reduce using rule 78 (operador -> DIV .)


state 65

    (79) operador -> POT .

    ENTERO          reduce using rule 79 (operador -> POT .)
    FLOTANTE        reduce using rule 79 (operador -> POT .)
    VAR             reduce using rule 79 (operador -> POT .)


state 66

    (33) operacion -> FLOTANTE operador . operacion
    (30) operacion -> . ENTERO
    (31) operacion -> . FLOTANTE
    (32) operacion -> . ENTERO operador operacion
    (33) operacion -> . FLOTANTE operador operacion

    ENTERO          shift and go to state 107
    FLOTANTE        shift and go to state 109

    operacion                      shift and go to state 110

state 67

    (60) argumentologico -> BOOLEANO IGUAL . VAR

    VAR             shift and go to state 111


state 68

    (61) argumentologico -> CADENA IGUAL . VAR
    (62) argumentologico -> CADENA IGUAL . CADENA

    VAR             shift and go to state 113
    CADENA          shift and go to state 112


state 69

    (63) argumentologico -> CADENA DIFERENTE . VAR
    (64) argumentologico -> CADENA DIFERENTE . CADENA

    VAR             shift and go to state 115
    CADENA          shift and go to state 114


state 70

    (52) argumentologico -> VAR operador_logico . VAR
    (54) argumentologico -> VAR operador_logico . numero
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    VAR             shift and go to state 116
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    numero                         shift and go to state 117

state 71

    (55) argumentologico -> VAR IGUAL . BOOLEANO
    (56) argumentologico -> VAR IGUAL . CADENA
    (68) operador_logico -> IGUAL .

    BOOLEANO        shift and go to state 118
    CADENA          shift and go to state 119
    VAR             reduce using rule 68 (operador_logico -> IGUAL .)
    ENTERO          reduce using rule 68 (operador_logico -> IGUAL .)
    FLOTANTE        reduce using rule 68 (operador_logico -> IGUAL .)


state 72

    (57) argumentologico -> VAR DIFERENTE . BOOLEANO
    (58) argumentologico -> VAR DIFERENTE . CADENA
    (69) operador_logico -> DIFERENTE .

    BOOLEANO        shift and go to state 120
    CADENA          shift and go to state 121
    VAR             reduce using rule 69 (operador_logico -> DIFERENTE .)
    ENTERO          reduce using rule 69 (operador_logico -> DIFERENTE .)
    FLOTANTE        reduce using rule 69 (operador_logico -> DIFERENTE .)


state 73

    (27) array_index -> VAR multi_dimensiones .

    COMA            reduce using rule 27 (array_index -> VAR multi_dimensiones .)
    EOL             reduce using rule 27 (array_index -> VAR multi_dimensiones .)


state 74

    (70) operador_logico -> MENOR .

    VAR             reduce using rule 70 (operador_logico -> MENOR .)
    ENTERO          reduce using rule 70 (operador_logico -> MENOR .)
    FLOTANTE        reduce using rule 70 (operador_logico -> MENOR .)


state 75

    (71) operador_logico -> MAYOR .

    VAR             reduce using rule 71 (operador_logico -> MAYOR .)
    ENTERO          reduce using rule 71 (operador_logico -> MAYOR .)
    FLOTANTE        reduce using rule 71 (operador_logico -> MAYOR .)


state 76

    (72) operador_logico -> MENOR_IGUAL .

    VAR             reduce using rule 72 (operador_logico -> MENOR_IGUAL .)
    ENTERO          reduce using rule 72 (operador_logico -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 72 (operador_logico -> MENOR_IGUAL .)


state 77

    (73) operador_logico -> MAYOR_IGUAL .

    VAR             reduce using rule 73 (operador_logico -> MAYOR_IGUAL .)
    ENTERO          reduce using rule 73 (operador_logico -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 73 (operador_logico -> MAYOR_IGUAL .)


state 78

    (28) multi_dimensiones -> LBRACKET . clave_dic RBRACKET
    (29) multi_dimensiones -> LBRACKET . clave_dic RBRACKET multi_dimensiones
    (86) clave_dic -> . ENTERO
    (87) clave_dic -> . CADENA

    ENTERO          shift and go to state 123
    CADENA          shift and go to state 124

    clave_dic                      shift and go to state 122

state 79

    (53) argumentologico -> numero operador_logico . numero
    (59) argumentologico -> numero operador_logico . VAR
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    VAR             shift and go to state 126
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    numero                         shift and go to state 125

state 80

    (68) operador_logico -> IGUAL .

    VAR             reduce using rule 68 (operador_logico -> IGUAL .)
    ENTERO          reduce using rule 68 (operador_logico -> IGUAL .)
    FLOTANTE        reduce using rule 68 (operador_logico -> IGUAL .)


state 81

    (69) operador_logico -> DIFERENTE .

    VAR             reduce using rule 69 (operador_logico -> DIFERENTE .)
    ENTERO          reduce using rule 69 (operador_logico -> DIFERENTE .)
    FLOTANTE        reduce using rule 69 (operador_logico -> DIFERENTE .)


state 82

    (40) if -> if elseif else .

    ELSE            reduce using rule 40 (if -> if elseif else .)
    ELSEIF          reduce using rule 40 (if -> if elseif else .)
    $end            reduce using rule 40 (if -> if elseif else .)
    ECHO            reduce using rule 40 (if -> if elseif else .)
    VAR             reduce using rule 40 (if -> if elseif else .)
    COMNT           reduce using rule 40 (if -> if elseif else .)
    WHILE           reduce using rule 40 (if -> if elseif else .)
    IF              reduce using rule 40 (if -> if elseif else .)
    FOR             reduce using rule 40 (if -> if elseif else .)
    RBRACE          reduce using rule 40 (if -> if elseif else .)
    RETURN          reduce using rule 40 (if -> if elseif else .)
    SALTO           reduce using rule 40 (if -> if elseif else .)


state 83

    (44) else -> ELSE LBRACE . lineas RBRACE
    (137) lineas -> . linea
    (138) lineas -> . linea lineas
    (129) linea -> . echo
    (130) linea -> . ECHO CADENA EOL
    (131) linea -> . ECHO VAR EOL
    (132) linea -> . VAR ASIGNACION CADENA EOL
    (133) linea -> . estructuracontrol
    (134) linea -> . comentario
    (135) linea -> . declaracion_numeros
    (136) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (34) estructuracontrol -> . while
    (35) estructuracontrol -> . if
    (36) estructuracontrol -> . for
    (74) comentario -> . COMNT
    (80) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (81) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (37) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (38) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (39) if -> . if else
    (40) if -> . if elseif else
    (41) if -> . if elseif
    (126) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 130
    VAR             shift and go to state 131
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 127
    linea                          shift and go to state 128
    echo                           shift and go to state 129
    estructuracontrol              shift and go to state 132
    comentario                     shift and go to state 133
    declaracion_numeros            shift and go to state 134
    array                          shift and go to state 135
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 84

    (42) elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE lineas RBRACE
    (43) elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE lineas RBRACE elseif
    (45) condicion -> . argumentologico
    (46) condicion -> . argumentologico conector_logico condicion
    (52) argumentologico -> . VAR operador_logico VAR
    (53) argumentologico -> . numero operador_logico numero
    (54) argumentologico -> . VAR operador_logico numero
    (55) argumentologico -> . VAR IGUAL BOOLEANO
    (56) argumentologico -> . VAR IGUAL CADENA
    (57) argumentologico -> . VAR DIFERENTE BOOLEANO
    (58) argumentologico -> . VAR DIFERENTE CADENA
    (59) argumentologico -> . numero operador_logico VAR
    (60) argumentologico -> . BOOLEANO IGUAL VAR
    (61) argumentologico -> . CADENA IGUAL VAR
    (62) argumentologico -> . CADENA IGUAL CADENA
    (63) argumentologico -> . CADENA DIFERENTE VAR
    (64) argumentologico -> . CADENA DIFERENTE CADENA
    (65) argumentologico -> . BOOLEANO
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    VAR             shift and go to state 90
    BOOLEANO        shift and go to state 91
    CADENA          shift and go to state 92
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    condicion                      shift and go to state 136
    argumentologico                shift and go to state 89
    numero                         shift and go to state 38

state 85

    (108) funcion -> FUNCTION tipo_funcion LBRACE . final_funcion RBRACE
    (111) final_funcion -> . RETURN VAR EOL
    (112) final_funcion -> . lineas final_funcion
    (137) lineas -> . linea
    (138) lineas -> . linea lineas
    (129) linea -> . echo
    (130) linea -> . ECHO CADENA EOL
    (131) linea -> . ECHO VAR EOL
    (132) linea -> . VAR ASIGNACION CADENA EOL
    (133) linea -> . estructuracontrol
    (134) linea -> . comentario
    (135) linea -> . declaracion_numeros
    (136) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (34) estructuracontrol -> . while
    (35) estructuracontrol -> . if
    (36) estructuracontrol -> . for
    (74) comentario -> . COMNT
    (80) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (81) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (37) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (38) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (39) if -> . if else
    (40) if -> . if elseif else
    (41) if -> . if elseif
    (126) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    RETURN          shift and go to state 138
    ECHO            shift and go to state 130
    VAR             shift and go to state 131
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    final_funcion                  shift and go to state 137
    lineas                         shift and go to state 139
    linea                          shift and go to state 128
    echo                           shift and go to state 129
    estructuracontrol              shift and go to state 132
    comentario                     shift and go to state 133
    declaracion_numeros            shift and go to state 134
    array                          shift and go to state 135
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 86

    (116) readline -> READLINE LPAREN CADENA . RPAREN EOL

    RPAREN          shift and go to state 140


state 87

    (118) objeto -> CLASE OBJETO LBRACE . mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos
    (121) mas_objetos -> . cuerpo_objeto
    (122) mas_objetos -> . cuerpo_objeto mas_objetos
    (119) cuerpo_objeto -> . PUBLIC VAR EOL
    (120) cuerpo_objeto -> . PUBLIC asignacion

    PUBLIC          shift and go to state 143

    mas_objetos                    shift and go to state 141
    cuerpo_objeto                  shift and go to state 142

state 88

    (37) while -> WHILE LPAREN condicion . RPAREN LBRACE lineas RBRACE

    RPAREN          shift and go to state 144


state 89

    (45) condicion -> argumentologico .
    (46) condicion -> argumentologico . conector_logico condicion
    (48) conector_logico -> . AND
    (49) conector_logico -> . OR

    RPAREN          reduce using rule 45 (condicion -> argumentologico .)
    AND             shift and go to state 146
    OR              shift and go to state 147

    conector_logico                shift and go to state 145

state 90

    (52) argumentologico -> VAR . operador_logico VAR
    (54) argumentologico -> VAR . operador_logico numero
    (55) argumentologico -> VAR . IGUAL BOOLEANO
    (56) argumentologico -> VAR . IGUAL CADENA
    (57) argumentologico -> VAR . DIFERENTE BOOLEANO
    (58) argumentologico -> VAR . DIFERENTE CADENA
    (68) operador_logico -> . IGUAL
    (69) operador_logico -> . DIFERENTE
    (70) operador_logico -> . MENOR
    (71) operador_logico -> . MAYOR
    (72) operador_logico -> . MENOR_IGUAL
    (73) operador_logico -> . MAYOR_IGUAL

    IGUAL           shift and go to state 71
    DIFERENTE       shift and go to state 72
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77

    operador_logico                shift and go to state 70

state 91

    (60) argumentologico -> BOOLEANO . IGUAL VAR
    (65) argumentologico -> BOOLEANO .

    IGUAL           shift and go to state 67
    AND             reduce using rule 65 (argumentologico -> BOOLEANO .)
    OR              reduce using rule 65 (argumentologico -> BOOLEANO .)
    RPAREN          reduce using rule 65 (argumentologico -> BOOLEANO .)
    EOL             reduce using rule 65 (argumentologico -> BOOLEANO .)


state 92

    (61) argumentologico -> CADENA . IGUAL VAR
    (62) argumentologico -> CADENA . IGUAL CADENA
    (63) argumentologico -> CADENA . DIFERENTE VAR
    (64) argumentologico -> CADENA . DIFERENTE CADENA

    IGUAL           shift and go to state 68
    DIFERENTE       shift and go to state 69


state 93

    (66) numero -> ENTERO .

    IGUAL           reduce using rule 66 (numero -> ENTERO .)
    DIFERENTE       reduce using rule 66 (numero -> ENTERO .)
    MENOR           reduce using rule 66 (numero -> ENTERO .)
    MAYOR           reduce using rule 66 (numero -> ENTERO .)
    MENOR_IGUAL     reduce using rule 66 (numero -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 66 (numero -> ENTERO .)
    COMA            reduce using rule 66 (numero -> ENTERO .)
    EOL             reduce using rule 66 (numero -> ENTERO .)
    AND             reduce using rule 66 (numero -> ENTERO .)
    OR              reduce using rule 66 (numero -> ENTERO .)
    RPAREN          reduce using rule 66 (numero -> ENTERO .)
    SUMA            reduce using rule 66 (numero -> ENTERO .)
    RESTA           reduce using rule 66 (numero -> ENTERO .)
    MULT            reduce using rule 66 (numero -> ENTERO .)
    DIV             reduce using rule 66 (numero -> ENTERO .)
    POT             reduce using rule 66 (numero -> ENTERO .)


state 94

    (67) numero -> FLOTANTE .

    IGUAL           reduce using rule 67 (numero -> FLOTANTE .)
    DIFERENTE       reduce using rule 67 (numero -> FLOTANTE .)
    MENOR           reduce using rule 67 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 67 (numero -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 67 (numero -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 67 (numero -> FLOTANTE .)
    COMA            reduce using rule 67 (numero -> FLOTANTE .)
    EOL             reduce using rule 67 (numero -> FLOTANTE .)
    AND             reduce using rule 67 (numero -> FLOTANTE .)
    OR              reduce using rule 67 (numero -> FLOTANTE .)
    RPAREN          reduce using rule 67 (numero -> FLOTANTE .)
    SUMA            reduce using rule 67 (numero -> FLOTANTE .)
    RESTA           reduce using rule 67 (numero -> FLOTANTE .)
    MULT            reduce using rule 67 (numero -> FLOTANTE .)
    DIV             reduce using rule 67 (numero -> FLOTANTE .)
    POT             reduce using rule 67 (numero -> FLOTANTE .)


state 95

    (38) if -> IF LPAREN condicion . RPAREN LBRACE lineas RBRACE

    RPAREN          shift and go to state 148


state 96

    (126) for -> FOR LPAREN asignacion . argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> FOR LPAREN asignacion . argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> FOR LPAREN asignacion . argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE
    (52) argumentologico -> . VAR operador_logico VAR
    (53) argumentologico -> . numero operador_logico numero
    (54) argumentologico -> . VAR operador_logico numero
    (55) argumentologico -> . VAR IGUAL BOOLEANO
    (56) argumentologico -> . VAR IGUAL CADENA
    (57) argumentologico -> . VAR DIFERENTE BOOLEANO
    (58) argumentologico -> . VAR DIFERENTE CADENA
    (59) argumentologico -> . numero operador_logico VAR
    (60) argumentologico -> . BOOLEANO IGUAL VAR
    (61) argumentologico -> . CADENA IGUAL VAR
    (62) argumentologico -> . CADENA IGUAL CADENA
    (63) argumentologico -> . CADENA DIFERENTE VAR
    (64) argumentologico -> . CADENA DIFERENTE CADENA
    (65) argumentologico -> . BOOLEANO
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    VAR             shift and go to state 90
    BOOLEANO        shift and go to state 91
    CADENA          shift and go to state 92
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    argumentologico                shift and go to state 149
    numero                         shift and go to state 38

state 97

    (13) asignacion -> VAR . ASIGNACION valor EOL

    ASIGNACION      shift and go to state 150


state 98

    (140) expresionAritmetica -> VAR ASIGNACION VAR masTerminos . EOL

    EOL             shift and go to state 151


state 99

    (143) masTerminos -> termino .
    (144) masTerminos -> termino . masTerminos
    (143) masTerminos -> . termino
    (144) masTerminos -> . termino masTerminos
    (141) termino -> . operador numero
    (142) termino -> . operador VAR
    (75) operador -> . SUMA
    (76) operador -> . RESTA
    (77) operador -> . MULT
    (78) operador -> . DIV
    (79) operador -> . POT

    EOL             reduce using rule 143 (masTerminos -> termino .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

    termino                        shift and go to state 99
    masTerminos                    shift and go to state 152
    operador                       shift and go to state 100

state 100

    (141) termino -> operador . numero
    (142) termino -> operador . VAR
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    VAR             shift and go to state 154
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    numero                         shift and go to state 153

state 101

    (13) asignacion -> VAR ASIGNACION valor EOL .

    $end            reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    VAR             reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    BOOLEANO        reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    CADENA          reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    ENTERO          reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    FLOTANTE        reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    PUBLIC          reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)
    RBRACE          reduce using rule 13 (asignacion -> VAR ASIGNACION valor EOL .)


state 102

    (80) declaracion_numeros -> VAR ASIGNACION numero EOL .

    $end            reduce using rule 80 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    ECHO            reduce using rule 80 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    VAR             reduce using rule 80 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    COMNT           reduce using rule 80 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    WHILE           reduce using rule 80 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    IF              reduce using rule 80 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    FOR             reduce using rule 80 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    RBRACE          reduce using rule 80 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    RETURN          reduce using rule 80 (declaracion_numeros -> VAR ASIGNACION numero EOL .)
    SALTO           reduce using rule 80 (declaracion_numeros -> VAR ASIGNACION numero EOL .)


state 103

    (139) expresionAritmetica -> VAR ASIGNACION numero masTerminos . EOL

    EOL             shift and go to state 155


state 104

    (81) array -> VAR ASIGNACION ARRAY LPAREN . elementos RPAREN EOL
    (82) elementos -> . lista
    (83) elementos -> . diccionario
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (84) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic
    (85) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic COMA diccionario
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (86) clave_dic -> . ENTERO
    (87) clave_dic -> . CADENA
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    CADENA          shift and go to state 167
    VAR             shift and go to state 156
    ARRAY           shift and go to state 157
    BOOLEANO        shift and go to state 169
    ENTERO          shift and go to state 170
    FLOTANTE        shift and go to state 94

    elementos                      shift and go to state 158
    lista                          shift and go to state 159
    diccionario                    shift and go to state 160
    palabras                       shift and go to state 161
    numeros                        shift and go to state 162
    variables                      shift and go to state 163
    array_l                        shift and go to state 164
    bool                           shift and go to state 165
    clave_dic                      shift and go to state 166
    numero                         shift and go to state 168

state 105

    (15) echo -> ECHO valores EOL SALTO .

    SALTO           reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    $end            reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    ECHO            reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    VAR             reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    COMNT           reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    WHILE           reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    IF              reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    FOR             reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    RBRACE          reduce using rule 15 (echo -> ECHO valores EOL SALTO .)
    RETURN          reduce using rule 15 (echo -> ECHO valores EOL SALTO .)


state 106

    (17) valores -> valor COMA valores .

    EOL             reduce using rule 17 (valores -> valor COMA valores .)


state 107

    (30) operacion -> ENTERO .
    (32) operacion -> ENTERO . operador operacion
    (75) operador -> . SUMA
    (76) operador -> . RESTA
    (77) operador -> . MULT
    (78) operador -> . DIV
    (79) operador -> . POT

    COMA            reduce using rule 30 (operacion -> ENTERO .)
    EOL             reduce using rule 30 (operacion -> ENTERO .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

    operador                       shift and go to state 60

state 108

    (32) operacion -> ENTERO operador operacion .

    COMA            reduce using rule 32 (operacion -> ENTERO operador operacion .)
    EOL             reduce using rule 32 (operacion -> ENTERO operador operacion .)


state 109

    (31) operacion -> FLOTANTE .
    (33) operacion -> FLOTANTE . operador operacion
    (75) operador -> . SUMA
    (76) operador -> . RESTA
    (77) operador -> . MULT
    (78) operador -> . DIV
    (79) operador -> . POT

    COMA            reduce using rule 31 (operacion -> FLOTANTE .)
    EOL             reduce using rule 31 (operacion -> FLOTANTE .)
    SUMA            shift and go to state 61
    RESTA           shift and go to state 62
    MULT            shift and go to state 63
    DIV             shift and go to state 64
    POT             shift and go to state 65

    operador                       shift and go to state 66

state 110

    (33) operacion -> FLOTANTE operador operacion .

    COMA            reduce using rule 33 (operacion -> FLOTANTE operador operacion .)
    EOL             reduce using rule 33 (operacion -> FLOTANTE operador operacion .)


state 111

    (60) argumentologico -> BOOLEANO IGUAL VAR .

    COMA            reduce using rule 60 (argumentologico -> BOOLEANO IGUAL VAR .)
    EOL             reduce using rule 60 (argumentologico -> BOOLEANO IGUAL VAR .)
    AND             reduce using rule 60 (argumentologico -> BOOLEANO IGUAL VAR .)
    OR              reduce using rule 60 (argumentologico -> BOOLEANO IGUAL VAR .)
    RPAREN          reduce using rule 60 (argumentologico -> BOOLEANO IGUAL VAR .)


state 112

    (62) argumentologico -> CADENA IGUAL CADENA .

    COMA            reduce using rule 62 (argumentologico -> CADENA IGUAL CADENA .)
    EOL             reduce using rule 62 (argumentologico -> CADENA IGUAL CADENA .)
    AND             reduce using rule 62 (argumentologico -> CADENA IGUAL CADENA .)
    OR              reduce using rule 62 (argumentologico -> CADENA IGUAL CADENA .)
    RPAREN          reduce using rule 62 (argumentologico -> CADENA IGUAL CADENA .)


state 113

    (61) argumentologico -> CADENA IGUAL VAR .

    COMA            reduce using rule 61 (argumentologico -> CADENA IGUAL VAR .)
    EOL             reduce using rule 61 (argumentologico -> CADENA IGUAL VAR .)
    AND             reduce using rule 61 (argumentologico -> CADENA IGUAL VAR .)
    OR              reduce using rule 61 (argumentologico -> CADENA IGUAL VAR .)
    RPAREN          reduce using rule 61 (argumentologico -> CADENA IGUAL VAR .)


state 114

    (64) argumentologico -> CADENA DIFERENTE CADENA .

    COMA            reduce using rule 64 (argumentologico -> CADENA DIFERENTE CADENA .)
    EOL             reduce using rule 64 (argumentologico -> CADENA DIFERENTE CADENA .)
    AND             reduce using rule 64 (argumentologico -> CADENA DIFERENTE CADENA .)
    OR              reduce using rule 64 (argumentologico -> CADENA DIFERENTE CADENA .)
    RPAREN          reduce using rule 64 (argumentologico -> CADENA DIFERENTE CADENA .)


state 115

    (63) argumentologico -> CADENA DIFERENTE VAR .

    COMA            reduce using rule 63 (argumentologico -> CADENA DIFERENTE VAR .)
    EOL             reduce using rule 63 (argumentologico -> CADENA DIFERENTE VAR .)
    AND             reduce using rule 63 (argumentologico -> CADENA DIFERENTE VAR .)
    OR              reduce using rule 63 (argumentologico -> CADENA DIFERENTE VAR .)
    RPAREN          reduce using rule 63 (argumentologico -> CADENA DIFERENTE VAR .)


state 116

    (52) argumentologico -> VAR operador_logico VAR .

    COMA            reduce using rule 52 (argumentologico -> VAR operador_logico VAR .)
    EOL             reduce using rule 52 (argumentologico -> VAR operador_logico VAR .)
    AND             reduce using rule 52 (argumentologico -> VAR operador_logico VAR .)
    OR              reduce using rule 52 (argumentologico -> VAR operador_logico VAR .)
    RPAREN          reduce using rule 52 (argumentologico -> VAR operador_logico VAR .)


state 117

    (54) argumentologico -> VAR operador_logico numero .

    COMA            reduce using rule 54 (argumentologico -> VAR operador_logico numero .)
    EOL             reduce using rule 54 (argumentologico -> VAR operador_logico numero .)
    AND             reduce using rule 54 (argumentologico -> VAR operador_logico numero .)
    OR              reduce using rule 54 (argumentologico -> VAR operador_logico numero .)
    RPAREN          reduce using rule 54 (argumentologico -> VAR operador_logico numero .)


state 118

    (55) argumentologico -> VAR IGUAL BOOLEANO .

    COMA            reduce using rule 55 (argumentologico -> VAR IGUAL BOOLEANO .)
    EOL             reduce using rule 55 (argumentologico -> VAR IGUAL BOOLEANO .)
    AND             reduce using rule 55 (argumentologico -> VAR IGUAL BOOLEANO .)
    OR              reduce using rule 55 (argumentologico -> VAR IGUAL BOOLEANO .)
    RPAREN          reduce using rule 55 (argumentologico -> VAR IGUAL BOOLEANO .)


state 119

    (56) argumentologico -> VAR IGUAL CADENA .

    COMA            reduce using rule 56 (argumentologico -> VAR IGUAL CADENA .)
    EOL             reduce using rule 56 (argumentologico -> VAR IGUAL CADENA .)
    AND             reduce using rule 56 (argumentologico -> VAR IGUAL CADENA .)
    OR              reduce using rule 56 (argumentologico -> VAR IGUAL CADENA .)
    RPAREN          reduce using rule 56 (argumentologico -> VAR IGUAL CADENA .)


state 120

    (57) argumentologico -> VAR DIFERENTE BOOLEANO .

    COMA            reduce using rule 57 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    EOL             reduce using rule 57 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    AND             reduce using rule 57 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    OR              reduce using rule 57 (argumentologico -> VAR DIFERENTE BOOLEANO .)
    RPAREN          reduce using rule 57 (argumentologico -> VAR DIFERENTE BOOLEANO .)


state 121

    (58) argumentologico -> VAR DIFERENTE CADENA .

    COMA            reduce using rule 58 (argumentologico -> VAR DIFERENTE CADENA .)
    EOL             reduce using rule 58 (argumentologico -> VAR DIFERENTE CADENA .)
    AND             reduce using rule 58 (argumentologico -> VAR DIFERENTE CADENA .)
    OR              reduce using rule 58 (argumentologico -> VAR DIFERENTE CADENA .)
    RPAREN          reduce using rule 58 (argumentologico -> VAR DIFERENTE CADENA .)


state 122

    (28) multi_dimensiones -> LBRACKET clave_dic . RBRACKET
    (29) multi_dimensiones -> LBRACKET clave_dic . RBRACKET multi_dimensiones

    RBRACKET        shift and go to state 171


state 123

    (86) clave_dic -> ENTERO .

    RBRACKET        reduce using rule 86 (clave_dic -> ENTERO .)
    ASIGNACION      reduce using rule 86 (clave_dic -> ENTERO .)


state 124

    (87) clave_dic -> CADENA .

    RBRACKET        reduce using rule 87 (clave_dic -> CADENA .)
    ASIGNACION      reduce using rule 87 (clave_dic -> CADENA .)


state 125

    (53) argumentologico -> numero operador_logico numero .

    COMA            reduce using rule 53 (argumentologico -> numero operador_logico numero .)
    EOL             reduce using rule 53 (argumentologico -> numero operador_logico numero .)
    AND             reduce using rule 53 (argumentologico -> numero operador_logico numero .)
    OR              reduce using rule 53 (argumentologico -> numero operador_logico numero .)
    RPAREN          reduce using rule 53 (argumentologico -> numero operador_logico numero .)


state 126

    (59) argumentologico -> numero operador_logico VAR .

    COMA            reduce using rule 59 (argumentologico -> numero operador_logico VAR .)
    EOL             reduce using rule 59 (argumentologico -> numero operador_logico VAR .)
    AND             reduce using rule 59 (argumentologico -> numero operador_logico VAR .)
    OR              reduce using rule 59 (argumentologico -> numero operador_logico VAR .)
    RPAREN          reduce using rule 59 (argumentologico -> numero operador_logico VAR .)


state 127

    (44) else -> ELSE LBRACE lineas . RBRACE

    RBRACE          shift and go to state 172


state 128

    (137) lineas -> linea .
    (138) lineas -> linea . lineas
    (137) lineas -> . linea
    (138) lineas -> . linea lineas
    (129) linea -> . echo
    (130) linea -> . ECHO CADENA EOL
    (131) linea -> . ECHO VAR EOL
    (132) linea -> . VAR ASIGNACION CADENA EOL
    (133) linea -> . estructuracontrol
    (134) linea -> . comentario
    (135) linea -> . declaracion_numeros
    (136) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (34) estructuracontrol -> . while
    (35) estructuracontrol -> . if
    (36) estructuracontrol -> . for
    (74) comentario -> . COMNT
    (80) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (81) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (37) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (38) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (39) if -> . if else
    (40) if -> . if elseif else
    (41) if -> . if elseif
    (126) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for COMNT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RBRACE          reduce using rule 137 (lineas -> linea .)
    RETURN          reduce using rule 137 (lineas -> linea .)
    SALTO           reduce using rule 137 (lineas -> linea .)
    ECHO            shift and go to state 130
    VAR             shift and go to state 131
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

  ! ECHO            [ reduce using rule 137 (lineas -> linea .) ]
  ! VAR             [ reduce using rule 137 (lineas -> linea .) ]
  ! COMNT           [ reduce using rule 137 (lineas -> linea .) ]
  ! WHILE           [ reduce using rule 137 (lineas -> linea .) ]
  ! IF              [ reduce using rule 137 (lineas -> linea .) ]
  ! FOR             [ reduce using rule 137 (lineas -> linea .) ]

    linea                          shift and go to state 128
    lineas                         shift and go to state 173
    echo                           shift and go to state 129
    estructuracontrol              shift and go to state 132
    comentario                     shift and go to state 133
    declaracion_numeros            shift and go to state 134
    array                          shift and go to state 135
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 129

    (129) linea -> echo .

    ECHO            reduce using rule 129 (linea -> echo .)
    VAR             reduce using rule 129 (linea -> echo .)
    COMNT           reduce using rule 129 (linea -> echo .)
    WHILE           reduce using rule 129 (linea -> echo .)
    IF              reduce using rule 129 (linea -> echo .)
    FOR             reduce using rule 129 (linea -> echo .)
    RBRACE          reduce using rule 129 (linea -> echo .)
    RETURN          reduce using rule 129 (linea -> echo .)
    SALTO           reduce using rule 129 (linea -> echo .)


state 130

    (130) linea -> ECHO . CADENA EOL
    (131) linea -> ECHO . VAR EOL
    (14) echo -> ECHO . valores EOL
    (15) echo -> ECHO . valores EOL SALTO
    (16) valores -> . valor
    (17) valores -> . valor COMA valores
    (18) valor -> . ENTERO
    (19) valor -> . FLOTANTE
    (20) valor -> . BOOLEANO
    (21) valor -> . CADENA
    (22) valor -> . VAR
    (23) valor -> . VARIABLE_ARRAY
    (24) valor -> . operacion
    (25) valor -> . argumentologico
    (26) valor -> . array_index
    (30) operacion -> . ENTERO
    (31) operacion -> . FLOTANTE
    (32) operacion -> . ENTERO operador operacion
    (33) operacion -> . FLOTANTE operador operacion
    (52) argumentologico -> . VAR operador_logico VAR
    (53) argumentologico -> . numero operador_logico numero
    (54) argumentologico -> . VAR operador_logico numero
    (55) argumentologico -> . VAR IGUAL BOOLEANO
    (56) argumentologico -> . VAR IGUAL CADENA
    (57) argumentologico -> . VAR DIFERENTE BOOLEANO
    (58) argumentologico -> . VAR DIFERENTE CADENA
    (59) argumentologico -> . numero operador_logico VAR
    (60) argumentologico -> . BOOLEANO IGUAL VAR
    (61) argumentologico -> . CADENA IGUAL VAR
    (62) argumentologico -> . CADENA IGUAL CADENA
    (63) argumentologico -> . CADENA DIFERENTE VAR
    (64) argumentologico -> . CADENA DIFERENTE CADENA
    (65) argumentologico -> . BOOLEANO
    (27) array_index -> . VAR multi_dimensiones
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    CADENA          shift and go to state 174
    VAR             shift and go to state 175
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    BOOLEANO        shift and go to state 31
    VARIABLE_ARRAY  shift and go to state 34

    valores                        shift and go to state 27
    valor                          shift and go to state 28
    operacion                      shift and go to state 35
    argumentologico                shift and go to state 36
    array_index                    shift and go to state 37
    numero                         shift and go to state 38

state 131

    (132) linea -> VAR . ASIGNACION CADENA EOL
    (80) declaracion_numeros -> VAR . ASIGNACION numero EOL
    (81) array -> VAR . ASIGNACION ARRAY LPAREN elementos RPAREN EOL

    ASIGNACION      shift and go to state 176


state 132

    (133) linea -> estructuracontrol .

    ECHO            reduce using rule 133 (linea -> estructuracontrol .)
    VAR             reduce using rule 133 (linea -> estructuracontrol .)
    COMNT           reduce using rule 133 (linea -> estructuracontrol .)
    WHILE           reduce using rule 133 (linea -> estructuracontrol .)
    IF              reduce using rule 133 (linea -> estructuracontrol .)
    FOR             reduce using rule 133 (linea -> estructuracontrol .)
    RBRACE          reduce using rule 133 (linea -> estructuracontrol .)
    RETURN          reduce using rule 133 (linea -> estructuracontrol .)
    SALTO           reduce using rule 133 (linea -> estructuracontrol .)


state 133

    (134) linea -> comentario .

    ECHO            reduce using rule 134 (linea -> comentario .)
    VAR             reduce using rule 134 (linea -> comentario .)
    COMNT           reduce using rule 134 (linea -> comentario .)
    WHILE           reduce using rule 134 (linea -> comentario .)
    IF              reduce using rule 134 (linea -> comentario .)
    FOR             reduce using rule 134 (linea -> comentario .)
    RBRACE          reduce using rule 134 (linea -> comentario .)
    RETURN          reduce using rule 134 (linea -> comentario .)
    SALTO           reduce using rule 134 (linea -> comentario .)


state 134

    (135) linea -> declaracion_numeros .

    ECHO            reduce using rule 135 (linea -> declaracion_numeros .)
    VAR             reduce using rule 135 (linea -> declaracion_numeros .)
    COMNT           reduce using rule 135 (linea -> declaracion_numeros .)
    WHILE           reduce using rule 135 (linea -> declaracion_numeros .)
    IF              reduce using rule 135 (linea -> declaracion_numeros .)
    FOR             reduce using rule 135 (linea -> declaracion_numeros .)
    RBRACE          reduce using rule 135 (linea -> declaracion_numeros .)
    RETURN          reduce using rule 135 (linea -> declaracion_numeros .)
    SALTO           reduce using rule 135 (linea -> declaracion_numeros .)


state 135

    (136) linea -> array .

    ECHO            reduce using rule 136 (linea -> array .)
    VAR             reduce using rule 136 (linea -> array .)
    COMNT           reduce using rule 136 (linea -> array .)
    WHILE           reduce using rule 136 (linea -> array .)
    IF              reduce using rule 136 (linea -> array .)
    FOR             reduce using rule 136 (linea -> array .)
    RBRACE          reduce using rule 136 (linea -> array .)
    RETURN          reduce using rule 136 (linea -> array .)
    SALTO           reduce using rule 136 (linea -> array .)


state 136

    (42) elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE lineas RBRACE
    (43) elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE lineas RBRACE elseif

    RPAREN          shift and go to state 177


state 137

    (108) funcion -> FUNCTION tipo_funcion LBRACE final_funcion . RBRACE

    RBRACE          shift and go to state 178


state 138

    (111) final_funcion -> RETURN . VAR EOL

    VAR             shift and go to state 179


state 139

    (112) final_funcion -> lineas . final_funcion
    (111) final_funcion -> . RETURN VAR EOL
    (112) final_funcion -> . lineas final_funcion
    (137) lineas -> . linea
    (138) lineas -> . linea lineas
    (129) linea -> . echo
    (130) linea -> . ECHO CADENA EOL
    (131) linea -> . ECHO VAR EOL
    (132) linea -> . VAR ASIGNACION CADENA EOL
    (133) linea -> . estructuracontrol
    (134) linea -> . comentario
    (135) linea -> . declaracion_numeros
    (136) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (34) estructuracontrol -> . while
    (35) estructuracontrol -> . if
    (36) estructuracontrol -> . for
    (74) comentario -> . COMNT
    (80) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (81) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (37) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (38) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (39) if -> . if else
    (40) if -> . if elseif else
    (41) if -> . if elseif
    (126) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    RETURN          shift and go to state 138
    ECHO            shift and go to state 130
    VAR             shift and go to state 131
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 139
    final_funcion                  shift and go to state 180
    linea                          shift and go to state 128
    echo                           shift and go to state 129
    estructuracontrol              shift and go to state 132
    comentario                     shift and go to state 133
    declaracion_numeros            shift and go to state 134
    array                          shift and go to state 135
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 140

    (116) readline -> READLINE LPAREN CADENA RPAREN . EOL

    EOL             shift and go to state 181


state 141

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos . RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    RBRACE          shift and go to state 182


state 142

    (121) mas_objetos -> cuerpo_objeto .
    (122) mas_objetos -> cuerpo_objeto . mas_objetos
    (121) mas_objetos -> . cuerpo_objeto
    (122) mas_objetos -> . cuerpo_objeto mas_objetos
    (119) cuerpo_objeto -> . PUBLIC VAR EOL
    (120) cuerpo_objeto -> . PUBLIC asignacion

    RBRACE          reduce using rule 121 (mas_objetos -> cuerpo_objeto .)
    PUBLIC          shift and go to state 143

    cuerpo_objeto                  shift and go to state 142
    mas_objetos                    shift and go to state 183

state 143

    (119) cuerpo_objeto -> PUBLIC . VAR EOL
    (120) cuerpo_objeto -> PUBLIC . asignacion
    (13) asignacion -> . VAR ASIGNACION valor EOL

    VAR             shift and go to state 184

    asignacion                     shift and go to state 185

state 144

    (37) while -> WHILE LPAREN condicion RPAREN . LBRACE lineas RBRACE

    LBRACE          shift and go to state 186


state 145

    (46) condicion -> argumentologico conector_logico . condicion
    (45) condicion -> . argumentologico
    (46) condicion -> . argumentologico conector_logico condicion
    (52) argumentologico -> . VAR operador_logico VAR
    (53) argumentologico -> . numero operador_logico numero
    (54) argumentologico -> . VAR operador_logico numero
    (55) argumentologico -> . VAR IGUAL BOOLEANO
    (56) argumentologico -> . VAR IGUAL CADENA
    (57) argumentologico -> . VAR DIFERENTE BOOLEANO
    (58) argumentologico -> . VAR DIFERENTE CADENA
    (59) argumentologico -> . numero operador_logico VAR
    (60) argumentologico -> . BOOLEANO IGUAL VAR
    (61) argumentologico -> . CADENA IGUAL VAR
    (62) argumentologico -> . CADENA IGUAL CADENA
    (63) argumentologico -> . CADENA DIFERENTE VAR
    (64) argumentologico -> . CADENA DIFERENTE CADENA
    (65) argumentologico -> . BOOLEANO
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    VAR             shift and go to state 90
    BOOLEANO        shift and go to state 91
    CADENA          shift and go to state 92
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    argumentologico                shift and go to state 89
    condicion                      shift and go to state 187
    numero                         shift and go to state 38

state 146

    (48) conector_logico -> AND .

    VAR             reduce using rule 48 (conector_logico -> AND .)
    BOOLEANO        reduce using rule 48 (conector_logico -> AND .)
    CADENA          reduce using rule 48 (conector_logico -> AND .)
    ENTERO          reduce using rule 48 (conector_logico -> AND .)
    FLOTANTE        reduce using rule 48 (conector_logico -> AND .)


state 147

    (49) conector_logico -> OR .

    VAR             reduce using rule 49 (conector_logico -> OR .)
    BOOLEANO        reduce using rule 49 (conector_logico -> OR .)
    CADENA          reduce using rule 49 (conector_logico -> OR .)
    ENTERO          reduce using rule 49 (conector_logico -> OR .)
    FLOTANTE        reduce using rule 49 (conector_logico -> OR .)


state 148

    (38) if -> IF LPAREN condicion RPAREN . LBRACE lineas RBRACE

    LBRACE          shift and go to state 188


state 149

    (126) for -> FOR LPAREN asignacion argumentologico . EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> FOR LPAREN asignacion argumentologico . EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> FOR LPAREN asignacion argumentologico . EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    EOL             shift and go to state 189


state 150

    (13) asignacion -> VAR ASIGNACION . valor EOL
    (18) valor -> . ENTERO
    (19) valor -> . FLOTANTE
    (20) valor -> . BOOLEANO
    (21) valor -> . CADENA
    (22) valor -> . VAR
    (23) valor -> . VARIABLE_ARRAY
    (24) valor -> . operacion
    (25) valor -> . argumentologico
    (26) valor -> . array_index
    (30) operacion -> . ENTERO
    (31) operacion -> . FLOTANTE
    (32) operacion -> . ENTERO operador operacion
    (33) operacion -> . FLOTANTE operador operacion
    (52) argumentologico -> . VAR operador_logico VAR
    (53) argumentologico -> . numero operador_logico numero
    (54) argumentologico -> . VAR operador_logico numero
    (55) argumentologico -> . VAR IGUAL BOOLEANO
    (56) argumentologico -> . VAR IGUAL CADENA
    (57) argumentologico -> . VAR DIFERENTE BOOLEANO
    (58) argumentologico -> . VAR DIFERENTE CADENA
    (59) argumentologico -> . numero operador_logico VAR
    (60) argumentologico -> . BOOLEANO IGUAL VAR
    (61) argumentologico -> . CADENA IGUAL VAR
    (62) argumentologico -> . CADENA IGUAL CADENA
    (63) argumentologico -> . CADENA DIFERENTE VAR
    (64) argumentologico -> . CADENA DIFERENTE CADENA
    (65) argumentologico -> . BOOLEANO
    (27) array_index -> . VAR multi_dimensiones
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    BOOLEANO        shift and go to state 31
    CADENA          shift and go to state 32
    VAR             shift and go to state 33
    VARIABLE_ARRAY  shift and go to state 34

    valor                          shift and go to state 52
    operacion                      shift and go to state 35
    argumentologico                shift and go to state 36
    array_index                    shift and go to state 37
    numero                         shift and go to state 38

state 151

    (140) expresionAritmetica -> VAR ASIGNACION VAR masTerminos EOL .

    $end            reduce using rule 140 (expresionAritmetica -> VAR ASIGNACION VAR masTerminos EOL .)


state 152

    (144) masTerminos -> termino masTerminos .

    EOL             reduce using rule 144 (masTerminos -> termino masTerminos .)


state 153

    (141) termino -> operador numero .

    SUMA            reduce using rule 141 (termino -> operador numero .)
    RESTA           reduce using rule 141 (termino -> operador numero .)
    MULT            reduce using rule 141 (termino -> operador numero .)
    DIV             reduce using rule 141 (termino -> operador numero .)
    POT             reduce using rule 141 (termino -> operador numero .)
    EOL             reduce using rule 141 (termino -> operador numero .)


state 154

    (142) termino -> operador VAR .

    SUMA            reduce using rule 142 (termino -> operador VAR .)
    RESTA           reduce using rule 142 (termino -> operador VAR .)
    MULT            reduce using rule 142 (termino -> operador VAR .)
    DIV             reduce using rule 142 (termino -> operador VAR .)
    POT             reduce using rule 142 (termino -> operador VAR .)
    EOL             reduce using rule 142 (termino -> operador VAR .)


state 155

    (139) expresionAritmetica -> VAR ASIGNACION numero masTerminos EOL .

    $end            reduce using rule 139 (expresionAritmetica -> VAR ASIGNACION numero masTerminos EOL .)


state 156

    (104) variables -> VAR .
    (105) variables -> VAR . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 104 (variables -> VAR .)
    COMA            shift and go to state 190

  ! COMA            [ reduce using rule 104 (variables -> VAR .) ]


state 157

    (98) array_l -> ARRAY . LPAREN elementos RPAREN
    (99) array_l -> ARRAY . LPAREN elementos RPAREN COMA lista

    LPAREN          shift and go to state 191


state 158

    (81) array -> VAR ASIGNACION ARRAY LPAREN elementos . RPAREN EOL

    RPAREN          shift and go to state 192


state 159

    (82) elementos -> lista .

    RPAREN          reduce using rule 82 (elementos -> lista .)


state 160

    (83) elementos -> diccionario .

    RPAREN          reduce using rule 83 (elementos -> diccionario .)


state 161

    (93) lista -> palabras .

    RPAREN          reduce using rule 93 (lista -> palabras .)
    COMA            reduce using rule 93 (lista -> palabras .)


state 162

    (94) lista -> numeros .

    RPAREN          reduce using rule 94 (lista -> numeros .)
    COMA            reduce using rule 94 (lista -> numeros .)


state 163

    (95) lista -> variables .

    RPAREN          reduce using rule 95 (lista -> variables .)
    COMA            reduce using rule 95 (lista -> variables .)


state 164

    (96) lista -> array_l .

    RPAREN          reduce using rule 96 (lista -> array_l .)
    COMA            reduce using rule 96 (lista -> array_l .)


state 165

    (97) lista -> bool .

    RPAREN          reduce using rule 97 (lista -> bool .)
    COMA            reduce using rule 97 (lista -> bool .)


state 166

    (84) diccionario -> clave_dic . ASIGNACION MAYOR valor_dic
    (85) diccionario -> clave_dic . ASIGNACION MAYOR valor_dic COMA diccionario

    ASIGNACION      shift and go to state 193


state 167

    (100) palabras -> CADENA .
    (101) palabras -> CADENA . COMA lista
    (87) clave_dic -> CADENA .

    RPAREN          reduce using rule 100 (palabras -> CADENA .)
    COMA            shift and go to state 194
    ASIGNACION      reduce using rule 87 (clave_dic -> CADENA .)


state 168

    (102) numeros -> numero .
    (103) numeros -> numero . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 102 (numeros -> numero .)
    COMA            shift and go to state 195

  ! COMA            [ reduce using rule 102 (numeros -> numero .) ]


state 169

    (106) bool -> BOOLEANO .
    (107) bool -> BOOLEANO . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 106 (bool -> BOOLEANO .)
    COMA            shift and go to state 196

  ! COMA            [ reduce using rule 106 (bool -> BOOLEANO .) ]


state 170

    (86) clave_dic -> ENTERO .
    (66) numero -> ENTERO .

    ASIGNACION      reduce using rule 86 (clave_dic -> ENTERO .)
    COMA            reduce using rule 66 (numero -> ENTERO .)
    RPAREN          reduce using rule 66 (numero -> ENTERO .)


state 171

    (28) multi_dimensiones -> LBRACKET clave_dic RBRACKET .
    (29) multi_dimensiones -> LBRACKET clave_dic RBRACKET . multi_dimensiones
    (28) multi_dimensiones -> . LBRACKET clave_dic RBRACKET
    (29) multi_dimensiones -> . LBRACKET clave_dic RBRACKET multi_dimensiones

    COMA            reduce using rule 28 (multi_dimensiones -> LBRACKET clave_dic RBRACKET .)
    EOL             reduce using rule 28 (multi_dimensiones -> LBRACKET clave_dic RBRACKET .)
    LBRACKET        shift and go to state 78

    multi_dimensiones              shift and go to state 197

state 172

    (44) else -> ELSE LBRACE lineas RBRACE .

    ELSE            reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)
    ELSEIF          reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)
    $end            reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)
    ECHO            reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)
    VAR             reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)
    COMNT           reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)
    WHILE           reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)
    IF              reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)
    FOR             reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)
    RETURN          reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)
    SALTO           reduce using rule 44 (else -> ELSE LBRACE lineas RBRACE .)


state 173

    (138) lineas -> linea lineas .

    RBRACE          reduce using rule 138 (lineas -> linea lineas .)
    RETURN          reduce using rule 138 (lineas -> linea lineas .)
    ECHO            reduce using rule 138 (lineas -> linea lineas .)
    VAR             reduce using rule 138 (lineas -> linea lineas .)
    COMNT           reduce using rule 138 (lineas -> linea lineas .)
    WHILE           reduce using rule 138 (lineas -> linea lineas .)
    IF              reduce using rule 138 (lineas -> linea lineas .)
    FOR             reduce using rule 138 (lineas -> linea lineas .)
    SALTO           reduce using rule 138 (lineas -> linea lineas .)


state 174

    (130) linea -> ECHO CADENA . EOL
    (21) valor -> CADENA .
    (61) argumentologico -> CADENA . IGUAL VAR
    (62) argumentologico -> CADENA . IGUAL CADENA
    (63) argumentologico -> CADENA . DIFERENTE VAR
    (64) argumentologico -> CADENA . DIFERENTE CADENA

  ! shift/reduce conflict for EOL resolved as shift
    EOL             shift and go to state 198
    COMA            reduce using rule 21 (valor -> CADENA .)
    IGUAL           shift and go to state 68
    DIFERENTE       shift and go to state 69

  ! EOL             [ reduce using rule 21 (valor -> CADENA .) ]


state 175

    (131) linea -> ECHO VAR . EOL
    (22) valor -> VAR .
    (52) argumentologico -> VAR . operador_logico VAR
    (54) argumentologico -> VAR . operador_logico numero
    (55) argumentologico -> VAR . IGUAL BOOLEANO
    (56) argumentologico -> VAR . IGUAL CADENA
    (57) argumentologico -> VAR . DIFERENTE BOOLEANO
    (58) argumentologico -> VAR . DIFERENTE CADENA
    (27) array_index -> VAR . multi_dimensiones
    (68) operador_logico -> . IGUAL
    (69) operador_logico -> . DIFERENTE
    (70) operador_logico -> . MENOR
    (71) operador_logico -> . MAYOR
    (72) operador_logico -> . MENOR_IGUAL
    (73) operador_logico -> . MAYOR_IGUAL
    (28) multi_dimensiones -> . LBRACKET clave_dic RBRACKET
    (29) multi_dimensiones -> . LBRACKET clave_dic RBRACKET multi_dimensiones

  ! shift/reduce conflict for EOL resolved as shift
    EOL             shift and go to state 199
    COMA            reduce using rule 22 (valor -> VAR .)
    IGUAL           shift and go to state 71
    DIFERENTE       shift and go to state 72
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR_IGUAL     shift and go to state 76
    MAYOR_IGUAL     shift and go to state 77
    LBRACKET        shift and go to state 78

  ! EOL             [ reduce using rule 22 (valor -> VAR .) ]

    operador_logico                shift and go to state 70
    multi_dimensiones              shift and go to state 73

state 176

    (132) linea -> VAR ASIGNACION . CADENA EOL
    (80) declaracion_numeros -> VAR ASIGNACION . numero EOL
    (81) array -> VAR ASIGNACION . ARRAY LPAREN elementos RPAREN EOL
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    CADENA          shift and go to state 200
    ARRAY           shift and go to state 54
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    numero                         shift and go to state 201

state 177

    (42) elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE lineas RBRACE
    (43) elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE lineas RBRACE elseif

    LBRACE          shift and go to state 202


state 178

    (108) funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE .

    $end            reduce using rule 108 (funcion -> FUNCTION tipo_funcion LBRACE final_funcion RBRACE .)


state 179

    (111) final_funcion -> RETURN VAR . EOL

    EOL             shift and go to state 203


state 180

    (112) final_funcion -> lineas final_funcion .

    RBRACE          reduce using rule 112 (final_funcion -> lineas final_funcion .)


state 181

    (116) readline -> READLINE LPAREN CADENA RPAREN EOL .

    $end            reduce using rule 116 (readline -> READLINE LPAREN CADENA RPAREN EOL .)


state 182

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE . VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    VAR             shift and go to state 204


state 183

    (122) mas_objetos -> cuerpo_objeto mas_objetos .

    RBRACE          reduce using rule 122 (mas_objetos -> cuerpo_objeto mas_objetos .)


state 184

    (119) cuerpo_objeto -> PUBLIC VAR . EOL
    (13) asignacion -> VAR . ASIGNACION valor EOL

    EOL             shift and go to state 205
    ASIGNACION      shift and go to state 150


state 185

    (120) cuerpo_objeto -> PUBLIC asignacion .

    PUBLIC          reduce using rule 120 (cuerpo_objeto -> PUBLIC asignacion .)
    RBRACE          reduce using rule 120 (cuerpo_objeto -> PUBLIC asignacion .)


state 186

    (37) while -> WHILE LPAREN condicion RPAREN LBRACE . lineas RBRACE
    (137) lineas -> . linea
    (138) lineas -> . linea lineas
    (129) linea -> . echo
    (130) linea -> . ECHO CADENA EOL
    (131) linea -> . ECHO VAR EOL
    (132) linea -> . VAR ASIGNACION CADENA EOL
    (133) linea -> . estructuracontrol
    (134) linea -> . comentario
    (135) linea -> . declaracion_numeros
    (136) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (34) estructuracontrol -> . while
    (35) estructuracontrol -> . if
    (36) estructuracontrol -> . for
    (74) comentario -> . COMNT
    (80) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (81) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (37) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (38) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (39) if -> . if else
    (40) if -> . if elseif else
    (41) if -> . if elseif
    (126) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 130
    VAR             shift and go to state 131
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 206
    linea                          shift and go to state 128
    echo                           shift and go to state 129
    estructuracontrol              shift and go to state 132
    comentario                     shift and go to state 133
    declaracion_numeros            shift and go to state 134
    array                          shift and go to state 135
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 187

    (46) condicion -> argumentologico conector_logico condicion .

    RPAREN          reduce using rule 46 (condicion -> argumentologico conector_logico condicion .)


state 188

    (38) if -> IF LPAREN condicion RPAREN LBRACE . lineas RBRACE
    (137) lineas -> . linea
    (138) lineas -> . linea lineas
    (129) linea -> . echo
    (130) linea -> . ECHO CADENA EOL
    (131) linea -> . ECHO VAR EOL
    (132) linea -> . VAR ASIGNACION CADENA EOL
    (133) linea -> . estructuracontrol
    (134) linea -> . comentario
    (135) linea -> . declaracion_numeros
    (136) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (34) estructuracontrol -> . while
    (35) estructuracontrol -> . if
    (36) estructuracontrol -> . for
    (74) comentario -> . COMNT
    (80) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (81) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (37) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (38) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (39) if -> . if else
    (40) if -> . if elseif else
    (41) if -> . if elseif
    (126) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 130
    VAR             shift and go to state 131
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 207
    linea                          shift and go to state 128
    echo                           shift and go to state 129
    estructuracontrol              shift and go to state 132
    comentario                     shift and go to state 133
    declaracion_numeros            shift and go to state 134
    array                          shift and go to state 135
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 189

    (126) for -> FOR LPAREN asignacion argumentologico EOL . VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> FOR LPAREN asignacion argumentologico EOL . VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> FOR LPAREN asignacion argumentologico EOL . VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    VAR             shift and go to state 208


state 190

    (105) variables -> VAR COMA . lista
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    CADENA          shift and go to state 210
    VAR             shift and go to state 156
    ARRAY           shift and go to state 157
    BOOLEANO        shift and go to state 169
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    lista                          shift and go to state 209
    palabras                       shift and go to state 161
    numeros                        shift and go to state 162
    variables                      shift and go to state 163
    array_l                        shift and go to state 164
    bool                           shift and go to state 165
    numero                         shift and go to state 168

state 191

    (98) array_l -> ARRAY LPAREN . elementos RPAREN
    (99) array_l -> ARRAY LPAREN . elementos RPAREN COMA lista
    (82) elementos -> . lista
    (83) elementos -> . diccionario
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (84) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic
    (85) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic COMA diccionario
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (86) clave_dic -> . ENTERO
    (87) clave_dic -> . CADENA
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    CADENA          shift and go to state 167
    VAR             shift and go to state 156
    ARRAY           shift and go to state 157
    BOOLEANO        shift and go to state 169
    ENTERO          shift and go to state 170
    FLOTANTE        shift and go to state 94

    elementos                      shift and go to state 211
    lista                          shift and go to state 159
    diccionario                    shift and go to state 160
    palabras                       shift and go to state 161
    numeros                        shift and go to state 162
    variables                      shift and go to state 163
    array_l                        shift and go to state 164
    bool                           shift and go to state 165
    clave_dic                      shift and go to state 166
    numero                         shift and go to state 168

state 192

    (81) array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN . EOL

    EOL             shift and go to state 212


state 193

    (84) diccionario -> clave_dic ASIGNACION . MAYOR valor_dic
    (85) diccionario -> clave_dic ASIGNACION . MAYOR valor_dic COMA diccionario

    MAYOR           shift and go to state 213


state 194

    (101) palabras -> CADENA COMA . lista
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    CADENA          shift and go to state 210
    VAR             shift and go to state 156
    ARRAY           shift and go to state 157
    BOOLEANO        shift and go to state 169
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    lista                          shift and go to state 214
    palabras                       shift and go to state 161
    numeros                        shift and go to state 162
    variables                      shift and go to state 163
    array_l                        shift and go to state 164
    bool                           shift and go to state 165
    numero                         shift and go to state 168

state 195

    (103) numeros -> numero COMA . lista
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    CADENA          shift and go to state 210
    VAR             shift and go to state 156
    ARRAY           shift and go to state 157
    BOOLEANO        shift and go to state 169
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    numero                         shift and go to state 168
    lista                          shift and go to state 215
    palabras                       shift and go to state 161
    numeros                        shift and go to state 162
    variables                      shift and go to state 163
    array_l                        shift and go to state 164
    bool                           shift and go to state 165

state 196

    (107) bool -> BOOLEANO COMA . lista
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    CADENA          shift and go to state 210
    VAR             shift and go to state 156
    ARRAY           shift and go to state 157
    BOOLEANO        shift and go to state 169
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    lista                          shift and go to state 216
    palabras                       shift and go to state 161
    numeros                        shift and go to state 162
    variables                      shift and go to state 163
    array_l                        shift and go to state 164
    bool                           shift and go to state 165
    numero                         shift and go to state 168

state 197

    (29) multi_dimensiones -> LBRACKET clave_dic RBRACKET multi_dimensiones .

    COMA            reduce using rule 29 (multi_dimensiones -> LBRACKET clave_dic RBRACKET multi_dimensiones .)
    EOL             reduce using rule 29 (multi_dimensiones -> LBRACKET clave_dic RBRACKET multi_dimensiones .)


state 198

    (130) linea -> ECHO CADENA EOL .

    ECHO            reduce using rule 130 (linea -> ECHO CADENA EOL .)
    VAR             reduce using rule 130 (linea -> ECHO CADENA EOL .)
    COMNT           reduce using rule 130 (linea -> ECHO CADENA EOL .)
    WHILE           reduce using rule 130 (linea -> ECHO CADENA EOL .)
    IF              reduce using rule 130 (linea -> ECHO CADENA EOL .)
    FOR             reduce using rule 130 (linea -> ECHO CADENA EOL .)
    RBRACE          reduce using rule 130 (linea -> ECHO CADENA EOL .)
    RETURN          reduce using rule 130 (linea -> ECHO CADENA EOL .)
    SALTO           reduce using rule 130 (linea -> ECHO CADENA EOL .)


state 199

    (131) linea -> ECHO VAR EOL .

    ECHO            reduce using rule 131 (linea -> ECHO VAR EOL .)
    VAR             reduce using rule 131 (linea -> ECHO VAR EOL .)
    COMNT           reduce using rule 131 (linea -> ECHO VAR EOL .)
    WHILE           reduce using rule 131 (linea -> ECHO VAR EOL .)
    IF              reduce using rule 131 (linea -> ECHO VAR EOL .)
    FOR             reduce using rule 131 (linea -> ECHO VAR EOL .)
    RBRACE          reduce using rule 131 (linea -> ECHO VAR EOL .)
    RETURN          reduce using rule 131 (linea -> ECHO VAR EOL .)
    SALTO           reduce using rule 131 (linea -> ECHO VAR EOL .)


state 200

    (132) linea -> VAR ASIGNACION CADENA . EOL

    EOL             shift and go to state 217


state 201

    (80) declaracion_numeros -> VAR ASIGNACION numero . EOL

    EOL             shift and go to state 102


state 202

    (42) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . lineas RBRACE
    (43) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . lineas RBRACE elseif
    (137) lineas -> . linea
    (138) lineas -> . linea lineas
    (129) linea -> . echo
    (130) linea -> . ECHO CADENA EOL
    (131) linea -> . ECHO VAR EOL
    (132) linea -> . VAR ASIGNACION CADENA EOL
    (133) linea -> . estructuracontrol
    (134) linea -> . comentario
    (135) linea -> . declaracion_numeros
    (136) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (34) estructuracontrol -> . while
    (35) estructuracontrol -> . if
    (36) estructuracontrol -> . for
    (74) comentario -> . COMNT
    (80) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (81) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (37) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (38) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (39) if -> . if else
    (40) if -> . if elseif else
    (41) if -> . if elseif
    (126) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 130
    VAR             shift and go to state 131
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 218
    linea                          shift and go to state 128
    echo                           shift and go to state 129
    estructuracontrol              shift and go to state 132
    comentario                     shift and go to state 133
    declaracion_numeros            shift and go to state 134
    array                          shift and go to state 135
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 203

    (111) final_funcion -> RETURN VAR EOL .

    RBRACE          reduce using rule 111 (final_funcion -> RETURN VAR EOL .)


state 204

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR . ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos

    ASIGNACION      shift and go to state 219


state 205

    (119) cuerpo_objeto -> PUBLIC VAR EOL .

    PUBLIC          reduce using rule 119 (cuerpo_objeto -> PUBLIC VAR EOL .)
    RBRACE          reduce using rule 119 (cuerpo_objeto -> PUBLIC VAR EOL .)


state 206

    (37) while -> WHILE LPAREN condicion RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 220


state 207

    (38) if -> IF LPAREN condicion RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 221


state 208

    (126) for -> FOR LPAREN asignacion argumentologico EOL VAR . SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> FOR LPAREN asignacion argumentologico EOL VAR . RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR . SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    SUMA            shift and go to state 222
    RESTA           shift and go to state 223


state 209

    (105) variables -> VAR COMA lista .

    RPAREN          reduce using rule 105 (variables -> VAR COMA lista .)
    COMA            reduce using rule 105 (variables -> VAR COMA lista .)


state 210

    (100) palabras -> CADENA .
    (101) palabras -> CADENA . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 100 (palabras -> CADENA .)
    COMA            shift and go to state 194

  ! COMA            [ reduce using rule 100 (palabras -> CADENA .) ]


state 211

    (98) array_l -> ARRAY LPAREN elementos . RPAREN
    (99) array_l -> ARRAY LPAREN elementos . RPAREN COMA lista

    RPAREN          shift and go to state 224


state 212

    (81) array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .

    $end            reduce using rule 81 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    ECHO            reduce using rule 81 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    VAR             reduce using rule 81 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    COMNT           reduce using rule 81 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    WHILE           reduce using rule 81 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    IF              reduce using rule 81 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    FOR             reduce using rule 81 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    RBRACE          reduce using rule 81 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    RETURN          reduce using rule 81 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)
    SALTO           reduce using rule 81 (array -> VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL .)


state 213

    (84) diccionario -> clave_dic ASIGNACION MAYOR . valor_dic
    (85) diccionario -> clave_dic ASIGNACION MAYOR . valor_dic COMA diccionario
    (88) valor_dic -> . numero
    (89) valor_dic -> . CADENA
    (90) valor_dic -> . VAR
    (91) valor_dic -> . BOOLEANO
    (92) valor_dic -> . array_l
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista

    CADENA          shift and go to state 227
    VAR             shift and go to state 228
    BOOLEANO        shift and go to state 229
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    ARRAY           shift and go to state 157

    valor_dic                      shift and go to state 225
    numero                         shift and go to state 226
    array_l                        shift and go to state 230

state 214

    (101) palabras -> CADENA COMA lista .

    RPAREN          reduce using rule 101 (palabras -> CADENA COMA lista .)
    COMA            reduce using rule 101 (palabras -> CADENA COMA lista .)


state 215

    (103) numeros -> numero COMA lista .

    RPAREN          reduce using rule 103 (numeros -> numero COMA lista .)
    COMA            reduce using rule 103 (numeros -> numero COMA lista .)


state 216

    (107) bool -> BOOLEANO COMA lista .

    RPAREN          reduce using rule 107 (bool -> BOOLEANO COMA lista .)
    COMA            reduce using rule 107 (bool -> BOOLEANO COMA lista .)


state 217

    (132) linea -> VAR ASIGNACION CADENA EOL .

    ECHO            reduce using rule 132 (linea -> VAR ASIGNACION CADENA EOL .)
    VAR             reduce using rule 132 (linea -> VAR ASIGNACION CADENA EOL .)
    COMNT           reduce using rule 132 (linea -> VAR ASIGNACION CADENA EOL .)
    WHILE           reduce using rule 132 (linea -> VAR ASIGNACION CADENA EOL .)
    IF              reduce using rule 132 (linea -> VAR ASIGNACION CADENA EOL .)
    FOR             reduce using rule 132 (linea -> VAR ASIGNACION CADENA EOL .)
    RBRACE          reduce using rule 132 (linea -> VAR ASIGNACION CADENA EOL .)
    RETURN          reduce using rule 132 (linea -> VAR ASIGNACION CADENA EOL .)
    SALTO           reduce using rule 132 (linea -> VAR ASIGNACION CADENA EOL .)


state 218

    (42) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas . RBRACE
    (43) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas . RBRACE elseif

    RBRACE          shift and go to state 231


state 219

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION . NEW OBJETO LPAREN RPAREN EOL mas_atributos

    NEW             shift and go to state 232


state 220

    (37) while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .

    $end            reduce using rule 37 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 37 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 37 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 37 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 37 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 37 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 37 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 37 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 37 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    SALTO           reduce using rule 37 (while -> WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE .)


state 221

    (38) if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .

    ELSE            reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ELSEIF          reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    $end            reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    SALTO           reduce using rule 38 (if -> IF LPAREN condicion RPAREN LBRACE lineas RBRACE .)


state 222

    (126) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA . SUMA RPAREN LBRACE lineas RBRACE
    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA . SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    SUMA            shift and go to state 233


state 223

    (127) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA . RESTA RPAREN LBRACE lineas RBRACE

    RESTA           shift and go to state 234


state 224

    (98) array_l -> ARRAY LPAREN elementos RPAREN .
    (99) array_l -> ARRAY LPAREN elementos RPAREN . COMA lista

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 98 (array_l -> ARRAY LPAREN elementos RPAREN .)
    COMA            shift and go to state 235

  ! COMA            [ reduce using rule 98 (array_l -> ARRAY LPAREN elementos RPAREN .) ]


state 225

    (84) diccionario -> clave_dic ASIGNACION MAYOR valor_dic .
    (85) diccionario -> clave_dic ASIGNACION MAYOR valor_dic . COMA diccionario

    RPAREN          reduce using rule 84 (diccionario -> clave_dic ASIGNACION MAYOR valor_dic .)
    COMA            shift and go to state 236


state 226

    (88) valor_dic -> numero .

    COMA            reduce using rule 88 (valor_dic -> numero .)
    RPAREN          reduce using rule 88 (valor_dic -> numero .)


state 227

    (89) valor_dic -> CADENA .

    COMA            reduce using rule 89 (valor_dic -> CADENA .)
    RPAREN          reduce using rule 89 (valor_dic -> CADENA .)


state 228

    (90) valor_dic -> VAR .

    COMA            reduce using rule 90 (valor_dic -> VAR .)
    RPAREN          reduce using rule 90 (valor_dic -> VAR .)


state 229

    (91) valor_dic -> BOOLEANO .

    COMA            reduce using rule 91 (valor_dic -> BOOLEANO .)
    RPAREN          reduce using rule 91 (valor_dic -> BOOLEANO .)


state 230

    (92) valor_dic -> array_l .

    COMA            reduce using rule 92 (valor_dic -> array_l .)
    RPAREN          reduce using rule 92 (valor_dic -> array_l .)


state 231

    (42) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .
    (43) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE . elseif
    (42) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (43) elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif

  ! shift/reduce conflict for ELSEIF resolved as shift
    ELSE            reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    $end            reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    SALTO           reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .)
    ELSEIF          shift and go to state 42

  ! ELSEIF          [ reduce using rule 42 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE .) ]

    elseif                         shift and go to state 237

state 232

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW . OBJETO LPAREN RPAREN EOL mas_atributos

    OBJETO          shift and go to state 238


state 233

    (126) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA . RPAREN LBRACE lineas RBRACE
    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA . RPAREN LBRACE SALTO lineas SALTO RBRACE

    RPAREN          shift and go to state 239


state 234

    (127) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA . RPAREN LBRACE lineas RBRACE

    RPAREN          shift and go to state 240


state 235

    (99) array_l -> ARRAY LPAREN elementos RPAREN COMA . lista
    (93) lista -> . palabras
    (94) lista -> . numeros
    (95) lista -> . variables
    (96) lista -> . array_l
    (97) lista -> . bool
    (100) palabras -> . CADENA
    (101) palabras -> . CADENA COMA lista
    (102) numeros -> . numero
    (103) numeros -> . numero COMA lista
    (104) variables -> . VAR
    (105) variables -> . VAR COMA lista
    (98) array_l -> . ARRAY LPAREN elementos RPAREN
    (99) array_l -> . ARRAY LPAREN elementos RPAREN COMA lista
    (106) bool -> . BOOLEANO
    (107) bool -> . BOOLEANO COMA lista
    (66) numero -> . ENTERO
    (67) numero -> . FLOTANTE

    CADENA          shift and go to state 210
    VAR             shift and go to state 156
    ARRAY           shift and go to state 157
    BOOLEANO        shift and go to state 169
    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94

    lista                          shift and go to state 241
    palabras                       shift and go to state 161
    numeros                        shift and go to state 162
    variables                      shift and go to state 163
    array_l                        shift and go to state 164
    bool                           shift and go to state 165
    numero                         shift and go to state 168

state 236

    (85) diccionario -> clave_dic ASIGNACION MAYOR valor_dic COMA . diccionario
    (84) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic
    (85) diccionario -> . clave_dic ASIGNACION MAYOR valor_dic COMA diccionario
    (86) clave_dic -> . ENTERO
    (87) clave_dic -> . CADENA

    ENTERO          shift and go to state 123
    CADENA          shift and go to state 124

    clave_dic                      shift and go to state 166
    diccionario                    shift and go to state 242

state 237

    (43) elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .

    ELSE            reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    ELSEIF          reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    $end            reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    ECHO            reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    VAR             reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    COMNT           reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    WHILE           reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    IF              reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    FOR             reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    RBRACE          reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    RETURN          reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)
    SALTO           reduce using rule 43 (elseif -> ELSEIF LPAREN condicion RPAREN LBRACE lineas RBRACE elseif .)


state 238

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO . LPAREN RPAREN EOL mas_atributos

    LPAREN          shift and go to state 243


state 239

    (126) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN . LBRACE lineas RBRACE
    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN . LBRACE SALTO lineas SALTO RBRACE

    LBRACE          shift and go to state 244


state 240

    (127) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN . LBRACE lineas RBRACE

    LBRACE          shift and go to state 245


state 241

    (99) array_l -> ARRAY LPAREN elementos RPAREN COMA lista .

    RPAREN          reduce using rule 99 (array_l -> ARRAY LPAREN elementos RPAREN COMA lista .)
    COMA            reduce using rule 99 (array_l -> ARRAY LPAREN elementos RPAREN COMA lista .)


state 242

    (85) diccionario -> clave_dic ASIGNACION MAYOR valor_dic COMA diccionario .

    RPAREN          reduce using rule 85 (diccionario -> clave_dic ASIGNACION MAYOR valor_dic COMA diccionario .)


state 243

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN . RPAREN EOL mas_atributos

    RPAREN          shift and go to state 246


state 244

    (126) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE . lineas RBRACE
    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE . SALTO lineas SALTO RBRACE
    (137) lineas -> . linea
    (138) lineas -> . linea lineas
    (129) linea -> . echo
    (130) linea -> . ECHO CADENA EOL
    (131) linea -> . ECHO VAR EOL
    (132) linea -> . VAR ASIGNACION CADENA EOL
    (133) linea -> . estructuracontrol
    (134) linea -> . comentario
    (135) linea -> . declaracion_numeros
    (136) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (34) estructuracontrol -> . while
    (35) estructuracontrol -> . if
    (36) estructuracontrol -> . for
    (74) comentario -> . COMNT
    (80) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (81) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (37) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (38) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (39) if -> . if else
    (40) if -> . if elseif else
    (41) if -> . if elseif
    (126) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    SALTO           shift and go to state 248
    ECHO            shift and go to state 130
    VAR             shift and go to state 131
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 247
    linea                          shift and go to state 128
    echo                           shift and go to state 129
    estructuracontrol              shift and go to state 132
    comentario                     shift and go to state 133
    declaracion_numeros            shift and go to state 134
    array                          shift and go to state 135
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 245

    (127) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE . lineas RBRACE
    (137) lineas -> . linea
    (138) lineas -> . linea lineas
    (129) linea -> . echo
    (130) linea -> . ECHO CADENA EOL
    (131) linea -> . ECHO VAR EOL
    (132) linea -> . VAR ASIGNACION CADENA EOL
    (133) linea -> . estructuracontrol
    (134) linea -> . comentario
    (135) linea -> . declaracion_numeros
    (136) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (34) estructuracontrol -> . while
    (35) estructuracontrol -> . if
    (36) estructuracontrol -> . for
    (74) comentario -> . COMNT
    (80) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (81) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (37) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (38) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (39) if -> . if else
    (40) if -> . if elseif else
    (41) if -> . if elseif
    (126) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 130
    VAR             shift and go to state 131
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 249
    linea                          shift and go to state 128
    echo                           shift and go to state 129
    estructuracontrol              shift and go to state 132
    comentario                     shift and go to state 133
    declaracion_numeros            shift and go to state 134
    array                          shift and go to state 135
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 246

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN . EOL mas_atributos

    EOL             shift and go to state 250


state 247

    (126) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 251


state 248

    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO . lineas SALTO RBRACE
    (137) lineas -> . linea
    (138) lineas -> . linea lineas
    (129) linea -> . echo
    (130) linea -> . ECHO CADENA EOL
    (131) linea -> . ECHO VAR EOL
    (132) linea -> . VAR ASIGNACION CADENA EOL
    (133) linea -> . estructuracontrol
    (134) linea -> . comentario
    (135) linea -> . declaracion_numeros
    (136) linea -> . array
    (14) echo -> . ECHO valores EOL
    (15) echo -> . ECHO valores EOL SALTO
    (34) estructuracontrol -> . while
    (35) estructuracontrol -> . if
    (36) estructuracontrol -> . for
    (74) comentario -> . COMNT
    (80) declaracion_numeros -> . VAR ASIGNACION numero EOL
    (81) array -> . VAR ASIGNACION ARRAY LPAREN elementos RPAREN EOL
    (37) while -> . WHILE LPAREN condicion RPAREN LBRACE lineas RBRACE
    (38) if -> . IF LPAREN condicion RPAREN LBRACE lineas RBRACE
    (39) if -> . if else
    (40) if -> . if elseif else
    (41) if -> . if elseif
    (126) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE
    (127) for -> . FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE
    (128) for -> . FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE

    ECHO            shift and go to state 130
    VAR             shift and go to state 131
    COMNT           shift and go to state 18
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24

    lineas                         shift and go to state 252
    linea                          shift and go to state 128
    echo                           shift and go to state 129
    estructuracontrol              shift and go to state 132
    comentario                     shift and go to state 133
    declaracion_numeros            shift and go to state 134
    array                          shift and go to state 135
    while                          shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17

state 249

    (127) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas . RBRACE

    RBRACE          shift and go to state 253


state 250

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL . mas_atributos
    (124) mas_atributos -> . atributo
    (125) mas_atributos -> . atributo mas_atributos
    (123) atributo -> . VAR RESTA MAYOR ID ASIGNACION CADENA EOL

    VAR             shift and go to state 254

    mas_atributos                  shift and go to state 255
    atributo                       shift and go to state 256

state 251

    (126) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .

    $end            reduce using rule 126 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 126 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 126 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 126 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 126 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 126 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 126 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 126 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 126 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)
    SALTO           reduce using rule 126 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE lineas RBRACE .)


state 252

    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas . SALTO RBRACE

    SALTO           shift and go to state 257


state 253

    (127) for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .

    $end            reduce using rule 127 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    ECHO            reduce using rule 127 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    VAR             reduce using rule 127 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    COMNT           reduce using rule 127 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    WHILE           reduce using rule 127 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    IF              reduce using rule 127 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    FOR             reduce using rule 127 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    RBRACE          reduce using rule 127 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    RETURN          reduce using rule 127 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)
    SALTO           reduce using rule 127 (for -> FOR LPAREN asignacion argumentologico EOL VAR RESTA RESTA RPAREN LBRACE lineas RBRACE .)


state 254

    (123) atributo -> VAR . RESTA MAYOR ID ASIGNACION CADENA EOL

    RESTA           shift and go to state 258


state 255

    (118) objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos .

    $end            reduce using rule 118 (objeto -> CLASE OBJETO LBRACE mas_objetos RBRACE VAR ASIGNACION NEW OBJETO LPAREN RPAREN EOL mas_atributos .)


state 256

    (124) mas_atributos -> atributo .
    (125) mas_atributos -> atributo . mas_atributos
    (124) mas_atributos -> . atributo
    (125) mas_atributos -> . atributo mas_atributos
    (123) atributo -> . VAR RESTA MAYOR ID ASIGNACION CADENA EOL

    $end            reduce using rule 124 (mas_atributos -> atributo .)
    VAR             shift and go to state 254

    atributo                       shift and go to state 256
    mas_atributos                  shift and go to state 259

state 257

    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO . RBRACE

    RBRACE          shift and go to state 260


state 258

    (123) atributo -> VAR RESTA . MAYOR ID ASIGNACION CADENA EOL

    MAYOR           shift and go to state 261


state 259

    (125) mas_atributos -> atributo mas_atributos .

    $end            reduce using rule 125 (mas_atributos -> atributo mas_atributos .)


state 260

    (128) for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .

    $end            reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    ECHO            reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    VAR             reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    COMNT           reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    WHILE           reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    IF              reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    FOR             reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    RBRACE          reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    RETURN          reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)
    SALTO           reduce using rule 128 (for -> FOR LPAREN asignacion argumentologico EOL VAR SUMA SUMA RPAREN LBRACE SALTO lineas SALTO RBRACE .)


state 261

    (123) atributo -> VAR RESTA MAYOR . ID ASIGNACION CADENA EOL

    ID              shift and go to state 262


state 262

    (123) atributo -> VAR RESTA MAYOR ID . ASIGNACION CADENA EOL

    ASIGNACION      shift and go to state 263


state 263

    (123) atributo -> VAR RESTA MAYOR ID ASIGNACION . CADENA EOL

    CADENA          shift and go to state 264


state 264

    (123) atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA . EOL

    EOL             shift and go to state 265


state 265

    (123) atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL .

    VAR             reduce using rule 123 (atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL .)
    $end            reduce using rule 123 (atributo -> VAR RESTA MAYOR ID ASIGNACION CADENA EOL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 40 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 56 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 56 resolved as shift
WARNING: shift/reduce conflict for MULT in state 56 resolved as shift
WARNING: shift/reduce conflict for DIV in state 56 resolved as shift
WARNING: shift/reduce conflict for POT in state 56 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 57 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 57 resolved as shift
WARNING: shift/reduce conflict for MULT in state 57 resolved as shift
WARNING: shift/reduce conflict for DIV in state 57 resolved as shift
WARNING: shift/reduce conflict for POT in state 57 resolved as shift
WARNING: shift/reduce conflict for SALTO in state 58 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 128 resolved as shift
WARNING: shift/reduce conflict for VAR in state 128 resolved as shift
WARNING: shift/reduce conflict for COMNT in state 128 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 128 resolved as shift
WARNING: shift/reduce conflict for IF in state 128 resolved as shift
WARNING: shift/reduce conflict for FOR in state 128 resolved as shift
WARNING: shift/reduce conflict for COMA in state 156 resolved as shift
WARNING: shift/reduce conflict for COMA in state 168 resolved as shift
WARNING: shift/reduce conflict for COMA in state 169 resolved as shift
WARNING: shift/reduce conflict for EOL in state 174 resolved as shift
WARNING: shift/reduce conflict for EOL in state 175 resolved as shift
WARNING: shift/reduce conflict for COMA in state 210 resolved as shift
WARNING: shift/reduce conflict for COMA in state 224 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 231 resolved as shift
WARNING: reduce/reduce conflict in state 29 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (operacion -> ENTERO) in state 29
WARNING: reduce/reduce conflict in state 30 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (operacion -> FLOTANTE) in state 30
WARNING: reduce/reduce conflict in state 31 resolved using rule (valor -> BOOLEANO)
WARNING: rejected rule (argumentologico -> BOOLEANO) in state 31
WARNING: reduce/reduce conflict in state 56 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (numero -> ENTERO) in state 56
WARNING: reduce/reduce conflict in state 56 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (operacion -> ENTERO) in state 56
WARNING: reduce/reduce conflict in state 57 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (numero -> FLOTANTE) in state 57
WARNING: reduce/reduce conflict in state 57 resolved using rule (valor -> FLOTANTE)
WARNING: rejected rule (operacion -> FLOTANTE) in state 57
